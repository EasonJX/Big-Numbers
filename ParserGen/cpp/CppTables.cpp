/* DO NOT EDIT THIS FILE - it is machine generated */
#line 96 "C:\\mytools2015\\ParserGen\\cpp\\Cpp.y"
#include "stdafx.h"
#include "CppParser.h"


#line 33 "C:\\mytools2015\\ParserGen\\lib\\parsergencpp.par"

#pragma warning(disable : 4312)

typedef short TableType;

/****************************************************************************\
* Bitset containing 1-bits for compressed states and 0-bits for              *
* uncompressed states. Used by ParserTable to determine how to               *
* interpret the entry in the action-table                                    *
* Number of bytes in bitset = (statecount-1)/8+1                             *
\****************************************************************************/
static const BYTE compressedSet[38] = {
   0xa5,0x4f,0x85,0xaf,0x35,0xc0,0xd5,0x2e,0x50,0xd9,0xea,0xce,0x59,0x45,0x01,0x00,0xe0,0xe6,0xbd,0x32
  ,0x05,0xff,0xa3,0x83,0x18,0x90,0x36,0xda,0x16,0x7d,0xe2,0x3b,0xfb,0x3a,0x6c,0xdf,0x8a,0x17
}; // Size of table:40 bytes.

/****************************************************************************\
* The action matrix holds the parse action(state,terminal)                   *
* Used in LRParser::parserStep().                                            *
* 2 different formats are used:Compressed and Uncompressed.                  *
*                                                                            *
* Compressed:When there is only 1 possible action in the state.              *
*            or all actions are reduce by the same production.               *
*   If bit 16 (0x8000) is 0, there is only one possible action which is      *
*   encoded as:                                                              *
*      #define   act0001  (void*)((action << 16) | (token&0x7fff)            *
*   State index------+               |                |                      *
*   Highorder 16 bits = action-------+                |                      *
*   Loworder  15 bits = legal token-------------------+                      *
*                                                                            *
*   If bit 16 is 1, the loworder 15 bits is an index.                        *
*      #define   act0002  (void*)((action<<16)  |  0x8000 | (index&0x7fff))  *
*   State index------+               |                |        |             *
*   Highorder 16 bits = action-------+                |        |             *
*   Indicates that this is a multi-item-action-state--+        |             *
*   Loworder  15 bits = index into compressedLasets------------+             *
*                                                                            *
* compressedLasets contains all unique legal lookahead-sets for all          *
* multi-item-action-states.                                                  *
* Number of bytes in each bitset = (terminalcount-1)/8+1                     *
*                                                                            *
* Uncompressed states:                                                       *
*      TableType act0004[] =      { 3, 1, 2, 2,-2, 6, 1 };                   *
*   State index------+              |  |  |                                  *
*   Number of pairs in list---------+  |  |                                  *
*   Legal input symbol-----------------+  |                                  *
*   Action--------------------------------+                                  *
*                                                                            *
* If any uncompressed state has the same actionarray as a previous           *
* generated uncompressed state, a #define is generated to save space.        *
*                                                                            *
*                                                                            *
*   action = getAction(current state, current inputSymbol);                  *
*                                                                            *
*   action <  0   - Reduce by production p, p == -action.                    *
*   action == 0   - Accept. Reduce by production 0.                          *
*   action >  0   - Go to state s (=action),                                 *
*                   and push [s,input,pos] to parser stack.                  *
*                   Then read next symbol from input.                        *
*   action == _ParserError - not found (=unexpected input).                  *
\****************************************************************************/
static const BYTE compressedLasets[270] = {
  /*  0  10 tokens */  0x71,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0xc1,0x01
  /*  1   4 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x02,0x01,0x01
  /*  2   9 tokens */ ,0x70,0x00,0x00,0x00,0x00,0x41,0x00,0x02,0x81,0x01
  /*  3  12 tokens */ ,0x70,0x00,0x00,0x00,0x00,0x45,0x00,0x42,0x83,0x01
  /*  4   2 tokens */ ,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x01
  /*  5   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x00
  /*  6  15 tokens */ ,0x70,0x00,0x00,0x00,0xc0,0x4d,0x00,0x42,0x83,0x01
  /*  7  13 tokens */ ,0x70,0x00,0x00,0x00,0x40,0x45,0x00,0x42,0x83,0x01
  /*  8  31 tokens */ ,0x7e,0x00,0x00,0xff,0xef,0x01,0x08,0x3b,0x81,0x01
  /*  9   5 tokens */ ,0x70,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x80,0x00
  /* 10   2 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x04,0x00,0x00,0x00,0x00
  /* 11   6 tokens */ ,0x00,0x00,0x00,0x00,0x40,0x05,0x00,0x40,0x03,0x00
  /* 12  25 tokens */ ,0x00,0x00,0x00,0x00,0x80,0xfd,0xff,0xe7,0x07,0x00
  /* 13   5 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x45,0x00,0x80,0x00,0x00
  /* 14   9 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x7d,0x00,0x80,0x02,0x00
  /* 15  10 tokens */ ,0x00,0x00,0x00,0x00,0x80,0xfd,0x00,0x80,0x02,0x00
  /* 16  26 tokens */ ,0x02,0x00,0x00,0x00,0x80,0xfd,0xff,0xe7,0x07,0x00
  /* 17   3 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x05,0x00,0x00,0x00,0x00
  /* 18   7 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x4d,0x00,0x40,0x03,0x00
  /* 19   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x02,0x00
  /* 20   9 tokens */ ,0x70,0x00,0x00,0x00,0x00,0x04,0x00,0x42,0x03,0x01
  /* 21  35 tokens */ ,0x7f,0x00,0x00,0xff,0xff,0x01,0x08,0x3b,0xc1,0x03
  /* 22  32 tokens */ ,0x7e,0x00,0x00,0xff,0xef,0x01,0x08,0x3b,0x81,0x03
  /* 23   4 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x40,0x03,0x00
  /* 24  21 tokens */ ,0x00,0x00,0x00,0x00,0x80,0xfd,0xff,0x87,0x02,0x00
  /* 25  33 tokens */ ,0x7e,0x00,0x00,0xff,0xff,0x01,0x08,0x3b,0x81,0x03
  /* 26   3 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x40,0x02,0x00
}; // Size of table:272 bytes.

#define act0000 (void*)0xffff8000    /* reduce by 1 on tokens in set[0]          */
#define act0002 (void*)0xfffe8000    /* reduce by 2 on tokens in set[0]          */
#define act0005 (void*)0xfff8800a    /* reduce by 8 on tokens in set[1]          */
#define act0007 (void*)0xfff68014    /* reduce by 10 on tokens in set[2]         */
#define act0008 (void*)0xfff48014    /* reduce by 12 on tokens in set[2]         */
#define act0009 (void*)0xfff2801e    /* reduce by 14 on tokens in set[3]         */
#define act0010 (void*)0xfff1801e    /* reduce by 15 on tokens in set[3]         */
#define act0011 (void*)0xfff0801e    /* reduce by 16 on tokens in set[3]         */
#define act0014 (void*)0xffb68028    /* reduce by 74 on tokens in set[4]         */
#define act0016 (void*)0xfffc8000    /* reduce by 4 on tokens in set[0]          */
#define act0018 (void*)0xffef8032    /* reduce by 17 on tokens in set[5]         */
#define act0023 (void*)0xff5c803c    /* reduce by 164 on tokens in set[6]        */
#define act0024 (void*)0xfff9800a    /* reduce by 7 on tokens in set[1]          */
#define act0025 (void*)0xfff58014    /* reduce by 11 on tokens in set[2]         */
#define act0026 (void*)0xfff38014    /* reduce by 13 on tokens in set[2]         */
#define act0027 (void*)0x002e0026    /* shift to 46 on LC                        */
#define act0029 (void*)0xffc68046    /* reduce by 58 on tokens in set[7]         */
#define act0031 (void*)0x00170048    /* shift to 23 on NAME                      */
#define act0032 (void*)0xfffd8000    /* reduce by 3 on tokens in set[0]          */
#define act0034 (void*)0xfffb8000    /* reduce by 5 on tokens in set[0]          */
#define act0036 (void*)0x004c0041    /* shift to 76 on RPAR                      */
#define act0037 (void*)0xffb08050    /* reduce by 80 on tokens in set[8]         */
#define act0046 (void*)0xffc5805a    /* reduce by 59 on tokens in set[9]         */
#define act0047 (void*)0xffba801e    /* reduce by 70 on tokens in set[3]         */
#define act0048 (void*)0x00170048    /* shift to 23 on NAME                      */
#define act0050 (void*)0xffb58064    /* reduce by 75 on tokens in set[10]        */
#define act0052 (void*)0xffee8032    /* reduce by 18 on tokens in set[5]         */
#define act0054 (void*)0xffe2806e    /* reduce by 30 on tokens in set[11]        */
#define act0055 (void*)0x0066003f    /* shift to 102 on RB                       */
#define act0057 (void*)0xff908078    /* reduce by 112 on tokens in set[12]       */
#define act0058 (void*)0xff8f8078    /* reduce by 113 on tokens in set[12]       */
#define act0059 (void*)0xff8e8078    /* reduce by 114 on tokens in set[12]       */
#define act0061 (void*)0x006b0040    /* shift to 107 on LPAR                     */
#define act0068 (void*)0xff638082    /* reduce by 157 on tokens in set[13]       */
#define act0070 (void*)0xff77808c    /* reduce by 137 on tokens in set[14]       */
#define act0072 (void*)0xff748096    /* reduce by 140 on tokens in set[15]       */
#define act0075 (void*)0xff5e80a0    /* reduce by 162 on tokens in set[16]       */
#define act0076 (void*)0xffdf806e    /* reduce by 33 on tokens in set[11]        */
#define act0078 (void*)0xffec8032    /* reduce by 20 on tokens in set[5]         */
#define act0079 (void*)0xff6280aa    /* reduce by 158 on tokens in set[17]       */
#define act0081 (void*)0xffe980b4    /* reduce by 23 on tokens in set[18]        */
#define act0083 (void*)0xffd980be    /* reduce by 39 on tokens in set[19]        */
#define act0085 (void*)0xffd680be    /* reduce by 42 on tokens in set[19]        */
#define act0086 (void*)0xffd580be    /* reduce by 43 on tokens in set[19]        */
#define act0087 (void*)0xffd480c8    /* reduce by 44 on tokens in set[20]        */
#define act0089 (void*)0xffe780b4    /* reduce by 25 on tokens in set[18]        */
#define act0090 (void*)0x00a8003f    /* shift to 168 on RB                       */
#define act0091 (void*)0xffde806e    /* reduce by 34 on tokens in set[11]        */
#define act0094 (void*)0xffdb80be    /* reduce by 37 on tokens in set[19]        */
#define act0095 (void*)0xffe480b4    /* reduce by 28 on tokens in set[18]        */
#define act0096 (void*)0xffe0806e    /* reduce by 32 on tokens in set[11]        */
#define act0099 (void*)0xffb9801e    /* reduce by 71 on tokens in set[3]         */
#define act0100 (void*)0x00170048    /* shift to 23 on NAME                      */
#define act0102 (void*)0xffe1806e    /* reduce by 31 on tokens in set[11]        */
#define act0104 (void*)0x00b20041    /* shift to 178 on RPAR                     */
#define act0106 (void*)0xff5d80a0    /* reduce by 163 on tokens in set[16]       */
#define act0110 (void*)0xff868078    /* reduce by 122 on tokens in set[12]       */
#define act0112 (void*)0x00b70048    /* shift to 183 on NAME                     */
#define act0133 (void*)0xffb180d2    /* reduce by 79 on tokens in set[21]        */
#define act0134 (void*)0xffaf8050    /* reduce by 81 on tokens in set[8]         */
#define act0135 (void*)0xffae8050    /* reduce by 82 on tokens in set[8]         */
#define act0137 (void*)0xffad80dc    /* reduce by 83 on tokens in set[22]        */
#define act0138 (void*)0xffac80dc    /* reduce by 84 on tokens in set[22]        */
#define act0141 (void*)0x00d50048    /* shift to 213 on NAME                     */
#define act0142 (void*)0x00d6002e    /* shift to 214 on COLON                    */
#define act0143 (void*)0x00d70040    /* shift to 215 on LPAR                     */
#define act0144 (void*)0x00d80040    /* shift to 216 on LPAR                     */
#define act0146 (void*)0x00da0040    /* shift to 218 on LPAR                     */
#define act0147 (void*)0x00db0028    /* shift to 219 on SEMI                     */
#define act0148 (void*)0x00dc0028    /* shift to 220 on SEMI                     */
#define act0149 (void*)0x00dd0040    /* shift to 221 on LPAR                     */
#define act0151 (void*)0x00df002e    /* shift to 223 on COLON                    */
#define act0153 (void*)0x00250026    /* shift to 37 on LC                        */
#define act0156 (void*)0xff608064    /* reduce by 160 on tokens in set[10]       */
#define act0157 (void*)0xffe880b4    /* reduce by 24 on tokens in set[18]        */
#define act0160 (void*)0xffd380c8    /* reduce by 45 on tokens in set[20]        */
#define act0162 (void*)0xffea80e6    /* reduce by 22 on tokens in set[23]        */
#define act0168 (void*)0xffe680b4    /* reduce by 26 on tokens in set[18]        */
#define act0169 (void*)0xffdd806e    /* reduce by 35 on tokens in set[11]        */
#define act0170 (void*)0x00170048    /* shift to 23 on NAME                      */
#define act0171 (void*)0xffdc806e    /* reduce by 36 on tokens in set[11]        */
#define act0172 (void*)0xffca801e    /* reduce by 54 on tokens in set[3]         */
#define act0173 (void*)0xffc4805a    /* reduce by 60 on tokens in set[9]         */
#define act0174 (void*)0xffb7801e    /* reduce by 73 on tokens in set[3]         */
#define act0175 (void*)0xffb48064    /* reduce by 76 on tokens in set[10]        */
#define act0176 (void*)0xffb28064    /* reduce by 78 on tokens in set[10]        */
#define act0177 (void*)0xff918078    /* reduce by 111 on tokens in set[12]       */
#define act0181 (void*)0x00ec0041    /* shift to 236 on RPAR                     */
#define act0183 (void*)0xff818078    /* reduce by 127 on tokens in set[12]       */
#define act0184 (void*)0x00ee0041    /* shift to 238 on RPAR                     */
#define act0185 (void*)0xff7f8078    /* reduce by 129 on tokens in set[12]       */
#define act0191 (void*)0xff758096    /* reduce by 139 on tokens in set[15]       */
#define act0195 (void*)0xff6e80f0    /* reduce by 146 on tokens in set[24]       */
#define act0196 (void*)0xff6d80f0    /* reduce by 147 on tokens in set[24]       */
#define act0204 (void*)0xffc28050    /* reduce by 62 on tokens in set[8]         */
#define act0207 (void*)0xffc18032    /* reduce by 63 on tokens in set[5]         */
#define act0209 (void*)0xffab80dc    /* reduce by 85 on tokens in set[22]        */
#define act0210 (void*)0xffaa80dc    /* reduce by 86 on tokens in set[22]        */
#define act0212 (void*)0x00f70028    /* shift to 247 on SEMI                     */
#define act0213 (void*)0xff940028    /* reduce by 108 on SEMI                    */
#define act0217 (void*)0x00fc0020    /* shift to 252 on WHILE                    */
#define act0219 (void*)0xffa180dc    /* reduce by 95 on tokens in set[22]        */
#define act0220 (void*)0xffa080dc    /* reduce by 96 on tokens in set[22]        */
#define act0222 (void*)0x0100002e    /* shift to 256 on COLON                    */
#define act0223 (void*)0xff9d80dc    /* reduce by 99 on tokens in set[22]        */
#define act0225 (void*)0x01040024    /* shift to 260 on CATCH                    */
#define act0226 (void*)0xff6180aa    /* reduce by 159 on tokens in set[17]       */
#define act0228 (void*)0xffd880be    /* reduce by 40 on tokens in set[19]        */
#define act0232 (void*)0xffda80be    /* reduce by 38 on tokens in set[19]        */
#define act0234 (void*)0xff8c8078    /* reduce by 116 on tokens in set[12]       */
#define act0235 (void*)0xff8b8078    /* reduce by 117 on tokens in set[12]       */
#define act0236 (void*)0xff8a8078    /* reduce by 118 on tokens in set[12]       */
#define act0237 (void*)0xff828078    /* reduce by 126 on tokens in set[12]       */
#define act0238 (void*)0xff808078    /* reduce by 128 on tokens in set[12]       */
#define act0241 (void*)0xffc38050    /* reduce by 61 on tokens in set[8]         */
#define act0245 (void*)0xffbb8032    /* reduce by 69 on tokens in set[5]         */
#define act0246 (void*)0xffa980dc    /* reduce by 87 on tokens in set[22]        */
#define act0247 (void*)0xffa880dc    /* reduce by 88 on tokens in set[22]        */
#define act0248 (void*)0xffa780dc    /* reduce by 89 on tokens in set[22]        */
#define act0249 (void*)0x010e0041    /* shift to 270 on RPAR                     */
#define act0251 (void*)0x010f0041    /* shift to 271 on RPAR                     */
#define act0252 (void*)0x01100040    /* shift to 272 on LPAR                     */
#define act0253 (void*)0x01110028    /* shift to 273 on SEMI                     */
#define act0256 (void*)0xff9e80dc    /* reduce by 98 on tokens in set[22]        */
#define act0257 (void*)0xff9c80dc    /* reduce by 100 on tokens in set[22]       */
#define act0259 (void*)0xff9a80fa    /* reduce by 102 on tokens in set[25]       */
#define act0260 (void*)0x01140040    /* shift to 276 on LPAR                     */
#define act0261 (void*)0xff5f8064    /* reduce by 161 on tokens in set[10]       */
#define act0262 (void*)0xffcd8104    /* reduce by 51 on tokens in set[26]        */
#define act0263 (void*)0x0115003f    /* shift to 277 on RB                       */
#define act0265 (void*)0xff7d0041    /* reduce by 131 on RPAR                    */
#define act0267 (void*)0xffc08032    /* reduce by 64 on tokens in set[5]         */
#define act0268 (void*)0xffbd8032    /* reduce by 67 on tokens in set[5]         */
#define act0269 (void*)0xffbc8032    /* reduce by 68 on tokens in set[5]         */
#define act0274 (void*)0x00250026    /* shift to 37 on LC                        */
#define act0275 (void*)0xff9980fa    /* reduce by 103 on tokens in set[25]       */
#define act0277 (void*)0xffcc8104    /* reduce by 52 on tokens in set[26]        */
#define act0278 (void*)0x011f0041    /* shift to 287 on RPAR                     */
#define act0280 (void*)0xffa480dc    /* reduce by 92 on tokens in set[22]        */
#define act0281 (void*)0x01210041    /* shift to 289 on RPAR                     */
#define act0282 (void*)0x01220028    /* shift to 290 on SEMI                     */
#define act0283 (void*)0xff9f80dc    /* reduce by 97 on tokens in set[22]        */
#define act0284 (void*)0x01230041    /* shift to 291 on RPAR                     */
#define act0286 (void*)0xff970041    /* reduce by 105 on RPAR                    */
#define act0287 (void*)0xffcf8104    /* reduce by 49 on tokens in set[26]        */
#define act0289 (void*)0x01280028    /* shift to 296 on SEMI                     */
#define act0291 (void*)0x00250026    /* shift to 37 on LC                        */
#define act0295 (void*)0xffa580dc    /* reduce by 91 on tokens in set[22]        */
#define act0296 (void*)0xffa380dc    /* reduce by 93 on tokens in set[22]        */
#define act0297 (void*)0x012b0041    /* shift to 299 on RPAR                     */
#define act0298 (void*)0xff9880fa    /* reduce by 104 on tokens in set[25]       */
#define act0300 (void*)0xffa280dc    /* reduce by 94 on tokens in set[22]        */

static const TableType act0001[] = {  10,   0,   0,   4,   9,   5,  12,   6,  14,  40,  -6
                                        ,  57,  -6,  64,  -6,  70,   5,  71,   4,  72,  -6};
static const TableType act0003[] = {   4,  40,  16,  57,  21,  64,  22,  72,  23};
static const TableType act0004[] = {   9,   4, -13,   5, -13,   6, -13,  40, -13,  57, -13
                                        ,  64, -13,  70,  24,  71, -13,  72, -13};
static const TableType act0006[] = {   8,   4,   9,   5,  12,   6,  14,  40,  -9,  57,  -9
                                        ,  64,  -9,  71,  26,  72,  -9};
static const TableType act0012[] = {   2,  38, -56,  72,  29};
static const TableType act0013[] = {   2,  38,  31,  72,  23};
static const TableType act0015[] = {   2,  40,  32,  42,  33};
static const TableType act0017[] = {   5,  38,  37,  40, -21,  42, -21,  62,  35,  64,  36};
static const TableType act0019[] = {   5,  40, -19,  42, -19,  43,  38,  62,  40,  64,  39};
static const TableType act0020[] = {   7,  40, -22,  42, -22,  43, -22,  46, -22,  62, -22
                                        ,  64,  41,  65, -22};
static const TableType act0021[] = {   3,  57,  21,  64,  22,  72,  23};
static const TableType act0028[] = {  13,   4, -55,   5, -55,   6, -55,  38, -57,  40, -55
                                        ,  42, -55,  46, -55,  57, -55,  62, -55,  64, -55
                                        ,  65, -55,  71, -55,  72, -55};
static const TableType act0030[] = {  13,   4, -72,   5, -72,   6, -72,  38,  48,  40, -72
                                        ,  42, -72,  46, -72,  57, -72,  62, -72,  64, -72
                                        ,  65, -72,  71, -72,  72, -72};
static const TableType act0035[] = {  12,   1,  75,   2,  58,   3,  57,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  63,  54
                                        ,  64,  56,  72,  59};
static const TableType act0038[] = {  12,   1,  75,   2,  58,   3,  57,  38,  80,  51,  66
                                        ,  56,  62,  57,  67,  59,  61,  60,  63,  61,  65
                                        ,  64,  56,  72,  59};
static const TableType act0039[] = {   6,   4,   9,   5,  12,   6,  14,  41,  86,  65,  81
                                        ,  70,  88};
static const TableType act0040[] = {  12,   1,  75,   2,  58,   3,  57,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  63,  89
                                        ,  64,  56,  72,  59};
static const TableType act0041[] = {   7,   4,   9,   5,  12,   6,  14,  41,  86,  65,  91
                                        ,  70,  88,  72,  23};
static const TableType act0042[] = {   7,  40, -27,  42, -27,  43, -27,  46, -27,  62,  40
                                        ,  64,  39,  65, -27};
static const TableType act0043[] = {   6,  38, -29,  40, -29,  42, -29,  62,  35,  64,  36
                                        ,  65, -29};
static const TableType act0044[] = {   3,  62,  40,  64,  39,  65,  95};
static const TableType act0045[] = {   3,  62,  35,  64,  36,  65,  96};
static const TableType act0049[] = {   2,  39,  99,  42, 100};
static const TableType act0051[] = {   3,  39, -77,  42, -77,  43, 101};
static const TableType act0053[] = {   4,  40, -21,  42, -21,  62,  35,  64,  36};
static const TableType act0056[] = {  15,   1,  75,   2,  58,   3,  57,   4,   9,   5,  12
                                        ,   6,  14,  51,  66,  56,  62,  57,  67,  59,  61
                                        ,  60,  63,  61,  65,  64,  56,  70,  88,  72,  59};
static const TableType act0060[] = {  26,   1, 106,  39,-115,  40,-115,  42,-115,  43,-115
                                        ,  44,-115,  45,-115,  46,-115,  47,-115,  48,-115
                                        ,  49,-115,  50,-115,  51,-115,  52,-115,  53,-115
                                        ,  54,-115,  55,-115,  56,-115,  57,-115,  58,-115
                                        ,  61,-115,  62,-115,  63,-115,  64,-115,  65,-115
                                        ,  66,-115};
static const TableType act0062[] = {  11,   1,  75,   2,  58,   3,  57,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  64,  56
                                        ,  72,  59};
static const TableType act0064[] = {  25,  39,-154,  40,-154,  42,-154,  43,-154,  44,-154
                                        ,  45,-154,  46,-154,  47,-154,  48,-154,  49,-154
                                        ,  50,-154,  51,-154,  52,-154,  53,-154,  54,-154
                                        ,  55,-154,  56,-154,  57,-154,  58,-154,  61, 110
                                        ,  62, 111,  63,-154,  64, 113,  65,-154,  66, 112};
static const TableType act0069[] = {   9,  39,-133,  40,-133,  42,-133,  43, 120,  44, 119
                                        ,  45, 118,  46,-133,  63,-133,  65,-133};
static const TableType act0071[] = {  10,  39,-138,  40,-138,  42,-138,  43,-138,  44,-138
                                        ,  45,-138,  46,-138,  47, 121,  63,-138,  65,-138};
static const TableType act0073[] = {  11,  39,-141,  40,-141,  42,-141,  43,-141,  44,-141
                                        ,  45,-141,  46,-141,  47,-141,  48, 122,  63,-141
                                        ,  65,-141};
static const TableType act0074[] = {  21,  39,-143,  40,-143,  42,-143,  43,-143,  44,-143
                                        ,  45,-143,  46,-143,  47,-143,  48,-143,  49, 130
                                        ,  50, 129,  51, 128,  52, 124,  53, 123,  54, 127
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-143
                                        ,  65,-143};
static const TableType act0077[] = {  31,   1,  75,   2,  58,   3,  57,   4,   9,   5,  12
                                        ,   6,  14,  24, 140,  25, 141,  26, 143,  27, 149
                                        ,  28, 150,  29, 151,  30, 147,  31, 148,  32, 144
                                        ,  33, 145,  34, 146,  35, 153,  37, 152,  38,  37
                                        ,  39, 133,  40, 137,  51,  66,  56,  62,  57,  67
                                        ,  59,  61,  60,  63,  61,  65,  64,  56,  71,  26
                                        ,  72, 154};
static const TableType act0082[] = {   2,  42, 158,  65, 157};
static const TableType act0084[] = {   9,   4,   9,   5,  12,   6,  14,  42, -48,  57, 163
                                        ,  62, -48,  64, 164,  65, -48,  72,  23};
static const TableType act0088[] = {   5,  42, -48,  57, 167,  62, -48,  64, 166,  65, -48};
static const TableType act0092[] = {   2,  42, 170,  65, 169};
static const TableType act0093[] = {   2,  42, 158,  65, 171};
static const TableType act0097[] = {   5,   4,   9,   5,  12,   6,  14,  39, 172,  71,  26};
static const TableType act0098[] = {   2,  39, 174,  42, 100};
static const TableType act0103[] = {   2,  42, 117,  65, 177};
static const TableType act0105[] = {   7,   4,   9,   5,  12,   6,  14,  57, 167,  62, -48
                                        ,  64, 166,  65, -48};
static const TableType act0108[] = {  25,  39,-120,  40,-120,  42,-120,  43,-120,  44,-120
                                        ,  45,-120,  46,-120,  47,-120,  48,-120,  49,-120
                                        ,  50,-120,  51,-120,  52,-120,  53,-120,  54,-120
                                        ,  55,-120,  56,-120,  57,-120,  58,-120,  61, 110
                                        ,  62, 111,  63,-120,  64, 113,  65,-120,  66, 112};
static const TableType act0109[] = {  25,  39,-121,  40,-121,  42,-121,  43,-121,  44,-121
                                        ,  45,-121,  46,-121,  47,-121,  48,-121,  49,-121
                                        ,  50,-121,  51,-121,  52,-121,  53,-121,  54,-121
                                        ,  55,-121,  56,-121,  57,-121,  58,-121,  61, 110
                                        ,  62, 111,  63,-121,  64, 113,  65,-121,  66, 112};
static const TableType act0113[] = {  12,   1,  75,   2,  58,   3,  57,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  64,  56
                                        ,  65, 185,  72,  59};
static const TableType act0114[] = {  25,  39,-123,  40,-123,  42,-123,  43,-123,  44,-123
                                        ,  45,-123,  46,-123,  47,-123,  48,-123,  49,-123
                                        ,  50,-123,  51,-123,  52,-123,  53,-123,  54,-123
                                        ,  55,-123,  56,-123,  57,-123,  58,-123,  61, 110
                                        ,  62, 111,  63,-123,  64, 113,  65,-123,  66, 112};
static const TableType act0115[] = {  25,  39,-124,  40,-124,  42,-124,  43,-124,  44,-124
                                        ,  45,-124,  46,-124,  47,-124,  48,-124,  49,-124
                                        ,  50,-124,  51,-124,  52,-124,  53,-124,  54,-124
                                        ,  55,-124,  56,-124,  57,-124,  58,-124,  61, 110
                                        ,  62, 111,  63,-124,  64, 113,  65,-124,  66, 112};
static const TableType act0116[] = {  25,  39,-125,  40,-125,  42,-125,  43,-125,  44,-125
                                        ,  45,-125,  46,-125,  47,-125,  48,-125,  49,-125
                                        ,  50,-125,  51,-125,  52,-125,  53,-125,  54,-125
                                        ,  55,-125,  56,-125,  57,-125,  58,-125,  61, 110
                                        ,  62, 111,  63,-125,  64, 113,  65,-125,  66, 112};
static const TableType act0136[] = {   9,   4,   9,   5,  12,   6,  14,  40, 204,  46, 208
                                        ,  57,  21,  64,  22,  71,  26,  72,  23};
static const TableType act0139[] = {   2,  40, 209,  42, 117};
static const TableType act0140[] = {  12,   1,  75,   2,  58,   3,  57,  40, 210,  51,  66
                                        ,  56,  62,  57,  67,  59,  61,  60,  63,  61,  65
                                        ,  64,  56,  72,  59};
static const TableType act0145[] = {  26,   1,  75,   2,  58,   3,  57,  24, 140,  25, 141
                                        ,  26, 143,  27, 149,  28, 150,  29, 151,  30, 147
                                        ,  31, 148,  32, 144,  33, 145,  34, 146,  35, 153
                                        ,  37, 152,  38,  37,  40, 137,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  64,  56
                                        ,  72, 154};
static const TableType act0154[] = {  22,  40,-114,  42,-114,  43,-114,  44,-114,  45,-114
                                        ,  46,-108,  47,-114,  48,-114,  49,-114,  50,-114
                                        ,  51,-114,  52,-114,  53,-114,  54,-114,  55,-114
                                        ,  56,-114,  57,-114,  58,-114,  61,-114,  62,-114
                                        ,  64,-114,  66,-114};
static const TableType act0155[] = {   2,  39, 226,  42, 227};
static const TableType act0158[] = {   5,   4,   9,   5,  12,   6,  14,  41,  86,  70,  88};
static const TableType act0159[] = {   4,  42, -41,  62,  40,  64,  39,  65, -41};
static const TableType act0161[] = {   3,  42, -46,  62, 229,  65, -46};
static const TableType act0163[] = {   6,  42, -48,  57, 163,  62, -48,  64, 164,  65, -48
                                        ,  72,  23};
static const TableType act0164[] = {   5,  57, 163,  62, -48,  64, 164,  65, -48,  72,  23};
static const TableType act0165[] = {   3,  42, -47,  62, 229,  65, -47};
static const TableType act0166[] = {   4,  57, 167,  62, -48,  64, 166,  65, -48};
static const TableType act0179[] = {  22,   1, 106,  42,-115,  43,-115,  44,-115,  45,-115
                                        ,  47,-115,  48,-115,  49,-115,  50,-115,  51,-115
                                        ,  52,-115,  53,-115,  54,-115,  55,-115,  56,-115
                                        ,  57,-115,  58,-115,  61,-115,  62,-115,  64,-115
                                        ,  65, 234,  66,-115};
static const TableType act0180[] = {   2,  42, 117,  65, 235};
static const TableType act0182[] = {   2,  42, 117,  63, 237};
static const TableType act0186[] = {   5,  42, 239,  43, 120,  44, 119,  45, 118,  65,-130};
static const TableType act0187[] = {   9,  39,-132,  40,-132,  42,-132,  43, 120,  44, 119
                                        ,  45, 118,  46,-132,  63,-132,  65,-132};
static const TableType act0188[] = {   4,  43, 120,  44, 119,  45, 118,  46, 240};
static const TableType act0189[] = {   9,  39,-135,  40,-135,  42,-135,  43, 120,  44, 119
                                        ,  45, 118,  46,-135,  63,-135,  65,-135};
static const TableType act0190[] = {   9,  39,-136,  40,-136,  42,-136,  43, 120,  44, 119
                                        ,  45, 118,  46,-136,  63,-136,  65,-136};
static const TableType act0192[] = {  21,  39,-142,  40,-142,  42,-142,  43,-142,  44,-142
                                        ,  45,-142,  46,-142,  47,-142,  48,-142,  49, 130
                                        ,  50, 129,  51, 128,  52, 124,  53, 123,  54, 127
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-142
                                        ,  65,-142};
static const TableType act0193[] = {  21,  39,-144,  40,-144,  42,-144,  43,-144,  44,-144
                                        ,  45,-144,  46,-144,  47,-144,  48,-144,  49,-144
                                        ,  50,-144,  51,-144,  52,-144,  53,-144,  54, 127
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-144
                                        ,  65,-144};
static const TableType act0194[] = {  21,  39,-145,  40,-145,  42,-145,  43,-145,  44,-145
                                        ,  45,-145,  46,-145,  47,-145,  48,-145,  49,-145
                                        ,  50,-145,  51,-145,  52,-145,  53, 123,  54, 127
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-145
                                        ,  65,-145};
static const TableType act0197[] = {  21,  39,-148,  40,-148,  42,-148,  43,-148,  44,-148
                                        ,  45,-148,  46,-148,  47,-148,  48,-148,  49,-148
                                        ,  50,-148,  51,-148,  52,-148,  53,-148,  54,-148
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-148
                                        ,  65,-148};
static const TableType act0198[] = {  21,  39,-149,  40,-149,  42,-149,  43,-149,  44,-149
                                        ,  45,-149,  46,-149,  47,-149,  48,-149,  49,-149
                                        ,  50,-149,  51,-149,  52, 124,  53, 123,  54, 127
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-149
                                        ,  65,-149};
static const TableType act0199[] = {  21,  39,-150,  40,-150,  42,-150,  43,-150,  44,-150
                                        ,  45,-150,  46,-150,  47,-150,  48,-150,  49,-150
                                        ,  50,-150,  51, 128,  52, 124,  53, 123,  54, 127
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-150
                                        ,  65,-150};
static const TableType act0200[] = {  21,  39,-151,  40,-151,  42,-151,  43,-151,  44,-151
                                        ,  45,-151,  46,-151,  47,-151,  48,-151,  49,-151
                                        ,  50, 129,  51, 128,  52, 124,  53, 123,  54, 127
                                        ,  55, 131,  56, 132,  57, 125,  58, 126,  63,-151
                                        ,  65,-151};
static const TableType act0201[] = {  21,  39,-152,  40,-152,  42,-152,  43,-152,  44,-152
                                        ,  45,-152,  46,-152,  47,-152,  48,-152,  49,-152
                                        ,  50,-152,  51,-152,  52,-152,  53,-152,  54,-152
                                        ,  55,-152,  56,-152,  57, 125,  58, 126,  63,-152
                                        ,  65,-152};
static const TableType act0202[] = {  21,  39,-153,  40,-153,  42,-153,  43,-153,  44,-153
                                        ,  45,-153,  46,-153,  47,-153,  48,-153,  49,-153
                                        ,  50,-153,  51,-153,  52,-153,  53,-153,  54,-153
                                        ,  55,-153,  56,-153,  57, 125,  58, 126,  63,-153
                                        ,  65,-153};
static const TableType act0203[] = {   2,  40, 241,  42, 242};
static const TableType act0205[] = {   6,  40, -66,  42, -66,  43, 243,  46, 244,  62,  40
                                        ,  64,  39};
static const TableType act0206[] = {   4,  40, -65,  42, -65,  62,  35,  64,  36};
static const TableType act0211[] = {   2,  40, 246,  42, 117};
static const TableType act0215[] = {  12,   1,  75,   2,  58,   3,  57,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  64,  56
                                        ,  65,-109,  72,  59};
static const TableType act0218[] = {  12,   1,  75,   2,  58,   3,  57,  40,-155,  51,  66
                                        ,  56,  62,  57,  67,  59,  61,  60,  63,  61,  65
                                        ,  64,  56,  72,  59};
static const TableType act0224[] = {   2,  40, 257,  42, 117};
static const TableType act0229[] = {  12,   1,  75,   2,  58,   3,  57,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  63, 262
                                        ,  64,  56,  72,  59};
static const TableType act0230[] = {   3,  42, -50,  62, 229,  65, -50};
static const TableType act0231[] = {   2,  62, 229,  65, 264};
static const TableType act0233[] = {  25,  39,-119,  40,-119,  42,-119,  43,-119,  44,-119
                                        ,  45,-119,  46,-119,  47,-119,  48,-119,  49,-119
                                        ,  50,-119,  51,-119,  52,-119,  53,-119,  54,-119
                                        ,  55,-119,  56,-119,  57,-119,  58,-119,  61, 110
                                        ,  62, 111,  63,-119,  64, 113,  65,-119,  66, 112};
static const TableType act0242[] = {   4,  46, 208,  57,  21,  64,  22,  72,  23};
static const TableType act0250[] = {   3,  40,-110,  42, 117,  65,-110};
static const TableType act0254[] = {   3,  40,-156,  42, 117,  65,-156};
static const TableType act0255[] = {   2,  42, 117,  65, 274};
static const TableType act0258[] = {  33,   1,-101,   2,-101,   3,-101,   4,-101,   5,-101
                                        ,   6,-101,  24,-101,  25,-101,  26,-101,  27,-101
                                        ,  28,-101,  29,-101,  30,-101,  31,-101,  32,-101
                                        ,  33,-101,  34,-101,  35,-101,  36, 260,  37,-101
                                        ,  38,-101,  39,-101,  40,-101,  51,-101,  56,-101
                                        ,  57,-101,  59,-101,  60,-101,  61,-101,  64,-101
                                        ,  71,-101,  72,-101,  73,-101};
static const TableType act0264[] = {   4,  42, -53,  62, -53,  64, 278,  65, -53};
static const TableType act0266[] = {   9,  39,-134,  40,-134,  42,-134,  43,-134,  44,-134
                                        ,  45, 118,  46,-134,  63,-134,  65,-134};
static const TableType act0273[] = {  12,   1,  75,   2,  58,   3,  57,  40,-109,  51,  66
                                        ,  56,  62,  57,  67,  59,  61,  60,  63,  61,  65
                                        ,  64,  56,  72,  59};
static const TableType act0276[] = {   4,   4,   9,   5,  12,   6,  14,  41, 286};
static const TableType act0279[] = {  32,   1, -90,   2, -90,   3, -90,   4, -90,   5, -90
                                        ,   6, -90,  24, -90,  25, -90,  26, -90,  27, -90
                                        ,  28, -90,  29, -90,  30, -90,  31, -90,  32, -90
                                        ,  33, -90,  34, -90,  35, -90,  37, -90,  38, -90
                                        ,  39, -90,  40, -90,  51, -90,  56, -90,  57, -90
                                        ,  59, -90,  60, -90,  61, -90,  64, -90,  71, -90
                                        ,  72, -90,  73, 288};
static const TableType act0285[] = {   7,   4,   9,   5,  12,   6,  14,  57, 293,  64, 294
                                        ,  65,-107,  72,  23};
static const TableType act0290[] = {  12,   1,  75,   2,  58,   3,  57,  51,  66,  56,  62
                                        ,  57,  67,  59,  61,  60,  63,  61,  65,  64,  56
                                        ,  65,-155,  72,  59};
static const TableType act0292[] = {   3,  62,  40,  64,  39,  65,-106};
static const TableType act0293[] = {   3,  57, 293,  64, 294,  72,  23};

// Total size of uncompressed actNNNN tables:4652 bytes.

#define act0022 act0021 /* Saved  16 bytes */
#define act0033 act0021 /* Saved  16 bytes */
#define act0063 act0062 /* Saved  48 bytes */
#define act0065 act0062 /* Saved  48 bytes */
#define act0066 act0062 /* Saved  48 bytes */
#define act0067 act0062 /* Saved  48 bytes */
#define act0080 act0038 /* Saved  52 bytes */
#define act0101 act0062 /* Saved  48 bytes */
#define act0107 act0056 /* Saved  64 bytes */
#define act0111 act0062 /* Saved  48 bytes */
#define act0117 act0062 /* Saved  48 bytes */
#define act0118 act0062 /* Saved  48 bytes */
#define act0119 act0062 /* Saved  48 bytes */
#define act0120 act0062 /* Saved  48 bytes */
#define act0121 act0062 /* Saved  48 bytes */
#define act0122 act0062 /* Saved  48 bytes */
#define act0123 act0062 /* Saved  48 bytes */
#define act0124 act0062 /* Saved  48 bytes */
#define act0125 act0062 /* Saved  48 bytes */
#define act0126 act0062 /* Saved  48 bytes */
#define act0127 act0062 /* Saved  48 bytes */
#define act0128 act0062 /* Saved  48 bytes */
#define act0129 act0062 /* Saved  48 bytes */
#define act0130 act0062 /* Saved  48 bytes */
#define act0131 act0062 /* Saved  48 bytes */
#define act0132 act0062 /* Saved  48 bytes */
#define act0150 act0062 /* Saved  48 bytes */
#define act0152 act0062 /* Saved  48 bytes */
#define act0167 act0088 /* Saved  24 bytes */
#define act0178 act0062 /* Saved  48 bytes */
#define act0208 act0062 /* Saved  48 bytes */
#define act0214 act0145 /* Saved 108 bytes */
#define act0216 act0215 /* Saved  52 bytes */
#define act0221 act0062 /* Saved  48 bytes */
#define act0227 act0038 /* Saved  52 bytes */
#define act0239 act0062 /* Saved  48 bytes */
#define act0240 act0062 /* Saved  48 bytes */
#define act0243 act0038 /* Saved  52 bytes */
#define act0244 act0062 /* Saved  48 bytes */
#define act0270 act0145 /* Saved 108 bytes */
#define act0271 act0145 /* Saved 108 bytes */
#define act0272 act0215 /* Saved  52 bytes */
#define act0288 act0145 /* Saved 108 bytes */
#define act0294 act0293 /* Saved  16 bytes */
#define act0299 act0145 /* Saved 108 bytes */

static const void *action[301] = {
   act0000,act0001,act0002,act0003,act0004,act0005,act0006,act0007,act0008,act0009
  ,act0010,act0011,act0012,act0013,act0014,act0015,act0016,act0017,act0018,act0019
  ,act0020,act0021,act0022,act0023,act0024,act0025,act0026,act0027,act0028,act0029
  ,act0030,act0031,act0032,act0033,act0034,act0035,act0036,act0037,act0038,act0039
  ,act0040,act0041,act0042,act0043,act0044,act0045,act0046,act0047,act0048,act0049
  ,act0050,act0051,act0052,act0053,act0054,act0055,act0056,act0057,act0058,act0059
  ,act0060,act0061,act0062,act0063,act0064,act0065,act0066,act0067,act0068,act0069
  ,act0070,act0071,act0072,act0073,act0074,act0075,act0076,act0077,act0078,act0079
  ,act0080,act0081,act0082,act0083,act0084,act0085,act0086,act0087,act0088,act0089
  ,act0090,act0091,act0092,act0093,act0094,act0095,act0096,act0097,act0098,act0099
  ,act0100,act0101,act0102,act0103,act0104,act0105,act0106,act0107,act0108,act0109
  ,act0110,act0111,act0112,act0113,act0114,act0115,act0116,act0117,act0118,act0119
  ,act0120,act0121,act0122,act0123,act0124,act0125,act0126,act0127,act0128,act0129
  ,act0130,act0131,act0132,act0133,act0134,act0135,act0136,act0137,act0138,act0139
  ,act0140,act0141,act0142,act0143,act0144,act0145,act0146,act0147,act0148,act0149
  ,act0150,act0151,act0152,act0153,act0154,act0155,act0156,act0157,act0158,act0159
  ,act0160,act0161,act0162,act0163,act0164,act0165,act0166,act0167,act0168,act0169
  ,act0170,act0171,act0172,act0173,act0174,act0175,act0176,act0177,act0178,act0179
  ,act0180,act0181,act0182,act0183,act0184,act0185,act0186,act0187,act0188,act0189
  ,act0190,act0191,act0192,act0193,act0194,act0195,act0196,act0197,act0198,act0199
  ,act0200,act0201,act0202,act0203,act0204,act0205,act0206,act0207,act0208,act0209
  ,act0210,act0211,act0212,act0213,act0214,act0215,act0216,act0217,act0218,act0219
  ,act0220,act0221,act0222,act0223,act0224,act0225,act0226,act0227,act0228,act0229
  ,act0230,act0231,act0232,act0233,act0234,act0235,act0236,act0237,act0238,act0239
  ,act0240,act0241,act0242,act0243,act0244,act0245,act0246,act0247,act0248,act0249
  ,act0250,act0251,act0252,act0253,act0254,act0255,act0256,act0257,act0258,act0259
  ,act0260,act0261,act0262,act0263,act0264,act0265,act0266,act0267,act0268,act0269
  ,act0270,act0271,act0272,act0273,act0274,act0275,act0276,act0277,act0278,act0279
  ,act0280,act0281,act0282,act0283,act0284,act0285,act0286,act0287,act0288,act0289
  ,act0290,act0291,act0292,act0293,act0294,act0295,act0296,act0297,act0298,act0299
  ,act0300
}; // Size of table:2408 bytes.

/****************************************************************************\
* The successor matrix is used when the parser has reduced by prod A -> alfa *
* Used by LRParser to find newstate = successor(state,A).                    *
*                                                                            *
*                  succ0007[] = { 3, 5,3 , 6,2, 8,5 };                       *
*   Current state-------+         |  | |                                     *
*   Number of pairs in list ------+  | |                                     *
*   NonTerminal A--------------------+ |                                     *
*   Go to this state-------------------+                                     *
\****************************************************************************/
static const TableType succ0000[] = {  1,  75,   1};
static const TableType succ0001[] = {  8,  76,   2,  77,   3,  81,   6,  82,   7,  83,   8
                                        ,  84,  10,  85,  11, 103,  13};
static const TableType succ0003[] = {  5,  78,  15,  79,  17,  86,  18,  87,  19,  89,  20};
static const TableType succ0006[] = {  5,  82,  25,  83,   8,  84,  10,  85,  11, 103,  13};
static const TableType succ0012[] = {  2,  97,  27,  99,  28};
static const TableType succ0013[] = {  1,  89,  30};
static const TableType succ0017[] = {  1,  80,  34};
static const TableType succ0021[] = {  3,  79,  43,  87,  42,  89,  20};
static const TableType succ0022[] = {  3,  79,  45,  87,  44,  89,  20};
static const TableType succ0030[] = {  1, 104,  47};
static const TableType succ0031[] = {  3,  89,  51, 105,  49, 106,  50};
static const TableType succ0033[] = {  4,  79,  53,  86,  52,  87,  19,  89,  20};
static const TableType succ0035[] = { 10,  91,  55, 109,  68, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0037[] = {  1, 107,  77};
static const TableType succ0038[] = { 10,  88,  78, 109,  79, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0039[] = {  8,  83,  87,  84,  10,  85,  11,  90,  82,  93,  83
                                        ,  94,  84,  95,  85, 103,  13};
static const TableType succ0040[] = { 10,  91,  90, 109,  68, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0041[] = { 10,  83,  87,  84,  10,  85,  11,  89,  94,  90,  93
                                        ,  92,  92,  93,  83,  94,  84,  95,  85, 103,  13};
static const TableType succ0046[] = {  1,  98,  97};
static const TableType succ0048[] = {  3,  89,  51, 105,  98, 106,  50};
static const TableType succ0056[] = { 15,  83,  87,  84,  10,  85,  11,  94, 105,  95, 104
                                        , 103,  13, 109, 103, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0062[] = {  2, 116, 108, 117,  60};
static const TableType succ0063[] = {  2, 116, 109, 117,  60};
static const TableType succ0065[] = {  2, 116, 114, 117,  60};
static const TableType succ0066[] = {  2, 116, 115, 117,  60};
static const TableType succ0067[] = {  2, 116, 116, 117,  60};
static const TableType succ0077[] = { 19,  80, 138,  81, 136,  82,   7,  83,   8,  84,  10
                                        ,  85,  11, 100, 135, 103,  13, 108, 134, 109, 139
                                        , 110, 142, 116,  64, 117,  60, 119,  69, 120,  70
                                        , 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0080[] = { 11,  88, 156, 109,  79, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74
                                        , 125, 155};
static const TableType succ0084[] = {  7,  83, 160,  84,  10,  85,  11,  87, 159,  89, 162
                                        ,  96, 161, 103,  13};
static const TableType succ0088[] = {  1,  96, 165};
static const TableType succ0097[] = {  7,  81, 136,  82,   7,  83,   8,  84,  10,  85,  11
                                        , 100, 173, 103,  13};
static const TableType succ0100[] = {  2,  89,  51, 106, 175};
static const TableType succ0101[] = { 10,  91, 176, 109,  68, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0105[] = {  5,  83, 160,  84,  10,  85,  11,  96, 161, 103,  13};
static const TableType succ0107[] = { 15,  83,  87,  84,  10,  85,  11,  94, 105,  95, 181
                                        , 103,  13, 109, 180, 116,  64, 117, 179, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0111[] = {  9, 109, 182, 116,  64, 117,  60, 119,  69, 120,  70
                                        , 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0113[] = {  9, 116,  64, 117,  60, 118, 184, 119, 186, 120,  70
                                        , 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0117[] = {  8, 116,  64, 117,  60, 119, 187, 120,  70, 121,  71
                                        , 122,  72, 123,  73, 124,  74};
static const TableType succ0118[] = {  8, 116,  64, 117,  60, 119, 188, 120,  70, 121,  71
                                        , 122,  72, 123,  73, 124,  74};
static const TableType succ0119[] = {  8, 116,  64, 117,  60, 119, 189, 120,  70, 121,  71
                                        , 122,  72, 123,  73, 124,  74};
static const TableType succ0120[] = {  8, 116,  64, 117,  60, 119, 190, 120,  70, 121,  71
                                        , 122,  72, 123,  73, 124,  74};
static const TableType succ0121[] = {  5, 116,  64, 117,  60, 122, 191, 123,  73, 124,  74};
static const TableType succ0122[] = {  3, 116,  64, 117,  60, 124, 192};
static const TableType succ0123[] = {  3, 116,  64, 117,  60, 124, 193};
static const TableType succ0124[] = {  3, 116,  64, 117,  60, 124, 194};
static const TableType succ0125[] = {  3, 116,  64, 117,  60, 124, 195};
static const TableType succ0126[] = {  3, 116,  64, 117,  60, 124, 196};
static const TableType succ0127[] = {  3, 116,  64, 117,  60, 124, 197};
static const TableType succ0128[] = {  3, 116,  64, 117,  60, 124, 198};
static const TableType succ0129[] = {  3, 116,  64, 117,  60, 124, 199};
static const TableType succ0130[] = {  3, 116,  64, 117,  60, 124, 200};
static const TableType succ0131[] = {  3, 116,  64, 117,  60, 124, 201};
static const TableType succ0132[] = {  3, 116,  64, 117,  60, 124, 202};
static const TableType succ0136[] = { 10,  79, 206,  82,  25,  83,   8,  84,  10,  85,  11
                                        ,  87, 205,  89,  20, 101, 203, 102, 207, 103,  13};
static const TableType succ0140[] = {  9, 109, 211, 116,  64, 117,  60, 119,  69, 120,  70
                                        , 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0141[] = {  1, 110, 212};
static const TableType succ0145[] = { 12,  80, 138, 108, 217, 109, 139, 110, 142, 116,  64
                                        , 117,  60, 119,  69, 120,  70, 121,  71, 122,  72
                                        , 123,  73, 124,  74};
static const TableType succ0150[] = { 10,  91, 222, 109,  68, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0152[] = {  9, 109, 224, 116,  64, 117,  60, 119,  69, 120,  70
                                        , 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0153[] = {  1,  80, 225};
static const TableType succ0158[] = {  7,  83,  87,  84,  10,  85,  11,  93, 228,  94,  84
                                        ,  95,  85, 103,  13};
static const TableType succ0163[] = {  3,  87,  42,  89, 162,  96, 230};
static const TableType succ0164[] = {  3,  87,  44,  89, 162,  96, 231};
static const TableType succ0166[] = {  1,  96, 231};
static const TableType succ0167[] = {  1,  96, 230};
static const TableType succ0170[] = {  1,  89, 232};
static const TableType succ0178[] = {  2, 116, 233, 117,  60};
static const TableType succ0208[] = { 10,  91, 245, 109,  68, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0214[] = { 12,  80, 138, 108, 248, 109, 139, 110, 142, 116,  64
                                        , 117,  60, 119,  69, 120,  70, 121,  71, 122,  72
                                        , 123,  73, 124,  74};
static const TableType succ0215[] = { 10, 109, 250, 111, 249, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0216[] = { 10, 109, 250, 111, 251, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0218[] = { 10, 109, 254, 112, 253, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0221[] = {  9, 109, 255, 116,  64, 117,  60, 119,  69, 120,  70
                                        , 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0225[] = {  2, 113, 258, 114, 259};
static const TableType succ0227[] = { 10,  88, 261, 109,  79, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0229[] = { 10,  91, 263, 109,  68, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0239[] = {  9, 116,  64, 117,  60, 118, 265, 119, 186, 120,  70
                                        , 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0240[] = {  8, 116,  64, 117,  60, 119, 266, 120,  70, 121,  71
                                        , 122,  72, 123,  73, 124,  74};
static const TableType succ0242[] = {  4,  79, 206,  87, 205,  89,  20, 102, 267};
static const TableType succ0243[] = { 10,  88, 268, 109,  79, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0244[] = { 10,  91, 269, 109,  68, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0258[] = {  1, 114, 275};
static const TableType succ0270[] = { 12,  80, 138, 108, 279, 109, 139, 110, 142, 116,  64
                                        , 117,  60, 119,  69, 120,  70, 121,  71, 122,  72
                                        , 123,  73, 124,  74};
static const TableType succ0271[] = { 12,  80, 138, 108, 280, 109, 139, 110, 142, 116,  64
                                        , 117,  60, 119,  69, 120,  70, 121,  71, 122,  72
                                        , 123,  73, 124,  74};
static const TableType succ0272[] = { 10, 109, 250, 111, 281, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0273[] = { 10, 109, 250, 111, 282, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0274[] = {  1,  80, 283};
static const TableType succ0276[] = {  6,  83,  87,  84,  10,  85,  11,  94, 285, 103,  13
                                        , 115, 284};
static const TableType succ0285[] = {  6,  83, 160,  84,  10,  85,  11,  87, 292,  89, 162
                                        , 103,  13};
static const TableType succ0288[] = { 12,  80, 138, 108, 295, 109, 139, 110, 142, 116,  64
                                        , 117,  60, 119,  69, 120,  70, 121,  71, 122,  72
                                        , 123,  73, 124,  74};
static const TableType succ0290[] = { 10, 109, 254, 112, 297, 116,  64, 117,  60, 119,  69
                                        , 120,  70, 121,  71, 122,  72, 123,  73, 124,  74};
static const TableType succ0291[] = {  1,  80, 298};
static const TableType succ0293[] = {  2,  87,  42,  89, 162};
static const TableType succ0294[] = {  2,  87,  44,  89, 162};
static const TableType succ0299[] = { 12,  80, 138, 108, 300, 109, 139, 110, 142, 116,  64
                                        , 117,  60, 119,  69, 120,  70, 121,  71, 122,  72
                                        , 123,  73, 124,  74};

// Total size of all succNNNN tables:2664 bytes.

static const TableType *successor[301] = {
   succ0000,succ0001,NULL    ,succ0003,NULL    ,NULL    ,succ0006,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0012,succ0013,NULL    ,NULL    ,NULL    ,succ0017,NULL    ,NULL    
  ,NULL    ,succ0021,succ0022,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,succ0030,succ0031,NULL    ,succ0033,NULL    ,succ0035,NULL    ,succ0037,succ0038,succ0039
  ,succ0040,succ0041,NULL    ,NULL    ,NULL    ,NULL    ,succ0046,NULL    ,succ0048,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0056,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0062,succ0063,NULL    ,succ0065,succ0066,succ0067,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0077,NULL    ,NULL    
  ,succ0080,NULL    ,NULL    ,NULL    ,succ0084,NULL    ,NULL    ,NULL    ,succ0088,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0097,NULL    ,NULL    
  ,succ0100,succ0101,NULL    ,NULL    ,NULL    ,succ0105,NULL    ,succ0107,NULL    ,NULL    
  ,NULL    ,succ0111,NULL    ,succ0113,NULL    ,NULL    ,NULL    ,succ0117,succ0118,succ0119
  ,succ0120,succ0121,succ0122,succ0123,succ0124,succ0125,succ0126,succ0127,succ0128,succ0129
  ,succ0130,succ0131,succ0132,NULL    ,NULL    ,NULL    ,succ0136,NULL    ,NULL    ,NULL    
  ,succ0140,succ0141,NULL    ,NULL    ,NULL    ,succ0145,NULL    ,NULL    ,NULL    ,NULL    
  ,succ0150,NULL    ,succ0152,succ0153,NULL    ,NULL    ,NULL    ,NULL    ,succ0158,NULL    
  ,NULL    ,NULL    ,NULL    ,succ0163,succ0164,NULL    ,succ0166,succ0167,NULL    ,NULL    
  ,succ0170,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0178,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0208,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0214,succ0215,succ0216,NULL    ,succ0218,NULL    
  ,NULL    ,succ0221,NULL    ,NULL    ,NULL    ,succ0225,NULL    ,succ0227,NULL    ,succ0229
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0239
  ,succ0240,NULL    ,succ0242,succ0243,succ0244,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0258,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,succ0270,succ0271,succ0272,succ0273,succ0274,NULL    ,succ0276,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0285,NULL    ,NULL    ,succ0288,NULL    
  ,succ0290,succ0291,NULL    ,succ0293,succ0294,NULL    ,NULL    ,NULL    ,NULL    ,succ0299
  ,NULL    
}; // Size of pointertable:2408 bytes.

/****************************************************************************\
* The productionLength[] array is indexed by production number and holds     *
* the number of symbols on the right side of each production.                *
\****************************************************************************/
static const unsigned char productionLength[165] = {
  /*   0 */    1,   0,   2,   3,   2,   3,   0,   2,   1,   1,
  /*  10 */    1,   2,   1,   1,   1,   1,   1,   1,   3,   1,
  /*  20 */    3,   1,   1,   3,   4,   3,   4,   2,   3,   2,
  /*  30 */    3,   4,   3,   3,   3,   4,   4,   1,   3,   1,
  /*  40 */    3,   2,   1,   1,   1,   2,   2,   2,   0,   5,
  /*  50 */    2,   3,   4,   3,   5,   2,   0,   1,   1,   0,
  /*  60 */    2,   3,   2,   1,   3,   1,   1,   3,   3,   2,
  /*  70 */    3,   4,   0,   3,   1,   1,   3,   1,   3,   3,
  /*  80 */    0,   2,   2,   1,   1,   2,   2,   3,   3,   3,
  /*  90 */    5,   7,   5,   7,   9,   2,   2,   5,   3,   2,
  /* 100 */    3,   3,   1,   2,   5,   1,   2,   1,   1,   0,
  /* 110 */    1,   3,   1,   1,   1,   1,   4,   4,   4,   4,
  /* 120 */    2,   2,   2,   2,   2,   2,   4,   3,   4,   3,
  /* 130 */    1,   3,   3,   1,   5,   3,   3,   1,   1,   3,
  /* 140 */    1,   1,   3,   1,   3,   3,   3,   3,   3,   3,
  /* 150 */    3,   3,   3,   3,   1,   0,   1,   1,   1,   3,
  /* 160 */    1,   3,   1,   2,   1
}; // Size of table:168 bytes.

/****************************************************************************\
* The leftSide[] array is indexed by production number, and holds the        *
* nonTerminal symbol on the left side of each production.                    *
\****************************************************************************/
static const TableType leftSide[165] = {
  /*   0 */   74,  75,  75,  76,  76,  76,  77,  77,  77,  77,
  /*  10 */   81,  81,  82,  82,  83,  83,  83,  78,  78,  86,
  /*  20 */   86,  86,  87,  87,  87,  87,  87,  87,  87,  79,
  /*  30 */   79,  79,  79,  79,  79,  79,  79,  92,  92,  90,
  /*  40 */   90,  93,  93,  93,  94,  94,  95,  95,  96,  96,
  /*  50 */   96,  96,  96,  96,  85,  85,  97,  97,  99,  98,
  /*  60 */   98, 100, 100, 101, 101, 102, 102, 102, 102, 102,
  /*  70 */   84,  84, 104, 104, 103, 105, 105, 106, 106,  80,
  /*  80 */  107, 107, 107, 108, 108, 108, 108, 108, 108, 108,
  /*  90 */  108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
  /* 100 */  108, 108, 113, 113, 114, 115, 115, 115, 110, 111,
  /* 110 */  111, 116, 116, 116, 116, 116, 116, 116, 116, 116,
  /* 120 */  116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
  /* 130 */  118, 118, 109, 109, 119, 119, 119, 119, 120, 121,
  /* 140 */  121, 122, 123, 123, 124, 124, 124, 124, 124, 124,
  /* 150 */  124, 124, 124, 124, 124, 112, 112,  91,  88,  88,
  /* 160 */  125, 125, 117, 117,  89
}; // Size of table:332 bytes.

/****************************************************************************\
* The rightSide[] matrix is indexed by production number and holds           *
* the right side symbols of each production.                                 *
* Compressed and only used for debugging.                                    *
\****************************************************************************/
static const TableType rightSideTable[376] = {
  /*   0 */   75
  /*   2 */ , 75, 76
  /*   3 */ , 77, 78, 40
  /*   4 */ , 77, 40
  /*   5 */ , 77, 79, 80
  /*   7 */ , 71, 70
  /*   8 */ , 70
  /*   9 */ , 81
  /*  10 */ , 82
  /*  11 */ , 81, 82
  /*  12 */ , 83
  /*  13 */ , 71
  /*  14 */ ,  4
  /*  15 */ , 84
  /*  16 */ , 85
  /*  17 */ , 86
  /*  18 */ , 78, 42, 86
  /*  19 */ , 87
  /*  20 */ , 87, 43, 88
  /*  21 */ , 79
  /*  22 */ , 89
  /*  23 */ , 87, 64, 65
  /*  24 */ , 87, 64, 90, 65
  /*  25 */ , 87, 62, 63
  /*  26 */ , 87, 62, 91, 63
  /*  27 */ , 57, 87
  /*  28 */ , 64, 87, 65
  /*  29 */ , 57, 79
  /*  30 */ , 79, 62, 63
  /*  31 */ , 79, 62, 91, 63
  /*  32 */ , 64, 79, 65
  /*  33 */ , 79, 64, 65
  /*  34 */ , 89, 64, 65
  /*  35 */ , 89, 64, 92, 65
  /*  36 */ , 89, 64, 90, 65
  /*  37 */ , 89
  /*  38 */ , 92, 42, 89
  /*  39 */ , 93
  /*  40 */ , 90, 42, 93
  /*  41 */ , 94, 87
  /*  42 */ , 95
  /*  43 */ , 41
  /*  44 */ , 83
  /*  45 */ , 94, 83
  /*  46 */ , 94, 96
  /*  47 */ , 70, 96
  /*  49 */ , 64, 96, 65, 64, 65
  /*  50 */ , 57, 96
  /*  51 */ , 96, 62, 63
  /*  52 */ , 96, 62, 91, 63
  /*  53 */ , 64, 96, 65
  /*  54 */ ,  5, 97, 38, 98, 39
  /*  55 */ ,  5, 99
  /*  57 */ , 99
  /*  58 */ , 72
  /*  60 */ , 98,100
  /*  61 */ , 81,101, 40
  /*  62 */ , 81, 40
  /*  63 */ ,102
  /*  64 */ ,101, 42,102
  /*  65 */ , 79
  /*  66 */ , 87
  /*  67 */ , 87, 43, 88
  /*  68 */ , 87, 46, 91
  /*  69 */ , 46, 91
  /*  70 */ ,103, 89,104
  /*  71 */ ,103, 38,105, 39
  /*  73 */ , 38,105, 39
  /*  74 */ ,  6
  /*  75 */ ,106
  /*  76 */ ,105, 42,106
  /*  77 */ , 89
  /*  78 */ , 89, 43, 91
  /*  79 */ , 38,107, 39
  /*  81 */ ,107,108
  /*  82 */ ,107,100
  /*  83 */ , 40
  /*  84 */ , 80
  /*  85 */ ,109, 40
  /*  86 */ , 24, 40
  /*  87 */ , 24,109, 40
  /*  88 */ , 25,110, 40
  /*  89 */ ,110, 46,108
  /*  90 */ , 26, 64,111, 65,108
  /*  91 */ , 26, 64,111, 65,108, 73,108
  /*  92 */ , 32, 64,111, 65,108
  /*  93 */ , 33,108, 32, 64,111, 65, 40
  /*  94 */ , 34, 64,112, 40,111, 40,112, 65,108
  /*  95 */ , 30, 40
  /*  96 */ , 31, 40
  /*  97 */ , 27, 64,109, 65, 80
  /*  98 */ , 28, 91, 46
  /*  99 */ , 29, 46
  /* 100 */ , 37,109, 40
  /* 101 */ , 35, 80,113
  /* 102 */ ,114
  /* 103 */ ,113,114
  /* 104 */ , 36, 64,115, 65, 80
  /* 105 */ , 41
  /* 106 */ , 94, 87
  /* 107 */ , 94
  /* 108 */ , 72
  /* 110 */ ,109
  /* 111 */ , 64,109, 65
  /* 112 */ ,  3
  /* 113 */ ,  2
  /* 114 */ , 72
  /* 115 */ ,117
  /* 116 */ , 59, 64,117, 65
  /* 117 */ , 59, 64,109, 65
  /* 118 */ , 59, 64, 95, 65
  /* 119 */ , 64, 95, 65,116
  /* 120 */ , 56,116
  /* 121 */ , 60,116
  /* 122 */ ,116, 61
  /* 123 */ , 61,116
  /* 124 */ , 51,116
  /* 125 */ , 57,116
  /* 126 */ ,116, 62,109, 63
  /* 127 */ ,116, 66, 72
  /* 128 */ ,116, 64,118, 65
  /* 129 */ ,116, 64, 65
  /* 130 */ ,119
  /* 131 */ ,119, 42,118
  /* 132 */ ,109, 42,119
  /* 133 */ ,119
  /* 134 */ ,119, 45,119, 46,119
  /* 135 */ ,119, 44,119
  /* 136 */ ,119, 43,119
  /* 137 */ ,120
  /* 138 */ ,121
  /* 139 */ ,121, 47,122
  /* 140 */ ,122
  /* 141 */ ,123
  /* 142 */ ,123, 48,124
  /* 143 */ ,124
  /* 144 */ ,124, 53,124
  /* 145 */ ,124, 52,124
  /* 146 */ ,124, 57,124
  /* 147 */ ,124, 58,124
  /* 148 */ ,124, 54,124
  /* 149 */ ,124, 51,124
  /* 150 */ ,124, 50,124
  /* 151 */ ,124, 49,124
  /* 152 */ ,124, 55,124
  /* 153 */ ,124, 56,124
  /* 154 */ ,116
  /* 156 */ ,109
  /* 157 */ ,109
  /* 158 */ ,109
  /* 159 */ , 38,125, 39
  /* 160 */ , 88
  /* 161 */ ,125, 42, 88
  /* 162 */ ,  1
  /* 163 */ ,117,  1
  /* 164 */ , 72
}; // Size of table:752 bytes.

/****************************************************************************\
* The symbolName[] array is indexed by symbol and holds                      *
* the name of each symbol (terminal or nonTerminal).                         *
* Used for debugging.                                                        *
\****************************************************************************/
static const TCHAR *symbolName[126] = {
  /*   0 */ _T("EOI"),
  /*   1 */ _T("STRING"),
  /*   2 */ _T("ICON"),
  /*   3 */ _T("FCON"),
  /*   4 */ _T("TYPE"),
  /*   5 */ _T("STRUCT"),
  /*   6 */ _T("ENUM"),
  /*   7 */ _T("DEFINE"),
  /*   8 */ _T("ENDIF"),
  /*   9 */ _T("IFDEF"),
  /*  10 */ _T("IFNDEF"),
  /*  11 */ _T("INCLUDE"),
  /*  12 */ _T("UNDEF"),
  /*  13 */ _T("EXTERN"),
  /*  14 */ _T("STATIC"),
  /*  15 */ _T("VIRTUAL"),
  /*  16 */ _T("REGISTER"),
  /*  17 */ _T("AUTO"),
  /*  18 */ _T("OPERATOR"),
  /*  19 */ _T("SIGNED"),
  /*  20 */ _T("PRIVATE"),
  /*  21 */ _T("PUBLIC"),
  /*  22 */ _T("PROTECTED"),
  /*  23 */ _T("TEMPLATE"),
  /*  24 */ _T("RETURN"),
  /*  25 */ _T("GOTO"),
  /*  26 */ _T("IF"),
  /*  27 */ _T("SWITCH"),
  /*  28 */ _T("CASE"),
  /*  29 */ _T("DEFAULT"),
  /*  30 */ _T("BREAK"),
  /*  31 */ _T("CONTINUE"),
  /*  32 */ _T("WHILE"),
  /*  33 */ _T("DO"),
  /*  34 */ _T("FOR"),
  /*  35 */ _T("TRYSTMT"),
  /*  36 */ _T("CATCH"),
  /*  37 */ _T("THROW"),
  /*  38 */ _T("LC"),
  /*  39 */ _T("RC"),
  /*  40 */ _T("SEMI"),
  /*  41 */ _T("ELLIPSIS"),
  /*  42 */ _T("COMMA"),
  /*  43 */ _T("EQUAL"),
  /*  44 */ _T("ASSIGNOP"),
  /*  45 */ _T("QUEST"),
  /*  46 */ _T("COLON"),
  /*  47 */ _T("OROR"),
  /*  48 */ _T("ANDAND"),
  /*  49 */ _T("OR"),
  /*  50 */ _T("XOR"),
  /*  51 */ _T("AND"),
  /*  52 */ _T("EQUOP"),
  /*  53 */ _T("RELOP"),
  /*  54 */ _T("SHIFTOP"),
  /*  55 */ _T("PLUS"),
  /*  56 */ _T("MINUS"),
  /*  57 */ _T("STAR"),
  /*  58 */ _T("DIVOP"),
  /*  59 */ _T("SIZEOF"),
  /*  60 */ _T("UNOP"),
  /*  61 */ _T("INCOP"),
  /*  62 */ _T("LB"),
  /*  63 */ _T("RB"),
  /*  64 */ _T("LPAR"),
  /*  65 */ _T("RPAR"),
  /*  66 */ _T("STRUCTOP"),
  /*  67 */ _T("COLONCOLON"),
  /*  68 */ _T("NEWOP"),
  /*  69 */ _T("DELETEOP"),
  /*  70 */ _T("TTYPE"),
  /*  71 */ _T("CLASS"),
  /*  72 */ _T("NAME"),
  /*  73 */ _T("ELSE"),
  /*  74 */ _T("program"),
  /*  75 */ _T("ext_def_list"),
  /*  76 */ _T("ext_def"),
  /*  77 */ _T("opt_specifiers"),
  /*  78 */ _T("ext_decl_list"),
  /*  79 */ _T("funct_decl"),
  /*  80 */ _T("compound_stmt"),
  /*  81 */ _T("specifiers"),
  /*  82 */ _T("type_or_class"),
  /*  83 */ _T("type_specifier"),
  /*  84 */ _T("enum_specifier"),
  /*  85 */ _T("struct_specifier"),
  /*  86 */ _T("ext_decl"),
  /*  87 */ _T("var_decl"),
  /*  88 */ _T("initializer"),
  /*  89 */ _T("name"),
  /*  90 */ _T("var_list"),
  /*  91 */ _T("const_expr"),
  /*  92 */ _T("name_list"),
  /*  93 */ _T("param_declaration"),
  /*  94 */ _T("type"),
  /*  95 */ _T("abstract_decl"),
  /*  96 */ _T("abs_decl"),
  /*  97 */ _T("opt_tag"),
  /*  98 */ _T("def_list"),
  /*  99 */ _T("tag"),
  /* 100 */ _T("def"),
  /* 101 */ _T("decl_list"),
  /* 102 */ _T("decl"),
  /* 103 */ _T("enum"),
  /* 104 */ _T("opt_enum_list"),
  /* 105 */ _T("enumerator_list"),
  /* 106 */ _T("enumerator"),
  /* 107 */ _T("stmt_list"),
  /* 108 */ _T("statement"),
  /* 109 */ _T("expr"),
  /* 110 */ _T("target"),
  /* 111 */ _T("test"),
  /* 112 */ _T("opt_expr"),
  /* 113 */ _T("handler_list"),
  /* 114 */ _T("exception_handler"),
  /* 115 */ _T("catch_type"),
  /* 116 */ _T("unary"),
  /* 117 */ _T("string_const"),
  /* 118 */ _T("args"),
  /* 119 */ _T("non_comma_expr"),
  /* 120 */ _T("or_expr"),
  /* 121 */ _T("or_list"),
  /* 122 */ _T("and_expr"),
  /* 123 */ _T("and_list"),
  /* 124 */ _T("binary"),
  /* 125 */ _T("initializer_list")
}; // Total size of strings:1220 bytes, size of pointertable:1008 bytes.

static const ParserShortTables CppTables_s(compressedSet, compressedLasets
                                          ,action, successor, productionLength, leftSide
                                          ,rightSideTable, symbolName
                                          ,74, 126, 165, 301);

const ParserTables *CppTables = &CppTables_s;
// Size of CppTables_s: 88 bytes. Size of CppTables:8 bytes


// Total size of table data:16.020 bytes.


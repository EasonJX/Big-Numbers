/* DO NOT EDIT THIS FILE - it is machine generated */
#line 114 "C:\\mytools2015\\CheckMnemonics\\Resource.y"
#include "stdafx.h"
#include "ResourceParser.h"

#pragma warning(disable:4312)


#line 33 "C:\\mytools\\parsergen\\lib\\parsegencpp.par"

typedef short TableType;

/****************************************************************************\
* Bitset containing 1-bits for compressed states and 0-bits for              *
* uncompressed states. Used by ParserTable to determine how to               *
* interpret the entry in the action-table                                    *
* Number of bytes in bitset = (statecount-1)/8+1                             *
\****************************************************************************/
static const BYTE compressedSet[80] = {
   0xfa,0xff,0xdf,0xfc,0xff,0xaf,0x0d,0x02,0xfd,0x5b,0x4e,0xfe,0xcc,0x02,0xe6,0x53,0xd7,0xff,0xff,0xfe
  ,0xff,0xdf,0xff,0xff,0xff,0xf5,0x6e,0x07,0xf4,0xb7,0xf4,0xfd,0xff,0xbf,0xb4,0xff,0xdf,0xdf,0xff,0x7f
  ,0x8f,0xff,0xa2,0xf7,0xfc,0xf9,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
  ,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd,0xff,0xff,0xf3,0x4f,0xc0,0xec,0xff,0xdf,0x01
}; // Size of table:80 bytes.

/****************************************************************************\
* The action matrix holds the parse action(state,terminal)                   *
* Used in LRParser::parserStep().                                            *
* 2 different formats are used:Compressed and Uncompressed.                  *
*                                                                            *
* Compressed:When there is only 1 possible action in the state.              *
*            or all actions are reduce by the same production.               *
*   If bit 16 (0x8000) is 0, there is only one possible action which is      *
*   encoded as:                                                              *
*      #define   act0001  (void*)((action << 16) | (token&0x7fff)            *
*   State index------+               |                |                      *
*   Highorder 16 bits = action-------+                |                      *
*   Loworder  15 bits = legal token-------------------+                      *
*                                                                            *
*   If bit 16 is 1, the loworder 15 bits is an index.                        *
*      #define   act0002  (void*)((action<<16)  |  0x8000 | (index&0x7fff))  *
*   State index------+               |                |        |             *
*   Highorder 16 bits = action-------+                |        |             *
*   Indicates that this is a multi-item-action-state--+        |             *
*   Loworder  15 bits = index into compressedLasets------------+             *
*                                                                            *
* compressedLasets contains all unique legal lookahead-sets for all          *
* multi-item-action-states.                                                  *
* Number of bytes in each bitset = (terminalcount-1)/8+1                     *
*                                                                            *
* Uncompressed states:                                                       *
*      TableType act0004[] =      { 3, 1, 2, 2,-2, 6, 1 };                   *
*   State index------+              |  |  |                                  *
*   Number of pairs in list---------+  |  |                                  *
*   Legal input symbol-----------------+  |                                  *
*   Action--------------------------------+                                  *
*                                                                            *
* If any uncompressed state has the same actionarray as a previous           *
* generated uncompressed state, a #define is generated to save space.        *
*                                                                            *
*                                                                            *
*   action = getAction(current state, current inputSymbol);                  *
*                                                                            *
*   action <  0   - Reduce by production p, p == -action.                    *
*   action == 0   - Accept. Reduce by production 0.                          *
*   action >  0   - Go to state s (=action),                                 *
*                   and push [s,input,pos] to parser stack.                  *
*                   Then read next symbol from input.                        *
*   action == _ParserError - not found (=unexpected input).                  *
\****************************************************************************/
static const BYTE compressedLasets[1599] = {
  /*  0   6 tokens */  0x27,0x00,0x10,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  1   7 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /*  2  47 tokens */ ,0xbf,0x1f,0x1f,0xe0,0x82,0xbf,0x38,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8e
  /*  3  59 tokens */ ,0x3f,0xe0,0x3f,0x58,0xe3,0xbf,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xee
  /*  4   7 tokens */ ,0x08,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  5   7 tokens */ ,0x02,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  6   8 tokens */ ,0x08,0x00,0x00,0x00,0x00,0x00,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /*  7  13 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x3f,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /*  8  20 tokens */ ,0x3f,0x00,0x10,0x40,0x80,0xbf,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8e
  /*  9  25 tokens */ ,0x3f,0x00,0x16,0x40,0x80,0xbf,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8e
  /* 10  16 tokens */ ,0x0a,0x00,0x00,0x00,0x80,0x3f,0xc0,0x0f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 11   7 tokens */ ,0x27,0x00,0x10,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20
  /* 12   6 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 13   6 tokens */ ,0x1e,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 14   8 tokens */ ,0x00,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 15   2 tokens */ ,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 16  11 tokens */ ,0x10,0x00,0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8a
  /* 17   5 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 18   7 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a
  /* 19  21 tokens */ ,0x10,0x00,0x07,0x00,0x00,0x00,0x38,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e
  /* 20   3 tokens */ ,0x00,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 21   4 tokens */ ,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 22   2 tokens */ ,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 23   3 tokens */ ,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 24   2 tokens */ ,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 25  13 tokens */ ,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 26   3 tokens */ ,0x00,0x40,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 27   9 tokens */ ,0x27,0x00,0x18,0x40,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 28   2 tokens */ ,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02
  /* 29   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 30  14 tokens */ ,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 31   4 tokens */ ,0x10,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 32   7 tokens */ ,0x80,0x1f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 33  15 tokens */ ,0x10,0x00,0x01,0x00,0x00,0x00,0x00,0xf0,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c
  /* 34   5 tokens */ ,0x00,0x00,0x06,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  /* 35   5 tokens */ ,0x10,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06
  /* 36   6 tokens */ ,0x10,0x00,0x08,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e
  /* 37   5 tokens */ ,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
  /* 38   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04
}; // Size of table:1600 bytes.

#define act0001 (void*)0x00000000    /* reduce by 0 on EOI                       */
#define act0003 (void*)0xfffd8000    /* reduce by 3 on tokens in set[0]          */
#define act0004 (void*)0xfffc8000    /* reduce by 4 on tokens in set[0]          */
#define act0005 (void*)0xfffb8000    /* reduce by 5 on tokens in set[0]          */
#define act0006 (void*)0xfffa8000    /* reduce by 6 on tokens in set[0]          */
#define act0007 (void*)0xfff98000    /* reduce by 7 on tokens in set[0]          */
#define act0008 (void*)0xfff88000    /* reduce by 8 on tokens in set[0]          */
#define act0009 (void*)0xfff78000    /* reduce by 9 on tokens in set[0]          */
#define act0010 (void*)0xfff68000    /* reduce by 10 on tokens in set[0]         */
#define act0011 (void*)0xfff58000    /* reduce by 11 on tokens in set[0]         */
#define act0012 (void*)0xfff48000    /* reduce by 12 on tokens in set[0]         */
#define act0013 (void*)0xfff38000    /* reduce by 13 on tokens in set[0]         */
#define act0014 (void*)0xfff28000    /* reduce by 14 on tokens in set[0]         */
#define act0015 (void*)0xfff18000    /* reduce by 15 on tokens in set[0]         */
#define act0016 (void*)0xfff08000    /* reduce by 16 on tokens in set[0]         */
#define act0017 (void*)0xffef8000    /* reduce by 17 on tokens in set[0]         */
#define act0018 (void*)0xffee8000    /* reduce by 18 on tokens in set[0]         */
#define act0019 (void*)0xffed8000    /* reduce by 19 on tokens in set[0]         */
#define act0020 (void*)0xffec8000    /* reduce by 20 on tokens in set[0]         */
#define act0022 (void*)0x002b0006    /* shift to 43 on DESIGNINFO                */
#define act0023 (void*)0xff9b8029    /* reduce by 101 on tokens in set[1]        */
#define act0026 (void*)0xfe2b8052    /* reduce by 469 on tokens in set[2]        */
#define act0027 (void*)0xfe2a807b    /* reduce by 470 on tokens in set[3]        */
#define act0028 (void*)0xfffe8000    /* reduce by 2 on tokens in set[0]          */
#define act0029 (void*)0xff9b80a4    /* reduce by 101 on tokens in set[4]        */
#define act0030 (void*)0xff9b80a4    /* reduce by 101 on tokens in set[4]        */
#define act0031 (void*)0xff9b80a4    /* reduce by 101 on tokens in set[4]        */
#define act0032 (void*)0xff9b80cd    /* reduce by 101 on tokens in set[5]        */
#define act0033 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0034 (void*)0xff9b80cd    /* reduce by 101 on tokens in set[5]        */
#define act0035 (void*)0xff9b8029    /* reduce by 101 on tokens in set[1]        */
#define act0036 (void*)0x003c0141    /* shift to 60 on BEGIN                     */
#define act0037 (void*)0xff9b8029    /* reduce by 101 on tokens in set[1]        */
#define act0038 (void*)0xff9b80f6    /* reduce by 101 on tokens in set[6]        */
#define act0039 (void*)0xff9b811f    /* reduce by 101 on tokens in set[7]        */
#define act0040 (void*)0x00400141    /* shift to 64 on BEGIN                     */
#define act0041 (void*)0xfe998029    /* reduce by 359 on tokens in set[1]        */
#define act0042 (void*)0xfe988029    /* reduce by 360 on tokens in set[1]        */
#define act0043 (void*)0xff9b8029    /* reduce by 101 on tokens in set[1]        */
#define act0045 (void*)0xff9b8029    /* reduce by 101 on tokens in set[1]        */
#define act0047 (void*)0x004f0004    /* shift to 79 on COMMA                     */
#define act0048 (void*)0xfe318148    /* reduce by 463 on tokens in set[8]        */
#define act0050 (void*)0xfe2f8148    /* reduce by 465 on tokens in set[8]        */
#define act0051 (void*)0xfe298171    /* reduce by 471 on tokens in set[9]        */
#define act0057 (void*)0x005c0004    /* shift to 92 on COMMA                     */
#define act0064 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0066 (void*)0xff9a819a    /* reduce by 102 on tokens in set[10]       */
#define act0067 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0068 (void*)0xff99819a    /* reduce by 103 on tokens in set[10]       */
#define act0069 (void*)0xff98819a    /* reduce by 104 on tokens in set[10]       */
#define act0070 (void*)0xff97819a    /* reduce by 105 on tokens in set[10]       */
#define act0071 (void*)0xff96819a    /* reduce by 106 on tokens in set[10]       */
#define act0072 (void*)0xff95819a    /* reduce by 107 on tokens in set[10]       */
#define act0073 (void*)0xff94819a    /* reduce by 108 on tokens in set[10]       */
#define act0075 (void*)0xfe3c8000    /* reduce by 452 on tokens in set[0]        */
#define act0076 (void*)0xfe398000    /* reduce by 455 on tokens in set[0]        */
#define act0078 (void*)0xfe3781c3    /* reduce by 457 on tokens in set[11]       */
#define act0081 (void*)0xffeb8000    /* reduce by 21 on tokens in set[0]         */
#define act0082 (void*)0xffea8000    /* reduce by 22 on tokens in set[0]         */
#define act0083 (void*)0xffe98000    /* reduce by 23 on tokens in set[0]         */
#define act0086 (void*)0xffdf81ec    /* reduce by 33 on tokens in set[12]        */
#define act0089 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0090 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0091 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0092 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0093 (void*)0x00c90141    /* shift to 201 on BEGIN                    */
#define act0094 (void*)0x00ca0004    /* shift to 202 on COMMA                    */
#define act0095 (void*)0xfe9a8000    /* reduce by 358 on tokens in set[0]        */
#define act0098 (void*)0xfe6b8215    /* reduce by 405 on tokens in set[13]       */
#define act0099 (void*)0xfe6a8215    /* reduce by 406 on tokens in set[13]       */
#define act0102 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0103 (void*)0xfe598000    /* reduce by 423 on tokens in set[0]        */
#define act0105 (void*)0xfe4c823e    /* reduce by 436 on tokens in set[14]       */
#define act0113 (void*)0x00e20142    /* shift to 226 on END                      */
#define act0114 (void*)0xfe3a0142    /* reduce by 454 on END                     */
#define act0117 (void*)0xfe548267    /* reduce by 428 on tokens in set[15]       */
#define act0118 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0119 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0120 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0121 (void*)0xfe4f8000    /* reduce by 433 on tokens in set[0]        */
#define act0124 (void*)0xfe328290    /* reduce by 462 on tokens in set[16]       */
#define act0126 (void*)0xffe582b9    /* reduce by 27 on tokens in set[17]        */
#define act0128 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0129 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0130 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0132 (void*)0xffe081ec    /* reduce by 32 on tokens in set[12]        */
#define act0134 (void*)0xffd282e2    /* reduce by 46 on tokens in set[18]        */
#define act0135 (void*)0xffd182e2    /* reduce by 47 on tokens in set[18]        */
#define act0136 (void*)0xffd082e2    /* reduce by 48 on tokens in set[18]        */
#define act0137 (void*)0xff9382e2    /* reduce by 109 on tokens in set[18]       */
#define act0138 (void*)0xff9282e2    /* reduce by 110 on tokens in set[18]       */
#define act0139 (void*)0xff9182e2    /* reduce by 111 on tokens in set[18]       */
#define act0140 (void*)0xff9082e2    /* reduce by 112 on tokens in set[18]       */
#define act0141 (void*)0xff8f82e2    /* reduce by 113 on tokens in set[18]       */
#define act0142 (void*)0xff8e82e2    /* reduce by 114 on tokens in set[18]       */
#define act0143 (void*)0xff8d82e2    /* reduce by 115 on tokens in set[18]       */
#define act0144 (void*)0xff8c82e2    /* reduce by 116 on tokens in set[18]       */
#define act0145 (void*)0xff8b82e2    /* reduce by 117 on tokens in set[18]       */
#define act0146 (void*)0xff8a82e2    /* reduce by 118 on tokens in set[18]       */
#define act0147 (void*)0xff8982e2    /* reduce by 119 on tokens in set[18]       */
#define act0148 (void*)0xff8882e2    /* reduce by 120 on tokens in set[18]       */
#define act0149 (void*)0xff8782e2    /* reduce by 121 on tokens in set[18]       */
#define act0150 (void*)0xff8682e2    /* reduce by 122 on tokens in set[18]       */
#define act0151 (void*)0xff85830b    /* reduce by 123 on tokens in set[19]       */
#define act0153 (void*)0xff83830b    /* reduce by 125 on tokens in set[19]       */
#define act0154 (void*)0xff82830b    /* reduce by 126 on tokens in set[19]       */
#define act0155 (void*)0xff81830b    /* reduce by 127 on tokens in set[19]       */
#define act0156 (void*)0xff80830b    /* reduce by 128 on tokens in set[19]       */
#define act0157 (void*)0xff7f830b    /* reduce by 129 on tokens in set[19]       */
#define act0158 (void*)0xff7e830b    /* reduce by 130 on tokens in set[19]       */
#define act0159 (void*)0xff7d830b    /* reduce by 131 on tokens in set[19]       */
#define act0160 (void*)0xff7c830b    /* reduce by 132 on tokens in set[19]       */
#define act0161 (void*)0xff7b830b    /* reduce by 133 on tokens in set[19]       */
#define act0162 (void*)0xff7a830b    /* reduce by 134 on tokens in set[19]       */
#define act0163 (void*)0xff79830b    /* reduce by 135 on tokens in set[19]       */
#define act0164 (void*)0xff78830b    /* reduce by 136 on tokens in set[19]       */
#define act0165 (void*)0xff77830b    /* reduce by 137 on tokens in set[19]       */
#define act0166 (void*)0xff76830b    /* reduce by 138 on tokens in set[19]       */
#define act0167 (void*)0xff75830b    /* reduce by 139 on tokens in set[19]       */
#define act0168 (void*)0xff74830b    /* reduce by 140 on tokens in set[19]       */
#define act0169 (void*)0xff73830b    /* reduce by 141 on tokens in set[19]       */
#define act0170 (void*)0xff72830b    /* reduce by 142 on tokens in set[19]       */
#define act0171 (void*)0xff71830b    /* reduce by 143 on tokens in set[19]       */
#define act0172 (void*)0xff70830b    /* reduce by 144 on tokens in set[19]       */
#define act0174 (void*)0xffd882e2    /* reduce by 40 on tokens in set[18]        */
#define act0175 (void*)0xffd782e2    /* reduce by 41 on tokens in set[18]        */
#define act0176 (void*)0xff6f830b    /* reduce by 145 on tokens in set[19]       */
#define act0177 (void*)0xff6e830b    /* reduce by 146 on tokens in set[19]       */
#define act0178 (void*)0xff6d830b    /* reduce by 147 on tokens in set[19]       */
#define act0179 (void*)0xff6c830b    /* reduce by 148 on tokens in set[19]       */
#define act0180 (void*)0xff6b830b    /* reduce by 149 on tokens in set[19]       */
#define act0181 (void*)0xff6a830b    /* reduce by 150 on tokens in set[19]       */
#define act0182 (void*)0xff69830b    /* reduce by 151 on tokens in set[19]       */
#define act0183 (void*)0xff68830b    /* reduce by 152 on tokens in set[19]       */
#define act0184 (void*)0xff67830b    /* reduce by 153 on tokens in set[19]       */
#define act0185 (void*)0xff66830b    /* reduce by 154 on tokens in set[19]       */
#define act0186 (void*)0xff65830b    /* reduce by 155 on tokens in set[19]       */
#define act0187 (void*)0xff64830b    /* reduce by 156 on tokens in set[19]       */
#define act0188 (void*)0xff63830b    /* reduce by 157 on tokens in set[19]       */
#define act0189 (void*)0xff62830b    /* reduce by 158 on tokens in set[19]       */
#define act0190 (void*)0xff61830b    /* reduce by 159 on tokens in set[19]       */
#define act0191 (void*)0xff60830b    /* reduce by 160 on tokens in set[19]       */
#define act0192 (void*)0xff5f830b    /* reduce by 161 on tokens in set[19]       */
#define act0193 (void*)0xff5e830b    /* reduce by 162 on tokens in set[19]       */
#define act0194 (void*)0xff5d830b    /* reduce by 163 on tokens in set[19]       */
#define act0195 (void*)0xffdc81ec    /* reduce by 36 on tokens in set[12]        */
#define act0196 (void*)0xffdb81ec    /* reduce by 37 on tokens in set[12]        */
#define act0197 (void*)0xffda81ec    /* reduce by 38 on tokens in set[12]        */
#define act0198 (void*)0x01140004    /* shift to 276 on COMMA                    */
#define act0199 (void*)0xffd481ec    /* reduce by 44 on tokens in set[12]        */
#define act0200 (void*)0x01150004    /* shift to 277 on COMMA                    */
#define act0202 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0204 (void*)0xfe958334    /* reduce by 363 on tokens in set[20]       */
#define act0205 (void*)0xfe948334    /* reduce by 364 on tokens in set[20]       */
#define act0206 (void*)0xfe938334    /* reduce by 365 on tokens in set[20]       */
#define act0207 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0209 (void*)0xfe6d8000    /* reduce by 403 on tokens in set[0]        */
#define act0210 (void*)0xfe6c8215    /* reduce by 404 on tokens in set[13]       */
#define act0211 (void*)0xfe698215    /* reduce by 407 on tokens in set[13]       */
#define act0213 (void*)0xfe66835d    /* reduce by 410 on tokens in set[21]       */
#define act0214 (void*)0x01220004    /* shift to 290 on COMMA                    */
#define act0216 (void*)0xfe578386    /* reduce by 425 on tokens in set[22]       */
#define act0217 (void*)0x0127002e    /* shift to 295 on BLOCK                    */
#define act0218 (void*)0xfe4d823e    /* reduce by 435 on tokens in set[14]       */
#define act0226 (void*)0xfe3b8000    /* reduce by 453 on tokens in set[0]        */
#define act0228 (void*)0xfeac83af    /* reduce by 340 on tokens in set[23]       */
#define act0229 (void*)0x012a0004    /* shift to 298 on COMMA                    */
#define act0230 (void*)0xfeaa0004    /* reduce by 342 on COMMA                   */
#define act0231 (void*)0xfea90004    /* reduce by 343 on COMMA                   */
#define act0232 (void*)0xfe568000    /* reduce by 426 on tokens in set[0]        */
#define act0233 (void*)0xfe558267    /* reduce by 427 on tokens in set[15]       */
#define act0234 (void*)0xfe538267    /* reduce by 429 on tokens in set[15]       */
#define act0236 (void*)0xfe5083d8    /* reduce by 432 on tokens in set[24]       */
#define act0237 (void*)0xfe3681c3    /* reduce by 458 on tokens in set[11]       */
#define act0239 (void*)0xfe2e8148    /* reduce by 466 on tokens in set[8]        */
#define act0242 (void*)0xffe682b9    /* reduce by 26 on tokens in set[17]        */
#define act0244 (void*)0xffe382b9    /* reduce by 29 on tokens in set[17]        */
#define act0245 (void*)0xffe282b9    /* reduce by 30 on tokens in set[17]        */
#define act0246 (void*)0xffe182b9    /* reduce by 31 on tokens in set[17]        */
#define act0247 (void*)0x01300004    /* shift to 304 on COMMA                    */
#define act0248 (void*)0x01310142    /* shift to 305 on END                      */
#define act0250 (void*)0xffcd8401    /* reduce by 51 on tokens in set[25]        */
#define act0251 (void*)0xffcb8401    /* reduce by 53 on tokens in set[25]        */
#define act0252 (void*)0xffca8401    /* reduce by 54 on tokens in set[25]        */
#define act0253 (void*)0xffc98401    /* reduce by 55 on tokens in set[25]        */
#define act0254 (void*)0xffc88401    /* reduce by 56 on tokens in set[25]        */
#define act0255 (void*)0xffc78401    /* reduce by 57 on tokens in set[25]        */
#define act0256 (void*)0xffc68401    /* reduce by 58 on tokens in set[25]        */
#define act0257 (void*)0xffc58401    /* reduce by 59 on tokens in set[25]        */
#define act0258 (void*)0xffc48401    /* reduce by 60 on tokens in set[25]        */
#define act0259 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0260 (void*)0xffc20003    /* reduce by 62 on STRING                   */
#define act0261 (void*)0xffc10003    /* reduce by 63 on STRING                   */
#define act0262 (void*)0xffc00003    /* reduce by 64 on STRING                   */
#define act0263 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0264 (void*)0xffbe0003    /* reduce by 66 on STRING                   */
#define act0265 (void*)0xffbd0003    /* reduce by 67 on STRING                   */
#define act0266 (void*)0xffbc0003    /* reduce by 68 on STRING                   */
#define act0267 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0268 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0269 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0271 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0274 (void*)0xff84830b    /* reduce by 124 on tokens in set[19]       */
#define act0276 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0277 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0279 (void*)0xfe9d842a    /* reduce by 355 on tokens in set[26]       */
#define act0280 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0281 (void*)0xfe9b842a    /* reduce by 357 on tokens in set[26]       */
#define act0282 (void*)0xfe2c0141    /* reduce by 468 on BEGIN                   */
#define act0283 (void*)0xfe978453    /* reduce by 361 on tokens in set[27]       */
#define act0284 (void*)0xfe968334    /* reduce by 362 on tokens in set[20]       */
#define act0285 (void*)0xfe8d847c    /* reduce by 371 on tokens in set[28]       */
#define act0286 (void*)0x01450004    /* shift to 325 on COMMA                    */
#define act0287 (void*)0xfe908334    /* reduce by 368 on tokens in set[20]       */
#define act0288 (void*)0xfe688000    /* reduce by 408 on tokens in set[0]        */
#define act0289 (void*)0xfe67835d    /* reduce by 409 on tokens in set[21]       */
#define act0290 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0291 (void*)0xfe5a8000    /* reduce by 422 on tokens in set[0]        */
#define act0292 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0294 (void*)0xfe4384a5    /* reduce by 445 on tokens in set[29]       */
#define act0295 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0296 (void*)0xfeae8000    /* reduce by 338 on tokens in set[0]        */
#define act0297 (void*)0xfead83af    /* reduce by 339 on tokens in set[23]       */
#define act0298 (void*)0x014b0030    /* shift to 331 on DIALOG                   */
#define act0299 (void*)0xfe528000    /* reduce by 430 on tokens in set[0]        */
#define act0300 (void*)0xfe5183d8    /* reduce by 431 on tokens in set[24]       */
#define act0302 (void*)0xfe338290    /* reduce by 461 on tokens in set[16]       */
#define act0303 (void*)0x014c0142    /* shift to 332 on END                      */
#define act0304 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0305 (void*)0xffe78000    /* reduce by 25 on tokens in set[0]         */
#define act0306 (void*)0xffcc8401    /* reduce by 52 on tokens in set[25]        */
#define act0307 (void*)0x014e0004    /* shift to 334 on COMMA                    */
#define act0308 (void*)0x014f0004    /* shift to 335 on COMMA                    */
#define act0309 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0310 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0311 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0312 (void*)0x01550004    /* shift to 341 on COMMA                    */
#define act0313 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0314 (void*)0x01570004    /* shift to 343 on COMMA                    */
#define act0315 (void*)0xffb50004    /* reduce by 75 on COMMA                    */
#define act0316 (void*)0xffb40004    /* reduce by 76 on COMMA                    */
#define act0317 (void*)0xffd382e2    /* reduce by 45 on tokens in set[18]        */
#define act0318 (void*)0xffd982e2    /* reduce by 39 on tokens in set[18]        */
#define act0320 (void*)0x01590004    /* shift to 345 on COMMA                    */
#define act0321 (void*)0xfe9f8000    /* reduce by 353 on tokens in set[0]        */
#define act0322 (void*)0xfe9e842a    /* reduce by 354 on tokens in set[26]       */
#define act0323 (void*)0xfe9c842a    /* reduce by 356 on tokens in set[26]       */
#define act0327 (void*)0xfe588386    /* reduce by 424 on tokens in set[22]       */
#define act0328 (void*)0xfe4e8000    /* reduce by 434 on tokens in set[0]        */
#define act0329 (void*)0xfe4484a5    /* reduce by 444 on tokens in set[29]       */
#define act0330 (void*)0x01610141    /* shift to 353 on BEGIN                    */
#define act0331 (void*)0x01620141    /* shift to 354 on BEGIN                    */
#define act0332 (void*)0xffe88000    /* reduce by 24 on tokens in set[0]         */
#define act0333 (void*)0xffd682b9    /* reduce by 42 on tokens in set[17]        */
#define act0334 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0335 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0337 (void*)0xffb284ce    /* reduce by 78 on tokens in set[30]        */
#define act0341 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0343 (void*)0x001b0002    /* shift to 27 on IDENTIFIER                */
#define act0344 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0345 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0346 (void*)0xfe928334    /* reduce by 366 on tokens in set[20]       */
#define act0348 (void*)0xfe8d84f7    /* reduce by 371 on tokens in set[31]       */
#define act0349 (void*)0xfe8f84f7    /* reduce by 369 on tokens in set[31]       */
#define act0350 (void*)0xfe8e84f7    /* reduce by 370 on tokens in set[31]       */
#define act0351 (void*)0xfe65835d    /* reduce by 411 on tokens in set[21]       */
#define act0354 (void*)0xfea78520    /* reduce by 345 on tokens in set[32]       */
#define act0355 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0356 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0357 (void*)0xffb384ce    /* reduce by 77 on tokens in set[30]        */
#define act0358 (void*)0xffb184ce    /* reduce by 79 on tokens in set[30]        */
#define act0359 (void*)0xffb084ce    /* reduce by 80 on tokens in set[30]        */
#define act0360 (void*)0xffaf84ce    /* reduce by 81 on tokens in set[30]        */
#define act0363 (void*)0xffab8549    /* reduce by 85 on tokens in set[33]        */
#define act0364 (void*)0xffa98549    /* reduce by 87 on tokens in set[33]        */
#define act0365 (void*)0xffa88549    /* reduce by 88 on tokens in set[33]        */
#define act0366 (void*)0xffa78549    /* reduce by 89 on tokens in set[33]        */
#define act0367 (void*)0xffa68549    /* reduce by 90 on tokens in set[33]        */
#define act0368 (void*)0xffa58549    /* reduce by 91 on tokens in set[33]        */
#define act0369 (void*)0xffa48549    /* reduce by 92 on tokens in set[33]        */
#define act0370 (void*)0xffa38549    /* reduce by 93 on tokens in set[33]        */
#define act0371 (void*)0xffa28549    /* reduce by 94 on tokens in set[33]        */
#define act0372 (void*)0xffa18549    /* reduce by 95 on tokens in set[33]        */
#define act0373 (void*)0xffa08549    /* reduce by 96 on tokens in set[33]        */
#define act0374 (void*)0xff9f8549    /* reduce by 97 on tokens in set[33]        */
#define act0375 (void*)0xff9e8549    /* reduce by 98 on tokens in set[33]        */
#define act0376 (void*)0xff9d8549    /* reduce by 99 on tokens in set[33]        */
#define act0377 (void*)0xff9c8549    /* reduce by 100 on tokens in set[33]       */
#define act0378 (void*)0xff5c8549    /* reduce by 164 on tokens in set[33]       */
#define act0379 (void*)0xff5b8549    /* reduce by 165 on tokens in set[33]       */
#define act0380 (void*)0xff5a8549    /* reduce by 166 on tokens in set[33]       */
#define act0381 (void*)0xff598549    /* reduce by 167 on tokens in set[33]       */
#define act0382 (void*)0xff588549    /* reduce by 168 on tokens in set[33]       */
#define act0383 (void*)0xff578549    /* reduce by 169 on tokens in set[33]       */
#define act0384 (void*)0xff568549    /* reduce by 170 on tokens in set[33]       */
#define act0385 (void*)0xff558549    /* reduce by 171 on tokens in set[33]       */
#define act0386 (void*)0xff548549    /* reduce by 172 on tokens in set[33]       */
#define act0387 (void*)0xff538549    /* reduce by 173 on tokens in set[33]       */
#define act0388 (void*)0xff528549    /* reduce by 174 on tokens in set[33]       */
#define act0389 (void*)0xff518549    /* reduce by 175 on tokens in set[33]       */
#define act0390 (void*)0xff508549    /* reduce by 176 on tokens in set[33]       */
#define act0391 (void*)0xff4f8549    /* reduce by 177 on tokens in set[33]       */
#define act0392 (void*)0xff4e8549    /* reduce by 178 on tokens in set[33]       */
#define act0393 (void*)0xff4d8549    /* reduce by 179 on tokens in set[33]       */
#define act0394 (void*)0xff4c8549    /* reduce by 180 on tokens in set[33]       */
#define act0395 (void*)0xff4b8549    /* reduce by 181 on tokens in set[33]       */
#define act0396 (void*)0xff4a8549    /* reduce by 182 on tokens in set[33]       */
#define act0397 (void*)0xff498549    /* reduce by 183 on tokens in set[33]       */
#define act0398 (void*)0xff488549    /* reduce by 184 on tokens in set[33]       */
#define act0399 (void*)0xff478549    /* reduce by 185 on tokens in set[33]       */
#define act0400 (void*)0xff468549    /* reduce by 186 on tokens in set[33]       */
#define act0401 (void*)0xff458549    /* reduce by 187 on tokens in set[33]       */
#define act0402 (void*)0xff448549    /* reduce by 188 on tokens in set[33]       */
#define act0403 (void*)0xff438549    /* reduce by 189 on tokens in set[33]       */
#define act0404 (void*)0xff428549    /* reduce by 190 on tokens in set[33]       */
#define act0405 (void*)0xff418549    /* reduce by 191 on tokens in set[33]       */
#define act0406 (void*)0xff408549    /* reduce by 192 on tokens in set[33]       */
#define act0407 (void*)0xff3f8549    /* reduce by 193 on tokens in set[33]       */
#define act0408 (void*)0xff3e8549    /* reduce by 194 on tokens in set[33]       */
#define act0409 (void*)0xff3d8549    /* reduce by 195 on tokens in set[33]       */
#define act0410 (void*)0xff3c8549    /* reduce by 196 on tokens in set[33]       */
#define act0411 (void*)0xff3b8549    /* reduce by 197 on tokens in set[33]       */
#define act0412 (void*)0xff3a8549    /* reduce by 198 on tokens in set[33]       */
#define act0413 (void*)0xff398549    /* reduce by 199 on tokens in set[33]       */
#define act0414 (void*)0xff388549    /* reduce by 200 on tokens in set[33]       */
#define act0415 (void*)0xff378549    /* reduce by 201 on tokens in set[33]       */
#define act0416 (void*)0xff368549    /* reduce by 202 on tokens in set[33]       */
#define act0417 (void*)0xff358549    /* reduce by 203 on tokens in set[33]       */
#define act0418 (void*)0xff348549    /* reduce by 204 on tokens in set[33]       */
#define act0419 (void*)0xff338549    /* reduce by 205 on tokens in set[33]       */
#define act0420 (void*)0xff328549    /* reduce by 206 on tokens in set[33]       */
#define act0421 (void*)0xff318549    /* reduce by 207 on tokens in set[33]       */
#define act0422 (void*)0xff308549    /* reduce by 208 on tokens in set[33]       */
#define act0423 (void*)0xff2f8549    /* reduce by 209 on tokens in set[33]       */
#define act0424 (void*)0xff2e8549    /* reduce by 210 on tokens in set[33]       */
#define act0425 (void*)0xff2d8549    /* reduce by 211 on tokens in set[33]       */
#define act0426 (void*)0xff2c8549    /* reduce by 212 on tokens in set[33]       */
#define act0427 (void*)0xff2b8549    /* reduce by 213 on tokens in set[33]       */
#define act0428 (void*)0xff2a8549    /* reduce by 214 on tokens in set[33]       */
#define act0429 (void*)0xff298549    /* reduce by 215 on tokens in set[33]       */
#define act0430 (void*)0xff288549    /* reduce by 216 on tokens in set[33]       */
#define act0431 (void*)0xff278549    /* reduce by 217 on tokens in set[33]       */
#define act0432 (void*)0xff268549    /* reduce by 218 on tokens in set[33]       */
#define act0433 (void*)0xff258549    /* reduce by 219 on tokens in set[33]       */
#define act0434 (void*)0xff248549    /* reduce by 220 on tokens in set[33]       */
#define act0435 (void*)0xff238549    /* reduce by 221 on tokens in set[33]       */
#define act0436 (void*)0xff228549    /* reduce by 222 on tokens in set[33]       */
#define act0437 (void*)0xff218549    /* reduce by 223 on tokens in set[33]       */
#define act0438 (void*)0xff208549    /* reduce by 224 on tokens in set[33]       */
#define act0439 (void*)0xff1f8549    /* reduce by 225 on tokens in set[33]       */
#define act0440 (void*)0xff1e8549    /* reduce by 226 on tokens in set[33]       */
#define act0441 (void*)0xff1d8549    /* reduce by 227 on tokens in set[33]       */
#define act0442 (void*)0xff1c8549    /* reduce by 228 on tokens in set[33]       */
#define act0443 (void*)0xff1b8549    /* reduce by 229 on tokens in set[33]       */
#define act0444 (void*)0xff1a8549    /* reduce by 230 on tokens in set[33]       */
#define act0445 (void*)0xff198549    /* reduce by 231 on tokens in set[33]       */
#define act0446 (void*)0xff188549    /* reduce by 232 on tokens in set[33]       */
#define act0447 (void*)0xff178549    /* reduce by 233 on tokens in set[33]       */
#define act0448 (void*)0xff168549    /* reduce by 234 on tokens in set[33]       */
#define act0449 (void*)0xff158549    /* reduce by 235 on tokens in set[33]       */
#define act0450 (void*)0xff148549    /* reduce by 236 on tokens in set[33]       */
#define act0451 (void*)0xff138549    /* reduce by 237 on tokens in set[33]       */
#define act0452 (void*)0xff128549    /* reduce by 238 on tokens in set[33]       */
#define act0453 (void*)0xff118549    /* reduce by 239 on tokens in set[33]       */
#define act0454 (void*)0xff108549    /* reduce by 240 on tokens in set[33]       */
#define act0455 (void*)0xff0f8549    /* reduce by 241 on tokens in set[33]       */
#define act0456 (void*)0xff0e8549    /* reduce by 242 on tokens in set[33]       */
#define act0457 (void*)0xff0d8549    /* reduce by 243 on tokens in set[33]       */
#define act0458 (void*)0xff0c8549    /* reduce by 244 on tokens in set[33]       */
#define act0459 (void*)0xff0b8549    /* reduce by 245 on tokens in set[33]       */
#define act0460 (void*)0xff0a8549    /* reduce by 246 on tokens in set[33]       */
#define act0461 (void*)0xff098549    /* reduce by 247 on tokens in set[33]       */
#define act0462 (void*)0xff088549    /* reduce by 248 on tokens in set[33]       */
#define act0463 (void*)0xff078549    /* reduce by 249 on tokens in set[33]       */
#define act0464 (void*)0xff068549    /* reduce by 250 on tokens in set[33]       */
#define act0465 (void*)0xff058549    /* reduce by 251 on tokens in set[33]       */
#define act0466 (void*)0xff048549    /* reduce by 252 on tokens in set[33]       */
#define act0467 (void*)0xff038549    /* reduce by 253 on tokens in set[33]       */
#define act0468 (void*)0xff028549    /* reduce by 254 on tokens in set[33]       */
#define act0469 (void*)0xff018549    /* reduce by 255 on tokens in set[33]       */
#define act0470 (void*)0xff008549    /* reduce by 256 on tokens in set[33]       */
#define act0471 (void*)0xfeff8549    /* reduce by 257 on tokens in set[33]       */
#define act0472 (void*)0xfefe8549    /* reduce by 258 on tokens in set[33]       */
#define act0473 (void*)0xfefd8549    /* reduce by 259 on tokens in set[33]       */
#define act0474 (void*)0xfefc8549    /* reduce by 260 on tokens in set[33]       */
#define act0475 (void*)0xfefb8549    /* reduce by 261 on tokens in set[33]       */
#define act0476 (void*)0xfefa8549    /* reduce by 262 on tokens in set[33]       */
#define act0477 (void*)0xfef98549    /* reduce by 263 on tokens in set[33]       */
#define act0478 (void*)0xfef88549    /* reduce by 264 on tokens in set[33]       */
#define act0479 (void*)0xfef78549    /* reduce by 265 on tokens in set[33]       */
#define act0480 (void*)0xfef68549    /* reduce by 266 on tokens in set[33]       */
#define act0481 (void*)0xfef58549    /* reduce by 267 on tokens in set[33]       */
#define act0482 (void*)0xfef48549    /* reduce by 268 on tokens in set[33]       */
#define act0483 (void*)0xfef38549    /* reduce by 269 on tokens in set[33]       */
#define act0484 (void*)0xfef28549    /* reduce by 270 on tokens in set[33]       */
#define act0485 (void*)0xfef18549    /* reduce by 271 on tokens in set[33]       */
#define act0486 (void*)0xfef08549    /* reduce by 272 on tokens in set[33]       */
#define act0487 (void*)0xfeef8549    /* reduce by 273 on tokens in set[33]       */
#define act0488 (void*)0xfeee8549    /* reduce by 274 on tokens in set[33]       */
#define act0489 (void*)0xfeed8549    /* reduce by 275 on tokens in set[33]       */
#define act0490 (void*)0xfeec8549    /* reduce by 276 on tokens in set[33]       */
#define act0491 (void*)0xfeeb8549    /* reduce by 277 on tokens in set[33]       */
#define act0492 (void*)0xfeea8549    /* reduce by 278 on tokens in set[33]       */
#define act0493 (void*)0xfee98549    /* reduce by 279 on tokens in set[33]       */
#define act0494 (void*)0xfee88549    /* reduce by 280 on tokens in set[33]       */
#define act0495 (void*)0xfee78549    /* reduce by 281 on tokens in set[33]       */
#define act0496 (void*)0xfee68549    /* reduce by 282 on tokens in set[33]       */
#define act0497 (void*)0xfee58549    /* reduce by 283 on tokens in set[33]       */
#define act0498 (void*)0xfee48549    /* reduce by 284 on tokens in set[33]       */
#define act0499 (void*)0xfee38549    /* reduce by 285 on tokens in set[33]       */
#define act0500 (void*)0xfee28549    /* reduce by 286 on tokens in set[33]       */
#define act0501 (void*)0xfee18549    /* reduce by 287 on tokens in set[33]       */
#define act0502 (void*)0xfee08549    /* reduce by 288 on tokens in set[33]       */
#define act0503 (void*)0xfedf8549    /* reduce by 289 on tokens in set[33]       */
#define act0504 (void*)0xfede8549    /* reduce by 290 on tokens in set[33]       */
#define act0505 (void*)0xfedd8549    /* reduce by 291 on tokens in set[33]       */
#define act0506 (void*)0xfedc8549    /* reduce by 292 on tokens in set[33]       */
#define act0507 (void*)0xfedb8549    /* reduce by 293 on tokens in set[33]       */
#define act0508 (void*)0xfeda8549    /* reduce by 294 on tokens in set[33]       */
#define act0509 (void*)0xfed98549    /* reduce by 295 on tokens in set[33]       */
#define act0510 (void*)0xfed88549    /* reduce by 296 on tokens in set[33]       */
#define act0511 (void*)0xfed78549    /* reduce by 297 on tokens in set[33]       */
#define act0512 (void*)0xfed68549    /* reduce by 298 on tokens in set[33]       */
#define act0513 (void*)0xfed58549    /* reduce by 299 on tokens in set[33]       */
#define act0514 (void*)0xfed48549    /* reduce by 300 on tokens in set[33]       */
#define act0515 (void*)0xfed38549    /* reduce by 301 on tokens in set[33]       */
#define act0516 (void*)0xfed28549    /* reduce by 302 on tokens in set[33]       */
#define act0517 (void*)0xfed18549    /* reduce by 303 on tokens in set[33]       */
#define act0518 (void*)0xfed08549    /* reduce by 304 on tokens in set[33]       */
#define act0519 (void*)0xfecf8549    /* reduce by 305 on tokens in set[33]       */
#define act0520 (void*)0xfece8549    /* reduce by 306 on tokens in set[33]       */
#define act0521 (void*)0xfecd8549    /* reduce by 307 on tokens in set[33]       */
#define act0522 (void*)0xfecc8549    /* reduce by 308 on tokens in set[33]       */
#define act0523 (void*)0xfecb8549    /* reduce by 309 on tokens in set[33]       */
#define act0524 (void*)0xfeca8549    /* reduce by 310 on tokens in set[33]       */
#define act0525 (void*)0xfec98549    /* reduce by 311 on tokens in set[33]       */
#define act0526 (void*)0xfec88549    /* reduce by 312 on tokens in set[33]       */
#define act0527 (void*)0xfec78549    /* reduce by 313 on tokens in set[33]       */
#define act0528 (void*)0xfec68549    /* reduce by 314 on tokens in set[33]       */
#define act0529 (void*)0xfec58549    /* reduce by 315 on tokens in set[33]       */
#define act0530 (void*)0xfec48549    /* reduce by 316 on tokens in set[33]       */
#define act0531 (void*)0xfec38549    /* reduce by 317 on tokens in set[33]       */
#define act0532 (void*)0xfec28549    /* reduce by 318 on tokens in set[33]       */
#define act0533 (void*)0xfec18549    /* reduce by 319 on tokens in set[33]       */
#define act0534 (void*)0xfec08549    /* reduce by 320 on tokens in set[33]       */
#define act0535 (void*)0xfebf8549    /* reduce by 321 on tokens in set[33]       */
#define act0536 (void*)0xfebe8549    /* reduce by 322 on tokens in set[33]       */
#define act0537 (void*)0xfebd8549    /* reduce by 323 on tokens in set[33]       */
#define act0538 (void*)0xfebc8549    /* reduce by 324 on tokens in set[33]       */
#define act0539 (void*)0xfebb8549    /* reduce by 325 on tokens in set[33]       */
#define act0540 (void*)0xfeba8549    /* reduce by 326 on tokens in set[33]       */
#define act0541 (void*)0xfeb98549    /* reduce by 327 on tokens in set[33]       */
#define act0542 (void*)0xfeb88549    /* reduce by 328 on tokens in set[33]       */
#define act0543 (void*)0xfeb78549    /* reduce by 329 on tokens in set[33]       */
#define act0544 (void*)0xfeb68549    /* reduce by 330 on tokens in set[33]       */
#define act0545 (void*)0xfeb58549    /* reduce by 331 on tokens in set[33]       */
#define act0546 (void*)0xfeb48549    /* reduce by 332 on tokens in set[33]       */
#define act0547 (void*)0xfeb38549    /* reduce by 333 on tokens in set[33]       */
#define act0548 (void*)0xfeb28549    /* reduce by 334 on tokens in set[33]       */
#define act0549 (void*)0xfeb18549    /* reduce by 335 on tokens in set[33]       */
#define act0550 (void*)0xfeb08549    /* reduce by 336 on tokens in set[33]       */
#define act0551 (void*)0xfeaf8549    /* reduce by 337 on tokens in set[33]       */
#define act0552 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0553 (void*)0x025e0004    /* shift to 606 on COMMA                    */
#define act0554 (void*)0x025f0004    /* shift to 607 on COMMA                    */
#define act0555 (void*)0xfe2d8572    /* reduce by 467 on tokens in set[34]       */
#define act0556 (void*)0xfe8c859b    /* reduce by 372 on tokens in set[35]       */
#define act0557 (void*)0xfe8b859b    /* reduce by 373 on tokens in set[35]       */
#define act0558 (void*)0xfe8a859b    /* reduce by 374 on tokens in set[35]       */
#define act0559 (void*)0xfe89859b    /* reduce by 375 on tokens in set[35]       */
#define act0560 (void*)0xfe88859b    /* reduce by 376 on tokens in set[35]       */
#define act0562 (void*)0xfe8585c4    /* reduce by 379 on tokens in set[36]       */
#define act0563 (void*)0xfe8485c4    /* reduce by 380 on tokens in set[36]       */
#define act0564 (void*)0xfe8385c4    /* reduce by 381 on tokens in set[36]       */
#define act0565 (void*)0xfe8285c4    /* reduce by 382 on tokens in set[36]       */
#define act0566 (void*)0xfe8185c4    /* reduce by 383 on tokens in set[36]       */
#define act0567 (void*)0xfe8085c4    /* reduce by 384 on tokens in set[36]       */
#define act0568 (void*)0xfe7f85c4    /* reduce by 385 on tokens in set[36]       */
#define act0569 (void*)0xfe7e85c4    /* reduce by 386 on tokens in set[36]       */
#define act0570 (void*)0xfe7d85c4    /* reduce by 387 on tokens in set[36]       */
#define act0571 (void*)0xfe7c85c4    /* reduce by 388 on tokens in set[36]       */
#define act0572 (void*)0xfe7b85c4    /* reduce by 389 on tokens in set[36]       */
#define act0573 (void*)0xfe7a85c4    /* reduce by 390 on tokens in set[36]       */
#define act0574 (void*)0xfe7985c4    /* reduce by 391 on tokens in set[36]       */
#define act0575 (void*)0xfe7885c4    /* reduce by 392 on tokens in set[36]       */
#define act0576 (void*)0xfe7785c4    /* reduce by 393 on tokens in set[36]       */
#define act0577 (void*)0xfe7685c4    /* reduce by 394 on tokens in set[36]       */
#define act0578 (void*)0xfe7585c4    /* reduce by 395 on tokens in set[36]       */
#define act0579 (void*)0xfe7485c4    /* reduce by 396 on tokens in set[36]       */
#define act0580 (void*)0xfe7385c4    /* reduce by 397 on tokens in set[36]       */
#define act0581 (void*)0xfe7285c4    /* reduce by 398 on tokens in set[36]       */
#define act0582 (void*)0xfe7185c4    /* reduce by 399 on tokens in set[36]       */
#define act0583 (void*)0xfe7085c4    /* reduce by 400 on tokens in set[36]       */
#define act0584 (void*)0xfe6f85c4    /* reduce by 401 on tokens in set[36]       */
#define act0585 (void*)0xfe6e85c4    /* reduce by 402 on tokens in set[36]       */
#define act0588 (void*)0xfe6285ed    /* reduce by 414 on tokens in set[37]       */
#define act0589 (void*)0xfe6085ed    /* reduce by 416 on tokens in set[37]       */
#define act0590 (void*)0xfe5f85ed    /* reduce by 417 on tokens in set[37]       */
#define act0591 (void*)0xfe5e85ed    /* reduce by 418 on tokens in set[37]       */
#define act0592 (void*)0xfe5d85ed    /* reduce by 419 on tokens in set[37]       */
#define act0593 (void*)0xfe5c85ed    /* reduce by 420 on tokens in set[37]       */
#define act0594 (void*)0xfe5b85ed    /* reduce by 421 on tokens in set[37]       */
#define act0595 (void*)0x02620142    /* shift to 610 on END                      */
#define act0598 (void*)0xfe3e8616    /* reduce by 450 on tokens in set[38]       */
#define act0606 (void*)0x00330003    /* shift to 51 on STRING                    */
#define act0607 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0610 (void*)0xfe4284a5    /* reduce by 446 on tokens in set[29]       */
#define act0611 (void*)0xfe3f8616    /* reduce by 449 on tokens in set[38]       */
#define act0613 (void*)0xfeab83af    /* reduce by 341 on tokens in set[23]       */
#define act0614 (void*)0xfea88520    /* reduce by 344 on tokens in set[32]       */
#define act0615 (void*)0x02740004    /* shift to 628 on COMMA                    */
#define act0616 (void*)0xfea50004    /* reduce by 347 on COMMA                   */
#define act0617 (void*)0xfea40004    /* reduce by 348 on COMMA                   */
#define act0618 (void*)0xfea30004    /* reduce by 349 on COMMA                   */
#define act0619 (void*)0xfea20004    /* reduce by 350 on COMMA                   */
#define act0620 (void*)0xfea10004    /* reduce by 351 on COMMA                   */
#define act0621 (void*)0xfea00004    /* reduce by 352 on COMMA                   */
#define act0622 (void*)0xffac8549    /* reduce by 84 on tokens in set[33]        */
#define act0623 (void*)0xffaa8549    /* reduce by 86 on tokens in set[33]        */
#define act0624 (void*)0x01520004    /* shift to 338 on COMMA                    */
#define act0625 (void*)0x02760004    /* shift to 630 on COMMA                    */
#define act0626 (void*)0xfe8685c4    /* reduce by 378 on tokens in set[36]       */
#define act0627 (void*)0xfe6185ed    /* reduce by 415 on tokens in set[37]       */
#define act0628 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0630 (void*)0x001a0001    /* shift to 26 on NUMBER                    */
#define act0631 (void*)0xfea68520    /* reduce by 346 on tokens in set[32]       */
#define act0632 (void*)0xffd581ec    /* reduce by 43 on tokens in set[12]        */

static const TableType act0000[] = {   5,   1,  26,   2,  27,   5,  22,  20,  23,  30,  25};
static const TableType act0002[] = {   6,   0,  -1,   1,  26,   2,  27,   5,  22,  20,  23
                                        ,  30,  25};
static const TableType act0021[] = {  13,   2,  27,  13,  34,  15,  29,  16,  30,  18,  41
                                        ,  21,  37,  27,  38,  28,  36,  32,  42,  38,  39
                                        ,  48,  32,  49,  33,  50,  40};
static const TableType act0024[] = {   2,  29,  45,  31,  46};
static const TableType act0025[] = {   3,   1,  26,   2,  27,   3,  51};
static const TableType act0044[] = {   7,  54,  68,  55,  69,  56,  70,  57,  71,  58,  72
                                        ,  59,  73, 321,  67};
static const TableType act0046[] = {   2,   2,  27,   3,  51};
static const TableType act0049[] = {  21,   0,-464,   1,-464,   2,-464,   3,-464,   4,-464
                                        ,   5,-464,  20,-464,  30,-464,  39,-464,  40,-464
                                        ,  41,-464,  42,-464,  43,-464,  44,-464,  45,-464
                                        ,  47,-464, 321,-464, 322,-464, 323,-464, 326,  80
                                        , 327,-464};
static const TableType act0052[] = {   7,   3,  51,  54,  68,  55,  69,  56,  70,  57,  71
                                        ,  58,  72,  59,  73};
static const TableType act0055[] = {   7,   1,  26,  54,  68,  55,  69,  56,  70,  57,  71
                                        ,  58,  72,  59,  73};
static const TableType act0056[] = {   5,  17,  91,  18,  90,  51,  87,  52,  88,  53,  89};
static const TableType act0059[] = {   7,  54,  68,  55,  69,  56,  70,  57,  71,  58,  72
                                        ,  59,  73, 321,  96};
static const TableType act0060[] = {   4,   1,  26,   2,  27,   3,  51,   4, 100};
static const TableType act0061[] = {   7,  54,  68,  55,  69,  56,  70,  57,  71,  58,  72
                                        ,  59,  73, 321, 101};
static const TableType act0062[] = {   8,   3,  51,  54,  68,  55,  69,  56,  70,  57,  71
                                        ,  58,  72,  59,  73, 321, 102};
static const TableType act0063[] = {  13,  39, 106,  40, 107,  41, 108,  42, 109,  43, 110
                                        ,  44, 111,  45, 112,  54,  68,  55,  69,  56,  70
                                        ,  57,  71,  58,  72,  59,  73};
static const TableType act0065[] = {   7,  54,  68,  55,  69,  56,  70,  57,  71,  58,  72
                                        ,  59,  73, 321, 115};
static const TableType act0074[] = {   7,  54,  68,  55,  69,  56,  70,  57,  71,  58,  72
                                        ,  59,  73, 321, 119};
static const TableType act0077[] = {   7,   0,-456,   1,-456,   2,-456,   5,-456,  20,-456
                                        ,  30,-456, 325, 120};
static const TableType act0084[] = {   4,  17, 130,  18, 129,  51, 127,  53, 128};
static const TableType act0085[] = {   6,  17,  91,  18,  90,  51,  87,  52,  88,  53,  89
                                        , 321, 131};
static const TableType act0087[] = {  35,  71, 153,  72, 154,  73, 155,  74, 156,  75, 157
                                        ,  76, 158,  77, 159,  78, 160,  79, 161,  80, 162
                                        ,  81, 163,  82, 164,  83, 165,  84, 166,  85, 167
                                        ,  86, 168,  87, 169,  88, 170,  89, 171,  90, 172
                                        , 284, 137, 285, 138, 286, 139, 287, 140, 288, 141
                                        , 289, 142, 290, 143, 291, 144, 292, 145, 293, 146
                                        , 294, 147, 295, 148, 296, 149, 297, 150, 324, 152};
static const TableType act0088[] = {  19,  91, 176,  92, 177,  93, 178,  94, 179,  95, 180
                                        ,  96, 181,  97, 182,  98, 183,  99, 184, 100, 185
                                        , 101, 186, 102, 187, 103, 188, 104, 189, 105, 190
                                        , 106, 191, 107, 192, 108, 193, 109, 194};
static const TableType act0096[] = {   2,  19, 208,  33, 207};
static const TableType act0097[] = {   5,   1,  26,   2,  27,   3,  51,   4, 100, 322, 209};
static const TableType act0104[] = {   8,  39, 106,  40, 107,  41, 108,  42, 109,  43, 110
                                        ,  44, 111,  45, 112, 321, 217};
static const TableType act0116[] = {   2,   2,  27, 322, 232};
static const TableType act0122[] = {   2,   4, 238, 327, 239};
static const TableType act0123[] = {  11,   4,-460,  39,-460,  40,-460,  41,-460,  42,-460
                                        ,  43,-460,  44,-460,  45,-460, 321,-460, 323, 240
                                        , 327,-460};
static const TableType act0125[] = {   5,  17, 130,  18, 129,  51, 127,  53, 128, 321, 241};
static const TableType act0131[] = {  13,  16, 270,  60, 260,  61, 261,  62, 267,  63, 271
                                        ,  64, 268,  65, 269,  66, 262,  67, 264,  68, 265
                                        ,  69, 266,  70, 272, 322, -49};
static const TableType act0133[] = {   7,  17, -34,  18, -34,  51, -34,  52, -34,  53, -34
                                        , 321, -34, 323, 273};
static const TableType act0152[] = {  20,  71, 153,  72, 154,  73, 155,  74, 156,  75, 157
                                        ,  76, 158,  77, 159,  78, 160,  79, 161,  80, 162
                                        ,  81, 163,  82, 164,  83, 165,  84, 166,  85, 167
                                        ,  86, 168,  87, 169,  88, 170,  89, 171,  90, 172};
static const TableType act0173[] = {   7,  17, -35,  18, -35,  51, -35,  52, -35,  53, -35
                                        , 321, -35, 323, 275};
static const TableType act0201[] = {   2,  14, 280,  37, 281};
static const TableType act0203[] = {   3,  19, 208,  33, 207, 322, 283};
static const TableType act0208[] = {   2,   3,  51,  37, 287};
static const TableType act0212[] = {   4,   1,  26,   2,  27,   3,  51, 322, 288};
static const TableType act0215[] = {   2,   4, 292, 322, 291};
static const TableType act0219[] = {   9,   4, 238,  39,-437,  40,-437,  41,-437,  42,-437
                                        ,  43,-437,  44,-437,  45,-437, 321,-437};
static const TableType act0220[] = {   9,   4, 238,  39,-438,  40,-438,  41,-438,  42,-438
                                        ,  43,-438,  44,-438,  45,-438, 321,-438};
static const TableType act0221[] = {   9,  39,-439,  40,-439,  41,-439,  42,-439,  43,-439
                                        ,  44,-439,  45,-439, 321,-439, 323, 240};
static const TableType act0222[] = {   9,  39,-440,  40,-440,  41,-440,  42,-440,  43,-440
                                        ,  44,-440,  45,-440, 321,-440, 323, 240};
static const TableType act0223[] = {   9,  39,-441,  40,-441,  41,-441,  42,-441,  43,-441
                                        ,  44,-441,  45,-441, 321,-441, 323, 240};
static const TableType act0224[] = {   9,  39,-442,  40,-442,  41,-442,  42,-442,  43,-442
                                        ,  44,-442,  45,-442, 321,-442, 323, 240};
static const TableType act0225[] = {   9,  39,-443,  40,-443,  41,-443,  42,-443,  43,-443
                                        ,  44,-443,  45,-443, 321,-443, 323, 240};
static const TableType act0227[] = {   3,   2,  27,   3,  51, 322, 296};
static const TableType act0235[] = {   2,   3,  51, 322, 299};
static const TableType act0243[] = {   6,  17, -28,  18, -28,  51, -28,  53, -28, 321, -28
                                        , 323, 273};
static const TableType act0249[] = {  13,  16, 270,  60, 260,  61, 261,  62, 267,  63, 271
                                        ,  64, 268,  65, 269,  66, 262,  67, 264,  68, 265
                                        ,  69, 266,  70, 272, 322, -50};
static const TableType act0272[] = {   2,   1,  26,   3,  51};
static const TableType act0278[] = {   3,  14, 280,  37, 281, 322, 321};
static const TableType act0293[] = {   2,  46, 295, 322, 328};
static const TableType act0301[] = {  11,   4,-459,  39,-459,  40,-459,  41,-459,  42,-459
                                        ,  43,-459,  44,-459,  45,-459, 321,-459, 323, 240
                                        , 327,-459};
static const TableType act0319[] = {   7,   4, 344,  17, -42,  18, -42,  51, -42,  52, -42
                                        ,  53, -42, 321, -42};
static const TableType act0324[] = {   2,   4, 347, 321,  96};
static const TableType act0325[] = {   2,   1,  26,   2,  27};
static const TableType act0326[] = {   5,   1,-412,   2,-412,   3,-412,   4, 352, 322,-412};
static const TableType act0336[] = {  14,   4, 338,  16, -69,  60, -69,  61, -69,  62, -69
                                        ,  63, -69,  64, -69,  65, -69,  66, -69,  67, -69
                                        ,  68, -69,  69, -69,  70, -69, 322, -69};
static const TableType act0338[] = { 216,   1,  26,   2,  27,  71, 153,  72, 154,  73, 155
                                        ,  74, 156,  75, 157,  76, 158,  77, 159,  78, 160
                                        ,  79, 161,  80, 162,  81, 163,  82, 164,  83, 165
                                        ,  84, 166,  85, 167,  86, 168,  87, 169,  88, 170
                                        ,  89, 171,  90, 172,  91, 176,  92, 177,  93, 178
                                        ,  94, 179,  95, 180,  96, 181,  97, 182,  98, 183
                                        ,  99, 184, 100, 185, 101, 186, 102, 187, 103, 188
                                        , 104, 189, 105, 190, 106, 191, 107, 192, 108, 193
                                        , 109, 194, 110, 378, 111, 379, 112, 380, 113, 381
                                        , 114, 382, 115, 383, 116, 384, 117, 385, 118, 386
                                        , 119, 387, 120, 388, 121, 389, 122, 390, 123, 391
                                        , 124, 392, 125, 393, 126, 394, 127, 395, 128, 396
                                        , 129, 397, 130, 398, 131, 399, 132, 400, 133, 401
                                        , 134, 402, 135, 403, 136, 404, 137, 405, 138, 406
                                        , 139, 407, 140, 408, 141, 409, 142, 410, 143, 411
                                        , 144, 412, 145, 413, 146, 414, 147, 415, 148, 416
                                        , 149, 417, 150, 418, 151, 419, 152, 420, 153, 421
                                        , 154, 450, 155, 451, 156, 452, 157, 453, 158, 454
                                        , 159, 455, 160, 456, 161, 457, 162, 458, 163, 459
                                        , 164, 460, 165, 461, 166, 462, 167, 463, 168, 464
                                        , 169, 465, 170, 466, 171, 467, 172, 468, 173, 469
                                        , 174, 470, 175, 471, 176, 472, 177, 473, 178, 474
                                        , 179, 475, 180, 476, 181, 477, 182, 478, 183, 479
                                        , 184, 480, 185, 481, 186, 482, 187, 483, 188, 484
                                        , 189, 485, 190, 422, 191, 423, 192, 424, 193, 425
                                        , 194, 426, 195, 427, 196, 428, 197, 429, 198, 430
                                        , 199, 431, 200, 432, 201, 433, 202, 434, 203, 435
                                        , 204, 436, 205, 437, 206, 438, 207, 439, 208, 440
                                        , 209, 441, 210, 442, 211, 443, 212, 444, 213, 445
                                        , 214, 446, 215, 447, 216, 448, 217, 449, 218, 486
                                        , 219, 487, 220, 488, 221, 489, 222, 490, 223, 491
                                        , 224, 492, 225, 493, 226, 494, 227, 495, 228, 496
                                        , 229, 497, 230, 498, 231, 499, 232, 500, 233, 501
                                        , 234, 502, 235, 503, 236, 504, 237, 505, 238, 506
                                        , 239, 507, 240, 508, 241, 509, 242, 510, 243, 511
                                        , 244, 512, 245, 513, 246, 514, 247, 515, 248, 516
                                        , 249, 517, 250, 518, 251, 519, 252, 520, 253, 521
                                        , 254, 522, 255, 523, 256, 524, 257, 525, 258, 526
                                        , 259, 527, 260, 528, 261, 529, 262, 530, 263, 531
                                        , 264, 532, 265, 533, 266, 534, 267, 535, 268, 536
                                        , 269, 537, 270, 538, 271, 539, 272, 540, 273, 541
                                        , 274, 542, 275, 543, 276, 544, 277, 545, 278, 546
                                        , 279, 547, 280, 548, 281, 549, 282, 550, 283, 551
                                        , 324, 152};
static const TableType act0339[] = {  14,   4, 338,  16, -70,  60, -70,  61, -70,  62, -70
                                        ,  63, -70,  64, -70,  65, -70,  66, -70,  67, -70
                                        ,  68, -70,  69, -70,  70, -70, 322, -70};
static const TableType act0340[] = {  14,   4, 338,  16, -71,  60, -71,  61, -71,  62, -71
                                        ,  63, -71,  64, -71,  65, -71,  66, -71,  67, -71
                                        ,  68, -71,  69, -71,  70, -71, 322, -71};
static const TableType act0342[] = {  14,   4, 338,  16, -73,  60, -73,  61, -73,  62, -73
                                        ,  63, -73,  64, -73,  65, -73,  66, -73,  67, -73
                                        ,  68, -73,  69, -73,  70, -73, 322, -73};
static const TableType act0347[] = {  27,   1,  26,  34, 558,  35, 559,  36, 560, 298, 563
                                        , 299, 564, 300, 565, 301, 566, 302, 567, 303, 568
                                        , 304, 569, 305, 570, 306, 571, 307, 572, 308, 573
                                        , 309, 574, 310, 575, 311, 576, 312, 577, 313, 578
                                        , 314, 579, 315, 580, 316, 581, 317, 582, 318, 583
                                        , 319, 584, 320, 585};
static const TableType act0352[] = {   6,  22, 589,  23, 590,  24, 591,  25, 593,  26, 594
                                        ,  70, 592};
static const TableType act0353[] = {   2,  46, 295,  47, 599};
static const TableType act0361[] = {  15,   4, -82,  16, -82,  60, -82,  61, -82,  62, -82
                                        ,  63, -82,  64, -82,  65, -82,  66, -82,  67, -82
                                        ,  68, -82,  69, -82,  70, -82, 322, -82, 323, 603};
static const TableType act0362[] = {  15,   4, -83,  16, -83,  60, -83,  61, -83,  62, -83
                                        ,  63, -83,  64, -83,  65, -83,  66, -83,  67, -83
                                        ,  68, -83,  69, -83,  70, -83, 322, -83, 323, 604};
static const TableType act0561[] = {   6,   4,-377,  19,-377,  33,-377, 321,-377, 322,-377
                                        , 323, 608};
static const TableType act0586[] = {   4,   4, 347,  19,-367,  33,-367, 322,-367};
static const TableType act0587[] = {   5,   1,-413,   2,-413,   3,-413,   4, 609, 322,-413};
static const TableType act0596[] = {   2,  46, 295, 322,-447};
static const TableType act0597[] = {   2,  47, 599, 322,-448};
static const TableType act0600[] = {   7,   7, 616,   8, 617,   9, 618,  10, 619,  11, 620
                                        ,  12, 621, 322, 613};
static const TableType act0601[] = {  14,   4, 338,  16, -61,  60, -61,  61, -61,  62, -61
                                        ,  63, -61,  64, -61,  65, -61,  66, -61,  67, -61
                                        ,  68, -61,  69, -61,  70, -61, 322, -61};
static const TableType act0602[] = {  14,   4, 338,  16, -65,  60, -65,  61, -65,  62, -65
                                        ,  63, -65,  64, -65,  65, -65,  66, -65,  67, -65
                                        ,  68, -65,  69, -65,  70, -65, 322, -65};
static const TableType act0603[] = { 195,  71, 153,  72, 154,  73, 155,  74, 156,  75, 157
                                        ,  76, 158,  77, 159,  78, 160,  79, 161,  80, 162
                                        ,  81, 163,  82, 164,  83, 165,  84, 166,  85, 167
                                        ,  86, 168,  87, 169,  88, 170,  89, 171,  90, 172
                                        , 110, 378, 111, 379, 112, 380, 113, 381, 114, 382
                                        , 115, 383, 116, 384, 117, 385, 118, 386, 119, 387
                                        , 120, 388, 121, 389, 122, 390, 123, 391, 124, 392
                                        , 125, 393, 126, 394, 127, 395, 128, 396, 129, 397
                                        , 130, 398, 131, 399, 132, 400, 133, 401, 134, 402
                                        , 135, 403, 136, 404, 137, 405, 138, 406, 139, 407
                                        , 140, 408, 141, 409, 142, 410, 143, 411, 144, 412
                                        , 145, 413, 146, 414, 147, 415, 148, 416, 149, 417
                                        , 150, 418, 151, 419, 152, 420, 153, 421, 154, 450
                                        , 155, 451, 156, 452, 157, 453, 158, 454, 159, 455
                                        , 160, 456, 161, 457, 162, 458, 163, 459, 164, 460
                                        , 165, 461, 166, 462, 167, 463, 168, 464, 169, 465
                                        , 170, 466, 171, 467, 172, 468, 173, 469, 174, 470
                                        , 175, 471, 176, 472, 177, 473, 178, 474, 179, 475
                                        , 180, 476, 181, 477, 182, 478, 183, 479, 184, 480
                                        , 185, 481, 186, 482, 187, 483, 188, 484, 189, 485
                                        , 190, 422, 191, 423, 192, 424, 193, 425, 194, 426
                                        , 195, 427, 196, 428, 197, 429, 198, 430, 199, 431
                                        , 200, 432, 201, 433, 202, 434, 203, 435, 204, 436
                                        , 205, 437, 206, 438, 207, 439, 208, 440, 209, 441
                                        , 210, 442, 211, 443, 212, 444, 213, 445, 214, 446
                                        , 215, 447, 216, 448, 217, 449, 218, 486, 219, 487
                                        , 220, 488, 221, 489, 222, 490, 223, 491, 224, 492
                                        , 225, 493, 226, 494, 227, 495, 228, 496, 229, 497
                                        , 230, 498, 231, 499, 232, 500, 233, 501, 234, 502
                                        , 235, 503, 236, 504, 237, 505, 238, 506, 239, 507
                                        , 240, 508, 241, 509, 242, 510, 243, 511, 244, 512
                                        , 245, 513, 246, 514, 247, 515, 248, 516, 249, 517
                                        , 250, 518, 251, 519, 252, 520, 253, 521, 254, 522
                                        , 255, 523, 256, 524, 257, 525, 258, 526, 259, 527
                                        , 260, 528, 261, 529, 262, 530, 263, 531, 264, 532
                                        , 265, 533, 266, 534, 267, 535, 268, 536, 269, 537
                                        , 270, 538, 271, 539, 272, 540, 273, 541, 274, 542
                                        , 275, 543, 276, 544, 277, 545, 278, 546, 279, 547
                                        , 280, 548, 281, 549, 282, 550, 283, 551, 324, 152};
static const TableType act0605[] = {  14,   4, 338,  16, -72,  60, -72,  61, -72,  62, -72
                                        ,  63, -72,  64, -72,  65, -72,  66, -72,  67, -72
                                        ,  68, -72,  69, -72,  70, -72, 322, -72};
static const TableType act0608[] = {  23, 298, 563, 299, 564, 300, 565, 301, 566, 302, 567
                                        , 303, 568, 304, 569, 305, 570, 306, 571, 307, 572
                                        , 308, 573, 309, 574, 310, 575, 311, 576, 312, 577
                                        , 313, 578, 314, 579, 315, 580, 316, 581, 317, 582
                                        , 318, 583, 319, 584, 320, 585};
static const TableType act0612[] = {   6,   1,  26,   2,  27,   3,  51,   4, 100,  47,-451
                                        , 322,-451};
static const TableType act0629[] = {  14,   4, 338,  16, -74,  60, -74,  61, -74,  62, -74
                                        ,  63, -74,  64, -74,  65, -74,  66, -74,  67, -74
                                        ,  68, -74,  69, -74,  70, -74, 322, -74};

// Total size of uncompressed actNNNN tables:4568 bytes.

#define act0053 act0052 /* Saved  32 bytes */
#define act0054 act0052 /* Saved  32 bytes */
#define act0058 act0055 /* Saved  32 bytes */
#define act0079 act0025 /* Saved  16 bytes */
#define act0080 act0025 /* Saved  16 bytes */
#define act0100 act0025 /* Saved  16 bytes */
#define act0101 act0025 /* Saved  16 bytes */
#define act0106 act0025 /* Saved  16 bytes */
#define act0107 act0025 /* Saved  16 bytes */
#define act0108 act0025 /* Saved  16 bytes */
#define act0109 act0025 /* Saved  16 bytes */
#define act0110 act0025 /* Saved  16 bytes */
#define act0111 act0025 /* Saved  16 bytes */
#define act0112 act0025 /* Saved  16 bytes */
#define act0115 act0046 /* Saved  12 bytes */
#define act0127 act0087 /* Saved 144 bytes */
#define act0238 act0025 /* Saved  16 bytes */
#define act0240 act0025 /* Saved  16 bytes */
#define act0241 act0131 /* Saved  56 bytes */
#define act0270 act0046 /* Saved  12 bytes */
#define act0273 act0087 /* Saved 144 bytes */
#define act0275 act0088 /* Saved  80 bytes */
#define act0599 act0060 /* Saved  20 bytes */
#define act0604 act0088 /* Saved  80 bytes */
#define act0609 act0352 /* Saved  28 bytes */

static const void *action[633] = {
   act0000,act0001,act0002,act0003,act0004,act0005,act0006,act0007,act0008,act0009
  ,act0010,act0011,act0012,act0013,act0014,act0015,act0016,act0017,act0018,act0019
  ,act0020,act0021,act0022,act0023,act0024,act0025,act0026,act0027,act0028,act0029
  ,act0030,act0031,act0032,act0033,act0034,act0035,act0036,act0037,act0038,act0039
  ,act0040,act0041,act0042,act0043,act0044,act0045,act0046,act0047,act0048,act0049
  ,act0050,act0051,act0052,act0053,act0054,act0055,act0056,act0057,act0058,act0059
  ,act0060,act0061,act0062,act0063,act0064,act0065,act0066,act0067,act0068,act0069
  ,act0070,act0071,act0072,act0073,act0074,act0075,act0076,act0077,act0078,act0079
  ,act0080,act0081,act0082,act0083,act0084,act0085,act0086,act0087,act0088,act0089
  ,act0090,act0091,act0092,act0093,act0094,act0095,act0096,act0097,act0098,act0099
  ,act0100,act0101,act0102,act0103,act0104,act0105,act0106,act0107,act0108,act0109
  ,act0110,act0111,act0112,act0113,act0114,act0115,act0116,act0117,act0118,act0119
  ,act0120,act0121,act0122,act0123,act0124,act0125,act0126,act0127,act0128,act0129
  ,act0130,act0131,act0132,act0133,act0134,act0135,act0136,act0137,act0138,act0139
  ,act0140,act0141,act0142,act0143,act0144,act0145,act0146,act0147,act0148,act0149
  ,act0150,act0151,act0152,act0153,act0154,act0155,act0156,act0157,act0158,act0159
  ,act0160,act0161,act0162,act0163,act0164,act0165,act0166,act0167,act0168,act0169
  ,act0170,act0171,act0172,act0173,act0174,act0175,act0176,act0177,act0178,act0179
  ,act0180,act0181,act0182,act0183,act0184,act0185,act0186,act0187,act0188,act0189
  ,act0190,act0191,act0192,act0193,act0194,act0195,act0196,act0197,act0198,act0199
  ,act0200,act0201,act0202,act0203,act0204,act0205,act0206,act0207,act0208,act0209
  ,act0210,act0211,act0212,act0213,act0214,act0215,act0216,act0217,act0218,act0219
  ,act0220,act0221,act0222,act0223,act0224,act0225,act0226,act0227,act0228,act0229
  ,act0230,act0231,act0232,act0233,act0234,act0235,act0236,act0237,act0238,act0239
  ,act0240,act0241,act0242,act0243,act0244,act0245,act0246,act0247,act0248,act0249
  ,act0250,act0251,act0252,act0253,act0254,act0255,act0256,act0257,act0258,act0259
  ,act0260,act0261,act0262,act0263,act0264,act0265,act0266,act0267,act0268,act0269
  ,act0270,act0271,act0272,act0273,act0274,act0275,act0276,act0277,act0278,act0279
  ,act0280,act0281,act0282,act0283,act0284,act0285,act0286,act0287,act0288,act0289
  ,act0290,act0291,act0292,act0293,act0294,act0295,act0296,act0297,act0298,act0299
  ,act0300,act0301,act0302,act0303,act0304,act0305,act0306,act0307,act0308,act0309
  ,act0310,act0311,act0312,act0313,act0314,act0315,act0316,act0317,act0318,act0319
  ,act0320,act0321,act0322,act0323,act0324,act0325,act0326,act0327,act0328,act0329
  ,act0330,act0331,act0332,act0333,act0334,act0335,act0336,act0337,act0338,act0339
  ,act0340,act0341,act0342,act0343,act0344,act0345,act0346,act0347,act0348,act0349
  ,act0350,act0351,act0352,act0353,act0354,act0355,act0356,act0357,act0358,act0359
  ,act0360,act0361,act0362,act0363,act0364,act0365,act0366,act0367,act0368,act0369
  ,act0370,act0371,act0372,act0373,act0374,act0375,act0376,act0377,act0378,act0379
  ,act0380,act0381,act0382,act0383,act0384,act0385,act0386,act0387,act0388,act0389
  ,act0390,act0391,act0392,act0393,act0394,act0395,act0396,act0397,act0398,act0399
  ,act0400,act0401,act0402,act0403,act0404,act0405,act0406,act0407,act0408,act0409
  ,act0410,act0411,act0412,act0413,act0414,act0415,act0416,act0417,act0418,act0419
  ,act0420,act0421,act0422,act0423,act0424,act0425,act0426,act0427,act0428,act0429
  ,act0430,act0431,act0432,act0433,act0434,act0435,act0436,act0437,act0438,act0439
  ,act0440,act0441,act0442,act0443,act0444,act0445,act0446,act0447,act0448,act0449
  ,act0450,act0451,act0452,act0453,act0454,act0455,act0456,act0457,act0458,act0459
  ,act0460,act0461,act0462,act0463,act0464,act0465,act0466,act0467,act0468,act0469
  ,act0470,act0471,act0472,act0473,act0474,act0475,act0476,act0477,act0478,act0479
  ,act0480,act0481,act0482,act0483,act0484,act0485,act0486,act0487,act0488,act0489
  ,act0490,act0491,act0492,act0493,act0494,act0495,act0496,act0497,act0498,act0499
  ,act0500,act0501,act0502,act0503,act0504,act0505,act0506,act0507,act0508,act0509
  ,act0510,act0511,act0512,act0513,act0514,act0515,act0516,act0517,act0518,act0519
  ,act0520,act0521,act0522,act0523,act0524,act0525,act0526,act0527,act0528,act0529
  ,act0530,act0531,act0532,act0533,act0534,act0535,act0536,act0537,act0538,act0539
  ,act0540,act0541,act0542,act0543,act0544,act0545,act0546,act0547,act0548,act0549
  ,act0550,act0551,act0552,act0553,act0554,act0555,act0556,act0557,act0558,act0559
  ,act0560,act0561,act0562,act0563,act0564,act0565,act0566,act0567,act0568,act0569
  ,act0570,act0571,act0572,act0573,act0574,act0575,act0576,act0577,act0578,act0579
  ,act0580,act0581,act0582,act0583,act0584,act0585,act0586,act0587,act0588,act0589
  ,act0590,act0591,act0592,act0593,act0594,act0595,act0596,act0597,act0598,act0599
  ,act0600,act0601,act0602,act0603,act0604,act0605,act0606,act0607,act0608,act0609
  ,act0610,act0611,act0612,act0613,act0614,act0615,act0616,act0617,act0618,act0619
  ,act0620,act0621,act0622,act0623,act0624,act0625,act0626,act0627,act0628,act0629
  ,act0630,act0631,act0632
}; // Size of table:5064 bytes. 

/****************************************************************************\
* The successor matrix is used when the parser has reduced by prod A -> alfa *
* Used by LRParser to find newstate = successor(state,A).                    *
*                                                                            *
*                  succ0007[] = { 3, 5,3 , 6,2, 8,5 };                       *
*   Current state-------+         |  | |                                     *
*   Number of pairs in list ------+  | |                                     *
*   NonTerminal A--------------------+ |                                     *
*   Go to this state-------------------+                                     *
\****************************************************************************/
static const TableType succ0000[] = { 22, 329,   1, 330,   2, 331,   3, 332,   4, 333,   5
                                        , 334,   6, 335,   7, 336,   8, 337,   9, 338,  10
                                        , 339,  11, 340,  12, 341,  13, 342,  14, 343,  15
                                        , 344,  16, 345,  17, 346,  18, 347,  19, 348,  20
                                        , 349,  21, 364,  24};
static const TableType succ0002[] = { 20, 331,  28, 332,   4, 333,   5, 334,   6, 335,   7
                                        , 336,   8, 337,   9, 338,  10, 339,  11, 340,  12
                                        , 341,  13, 342,  14, 343,  15, 344,  16, 345,  17
                                        , 346,  18, 347,  19, 348,  20, 349,  21, 364,  24};
static const TableType succ0021[] = {  2, 349,  31, 410,  35};
static const TableType succ0023[] = {  1, 350,  44};
static const TableType succ0025[] = {  4, 349,  49, 351,  50, 364,  48, 423,  47};
static const TableType succ0029[] = {  1, 350,  52};
static const TableType succ0030[] = {  1, 350,  53};
static const TableType succ0031[] = {  1, 350,  54};
static const TableType succ0032[] = {  1, 350,  55};
static const TableType succ0033[] = {  2, 352,  56, 364,  57};
static const TableType succ0034[] = {  1, 350,  58};
static const TableType succ0035[] = {  1, 350,  59};
static const TableType succ0037[] = {  1, 350,  61};
static const TableType succ0038[] = {  1, 350,  62};
static const TableType succ0039[] = {  1, 350,  63};
static const TableType succ0043[] = {  1, 350,  65};
static const TableType succ0044[] = {  1, 400,  66};
static const TableType succ0045[] = {  1, 350,  74};
static const TableType succ0046[] = {  4, 349,  78, 351,  76, 442,  75, 444,  77};
static const TableType succ0052[] = {  2, 351,  81, 400,  66};
static const TableType succ0053[] = {  2, 351,  82, 400,  66};
static const TableType succ0054[] = {  2, 351,  83, 400,  66};
static const TableType succ0055[] = {  3, 352,  84, 364,  57, 400,  66};
static const TableType succ0056[] = {  2, 355,  85, 359,  86};
static const TableType succ0058[] = {  3, 364,  94, 400,  66, 407,  93};
static const TableType succ0059[] = {  2, 400,  66, 411,  95};
static const TableType succ0060[] = {  6, 349,  49, 351,  50, 364,  48, 421,  97, 422,  98
                                        , 423,  99};
static const TableType succ0062[] = {  2, 351, 103, 400,  66};
static const TableType succ0063[] = {  3, 400,  66, 433, 104, 435, 105};
static const TableType succ0064[] = {  2, 364, 114, 443, 113};
static const TableType succ0067[] = {  3, 349, 118, 430, 116, 431, 117};
static const TableType succ0079[] = {  4, 349,  49, 351,  50, 364,  48, 423, 121};
static const TableType succ0080[] = {  6, 349,  49, 351,  50, 364,  48, 423, 124, 436, 122
                                        , 437, 123};
static const TableType succ0084[] = {  2, 353, 125, 356, 126};
static const TableType succ0085[] = {  1, 359, 132};
static const TableType succ0087[] = {  5, 357, 133, 365, 134, 366, 135, 367, 136, 401, 151};
static const TableType succ0088[] = {  3, 360, 173, 362, 174, 363, 175};
static const TableType succ0089[] = {  1, 351, 195};
static const TableType succ0090[] = {  1, 349, 196};
static const TableType succ0091[] = {  3, 358, 199, 361, 197, 364, 198};
static const TableType succ0092[] = {  1, 364, 200};
static const TableType succ0096[] = {  4, 412, 203, 413, 204, 414, 205, 415, 206};
static const TableType succ0097[] = {  5, 349,  49, 351,  50, 364,  48, 422, 210, 423,  99};
static const TableType succ0100[] = {  4, 349,  49, 351,  50, 364,  48, 423, 211};
static const TableType succ0101[] = {  6, 349,  49, 351,  50, 364,  48, 423, 214, 424, 212
                                        , 425, 213};
static const TableType succ0102[] = {  2, 364, 216, 429, 215};
static const TableType succ0104[] = {  1, 435, 218};
static const TableType succ0106[] = {  6, 349,  49, 351,  50, 364,  48, 423, 124, 436, 219
                                        , 437, 123};
static const TableType succ0107[] = {  6, 349,  49, 351,  50, 364,  48, 423, 124, 436, 220
                                        , 437, 123};
static const TableType succ0108[] = {  5, 349,  49, 351,  50, 364,  48, 423, 124, 437, 221};
static const TableType succ0109[] = {  5, 349,  49, 351,  50, 364,  48, 423, 124, 437, 222};
static const TableType succ0110[] = {  5, 349,  49, 351,  50, 364,  48, 423, 124, 437, 223};
static const TableType succ0111[] = {  5, 349,  49, 351,  50, 364,  48, 423, 124, 437, 224};
static const TableType succ0112[] = {  5, 349,  49, 351,  50, 364,  48, 423, 124, 437, 225};
static const TableType succ0115[] = {  5, 349, 230, 351, 231, 381, 229, 402, 227, 403, 228};
static const TableType succ0116[] = {  2, 349, 118, 431, 233};
static const TableType succ0118[] = {  1, 351, 234};
static const TableType succ0119[] = {  2, 351, 236, 432, 235};
static const TableType succ0120[] = {  1, 349, 237};
static const TableType succ0125[] = {  1, 356, 242};
static const TableType succ0127[] = {  5, 357, 243, 365, 134, 366, 135, 367, 136, 401, 151};
static const TableType succ0128[] = {  1, 351, 244};
static const TableType succ0129[] = {  1, 349, 245};
static const TableType succ0130[] = {  2, 358, 246, 364, 247};
static const TableType succ0131[] = { 13, 354, 248, 368, 249, 369, 250, 370, 251, 371, 252
                                        , 372, 253, 373, 254, 374, 255, 375, 256, 376, 257
                                        , 377, 258, 378, 259, 380, 263};
static const TableType succ0152[] = {  1, 401, 274};
static const TableType succ0201[] = {  2, 408, 278, 409, 279};
static const TableType succ0202[] = {  1, 364, 282};
static const TableType succ0203[] = {  3, 413, 284, 414, 205, 415, 206};
static const TableType succ0207[] = {  1, 351, 285};
static const TableType succ0208[] = {  1, 351, 286};
static const TableType succ0212[] = {  5, 349,  49, 351,  50, 364,  48, 423, 214, 425, 289};
static const TableType succ0217[] = {  2, 434, 293, 438, 294};
static const TableType succ0227[] = {  4, 349, 230, 351, 231, 381, 229, 403, 297};
static const TableType succ0235[] = {  1, 351, 300};
static const TableType succ0238[] = {  5, 349,  49, 351,  50, 364,  48, 423, 124, 437, 301};
static const TableType succ0240[] = {  4, 349,  49, 351,  50, 364,  48, 423, 302};
static const TableType succ0241[] = { 13, 354, 303, 368, 249, 369, 250, 370, 251, 371, 252
                                        , 372, 253, 373, 254, 374, 255, 375, 256, 376, 257
                                        , 377, 258, 378, 259, 380, 263};
static const TableType succ0249[] = { 11, 369, 306, 370, 251, 371, 252, 372, 253, 373, 254
                                        , 374, 255, 375, 256, 376, 257, 377, 258, 378, 259
                                        , 380, 263};
static const TableType succ0259[] = {  1, 351, 307};
static const TableType succ0263[] = {  1, 351, 308};
static const TableType succ0267[] = {  1, 349, 309};
static const TableType succ0268[] = {  1, 349, 310};
static const TableType succ0269[] = {  1, 349, 311};
static const TableType succ0270[] = {  3, 349, 230, 351, 231, 381, 312};
static const TableType succ0271[] = {  1, 349, 313};
static const TableType succ0272[] = {  3, 351, 315, 364, 316, 382, 314};
static const TableType succ0273[] = {  4, 365, 317, 366, 135, 367, 136, 401, 151};
static const TableType succ0275[] = {  2, 362, 318, 363, 175};
static const TableType succ0276[] = {  1, 351, 319};
static const TableType succ0277[] = {  1, 364, 320};
static const TableType succ0278[] = {  1, 409, 322};
static const TableType succ0280[] = {  1, 349, 323};
static const TableType succ0285[] = {  1, 416, 324};
static const TableType succ0290[] = {  1, 349, 326};
static const TableType succ0292[] = {  1, 364, 327};
static const TableType succ0293[] = {  1, 438, 329};
static const TableType succ0295[] = {  1, 351, 330};
static const TableType succ0304[] = {  1, 351, 333};
static const TableType succ0309[] = {  2, 379, 336, 383, 337};
static const TableType succ0310[] = {  2, 379, 339, 383, 337};
static const TableType succ0311[] = {  2, 379, 340, 383, 337};
static const TableType succ0313[] = {  2, 379, 342, 383, 337};
static const TableType succ0324[] = {  1, 411, 346};
static const TableType succ0325[] = {  3, 349, 349, 364, 350, 417, 348};
static const TableType succ0326[] = {  1, 426, 351};
static const TableType succ0334[] = {  1, 349, 355};
static const TableType succ0335[] = {  1, 349, 356};
static const TableType succ0336[] = {  1, 383, 357};
static const TableType succ0338[] = { 21, 349, 360, 363, 364, 364, 359, 367, 365, 384, 358
                                        , 385, 361, 386, 362, 387, 363, 388, 366, 389, 367
                                        , 390, 368, 391, 369, 392, 370, 393, 371, 394, 372
                                        , 395, 373, 396, 374, 397, 375, 398, 376, 399, 377
                                        , 401, 151};
static const TableType succ0341[] = {  1, 349, 552};
static const TableType succ0343[] = {  1, 349, 553};
static const TableType succ0344[] = {  1, 364, 554};
static const TableType succ0345[] = {  1, 364, 555};
static const TableType succ0347[] = {  4, 364, 557, 418, 556, 419, 561, 420, 562};
static const TableType succ0348[] = {  1, 416, 586};
static const TableType succ0352[] = {  2, 427, 587, 428, 588};
static const TableType succ0353[] = {  5, 434, 596, 438, 294, 439, 595, 440, 597, 441, 598};
static const TableType succ0354[] = {  1, 404, 600};
static const TableType succ0355[] = {  2, 379, 601, 383, 337};
static const TableType succ0356[] = {  2, 379, 602, 383, 337};
static const TableType succ0552[] = {  2, 379, 605, 383, 337};
static const TableType succ0597[] = {  1, 441, 611};
static const TableType succ0599[] = {  6, 349,  49, 351,  50, 364,  48, 421, 612, 422,  98
                                        , 423,  99};
static const TableType succ0600[] = {  2, 405, 614, 406, 615};
static const TableType succ0603[] = { 15, 367, 365, 387, 622, 388, 366, 389, 367, 390, 368
                                        , 391, 369, 392, 370, 393, 371, 394, 372, 395, 373
                                        , 396, 374, 397, 375, 398, 376, 399, 377, 401, 151};
static const TableType succ0604[] = {  1, 363, 623};
static const TableType succ0606[] = {  1, 351, 624};
static const TableType succ0607[] = {  1, 364, 625};
static const TableType succ0608[] = {  1, 420, 626};
static const TableType succ0609[] = {  1, 428, 627};
static const TableType succ0624[] = {  2, 379, 629, 383, 337};
static const TableType succ0628[] = {  1, 364, 631};
static const TableType succ0630[] = {  1, 364, 632};

// Total size of all succNNNN tables:2112 bytes.

#define succ0061 succ0044  /* Saved   8 bytes */
#define succ0065 succ0044  /* Saved   8 bytes */
#define succ0074 succ0044  /* Saved   8 bytes */
#define succ0339 succ0336  /* Saved   8 bytes */
#define succ0340 succ0336  /* Saved   8 bytes */
#define succ0342 succ0336  /* Saved   8 bytes */
#define succ0596 succ0293  /* Saved   8 bytes */
#define succ0601 succ0336  /* Saved   8 bytes */
#define succ0602 succ0336  /* Saved   8 bytes */
#define succ0605 succ0336  /* Saved   8 bytes */
#define succ0612 succ0097  /* Saved  24 bytes */
#define succ0629 succ0336  /* Saved   8 bytes */

static const TableType *successor[633] = {
   succ0000,NULL    ,succ0002,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,succ0021,NULL    ,succ0023,NULL    ,succ0025,NULL    ,NULL    ,NULL    ,succ0029
  ,succ0030,succ0031,succ0032,succ0033,succ0034,succ0035,NULL    ,succ0037,succ0038,succ0039
  ,NULL    ,NULL    ,NULL    ,succ0043,succ0044,succ0045,succ0046,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0052,succ0053,succ0054,succ0055,succ0056,NULL    ,succ0058,succ0059
  ,succ0060,succ0061,succ0062,succ0063,succ0064,succ0065,NULL    ,succ0067,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0074,NULL    ,NULL    ,NULL    ,NULL    ,succ0079
  ,succ0080,NULL    ,NULL    ,NULL    ,succ0084,succ0085,NULL    ,succ0087,succ0088,succ0089
  ,succ0090,succ0091,succ0092,NULL    ,NULL    ,NULL    ,succ0096,succ0097,NULL    ,NULL    
  ,succ0100,succ0101,succ0102,NULL    ,succ0104,NULL    ,succ0106,succ0107,succ0108,succ0109
  ,succ0110,succ0111,succ0112,NULL    ,NULL    ,succ0115,succ0116,NULL    ,succ0118,succ0119
  ,succ0120,NULL    ,NULL    ,NULL    ,NULL    ,succ0125,NULL    ,succ0127,succ0128,succ0129
  ,succ0130,succ0131,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0152,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,succ0201,succ0202,succ0203,NULL    ,NULL    ,NULL    ,succ0207,succ0208,NULL    
  ,NULL    ,NULL    ,succ0212,NULL    ,NULL    ,NULL    ,NULL    ,succ0217,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0227,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0235,NULL    ,NULL    ,succ0238,NULL    
  ,succ0240,succ0241,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0249
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0259
  ,NULL    ,NULL    ,NULL    ,succ0263,NULL    ,NULL    ,NULL    ,succ0267,succ0268,succ0269
  ,succ0270,succ0271,succ0272,succ0273,NULL    ,succ0275,succ0276,succ0277,succ0278,NULL    
  ,succ0280,NULL    ,NULL    ,NULL    ,NULL    ,succ0285,NULL    ,NULL    ,NULL    ,NULL    
  ,succ0290,NULL    ,succ0292,succ0293,NULL    ,succ0295,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0304,NULL    ,NULL    ,NULL    ,NULL    ,succ0309
  ,succ0310,succ0311,NULL    ,succ0313,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0324,succ0325,succ0326,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0334,succ0335,succ0336,NULL    ,succ0338,succ0339
  ,succ0340,succ0341,succ0342,succ0343,succ0344,succ0345,NULL    ,succ0347,succ0348,NULL    
  ,NULL    ,NULL    ,succ0352,succ0353,succ0354,succ0355,succ0356,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0552,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0596,succ0597,NULL    ,succ0599
  ,succ0600,succ0601,succ0602,succ0603,succ0604,succ0605,succ0606,succ0607,succ0608,succ0609
  ,NULL    ,NULL    ,succ0612,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0624,NULL    ,NULL    ,NULL    ,succ0628,succ0629
  ,succ0630,NULL    ,NULL    
}; // Size of pointertable:5064 bytes.

/****************************************************************************\
* The productionLength[] array is indexed by production number and holds     *
* the number of symbols on the right side of each production.                *
\****************************************************************************/
static const unsigned char productionLength[472] = {
  /*   0 */    1,   1,   2,   1,   1,   1,   1,   1,   1,   1,
  /*  10 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /*  20 */    1,   4,   4,   4,   8,   7,   2,   1,   2,   2,
  /*  30 */    2,   2,   2,   1,   2,   2,   2,   2,   2,   3,
  /*  40 */    1,   1,   3,   9,   1,   3,   1,   1,   1,   0,
  /*  50 */    1,   1,   2,   1,   1,   1,   1,   1,   1,   1,
  /*  60 */    1,   5,   1,   1,   1,   5,   1,   1,   1,   3,
  /*  70 */    3,   3,   5,   3,   7,   1,   1,   2,   1,   2,
  /*  80 */    1,   1,   1,   1,   3,   1,   3,   1,   1,   1,
  /*  90 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 100 */    1,   0,   2,   1,   1,   1,   1,   1,   1,   1,
  /* 110 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 120 */    1,   1,   1,   1,   2,   1,   1,   1,   1,   1,
  /* 130 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 140 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 150 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 160 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 170 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 180 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 190 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 200 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 210 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 220 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 230 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 240 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 250 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 260 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 270 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 280 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 290 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 300 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 310 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 320 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 330 */    1,   1,   1,   1,   1,   1,   1,   1,   6,   2,
  /* 340 */    1,   6,   1,   1,   2,   0,   3,   1,   1,   1,
  /* 350 */    1,   1,   1,   7,   2,   1,   2,   1,   4,   1,
  /* 360 */    1,   3,   2,   1,   1,   1,   4,   5,   2,   1,
  /* 370 */    1,   0,   3,   1,   1,   1,   1,   1,   3,   1,
  /* 380 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 390 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 400 */    1,   1,   1,   5,   2,   1,   1,   2,   6,   2,
  /* 410 */    1,   4,   0,   2,   1,   3,   1,   1,   1,   1,
  /* 420 */    1,   1,   6,   4,   3,   1,   5,   2,   1,   2,
  /* 430 */    6,   2,   1,   4,   7,   2,   1,   2,   2,   2,
  /* 440 */    2,   2,   2,   2,   2,   1,   5,   1,   1,   2,
  /* 450 */    1,   2,   3,   5,   1,   1,   1,   1,   3,   3,
  /* 460 */    1,   3,   1,   1,   1,   1,   4,   7,   3,   1,
  /* 470 */    1,   1
}; // Size of table:472 bytes.

/****************************************************************************\
* The leftSide[] array is indexed by production number, and holds the        *
* nonTerminal symbol on the left side of each production.                    *
\****************************************************************************/
static const TableType leftSide[472] = {
  /*   0 */  328, 329, 330, 330, 331, 331, 331, 331, 331, 331,
  /*  10 */  331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
  /*  20 */  331, 332, 333, 334, 335, 336, 353, 353, 356, 356,
  /*  30 */  356, 356, 355, 355, 359, 359, 359, 359, 359, 360,
  /*  40 */  360, 362, 358, 361, 361, 357, 357, 365, 365, 354,
  /*  50 */  354, 368, 368, 369, 369, 369, 369, 369, 369, 369,
  /*  60 */  369, 370, 378, 378, 378, 371, 380, 380, 380, 372,
  /*  70 */  373, 374, 375, 376, 377, 382, 382, 379, 379, 383,
  /*  80 */  384, 384, 384, 384, 385, 385, 386, 386, 387, 387,
  /*  90 */  387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
  /* 100 */  387, 350, 350, 400, 400, 400, 400, 400, 400, 366,
  /* 110 */  366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
  /* 120 */  366, 366, 366, 367, 367, 401, 401, 401, 401, 401,
  /* 130 */  401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
  /* 140 */  401, 401, 401, 401, 401, 363, 363, 363, 363, 363,
  /* 150 */  363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
  /* 160 */  363, 363, 363, 363, 388, 388, 388, 388, 388, 388,
  /* 170 */  388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
  /* 180 */  388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
  /* 190 */  388, 388, 388, 388, 389, 389, 389, 389, 389, 389,
  /* 200 */  389, 389, 389, 389, 389, 389, 389, 389, 391, 391,
  /* 210 */  391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
  /* 220 */  391, 393, 393, 393, 393, 393, 393, 393, 393, 393,
  /* 230 */  393, 393, 393, 393, 393, 393, 390, 390, 390, 390,
  /* 240 */  390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
  /* 250 */  390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
  /* 260 */  390, 390, 392, 392, 392, 392, 392, 392, 392, 392,
  /* 270 */  392, 392, 394, 394, 394, 394, 394, 394, 394, 394,
  /* 280 */  394, 394, 394, 394, 394, 395, 395, 395, 395, 395,
  /* 290 */  395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
  /* 300 */  396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
  /* 310 */  396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
  /* 320 */  396, 396, 397, 397, 397, 397, 397, 397, 397, 397,
  /* 330 */  397, 398, 398, 399, 399, 399, 399, 399, 337, 402,
  /* 340 */  402, 403, 381, 381, 404, 404, 405, 406, 406, 406,
  /* 350 */  406, 406, 406, 338, 408, 408, 409, 409, 339, 410,
  /* 360 */  410, 411, 412, 412, 413, 413, 414, 415, 415, 417,
  /* 370 */  417, 416, 416, 418, 418, 418, 418, 418, 419, 419,
  /* 380 */  420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
  /* 390 */  420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
  /* 400 */  420, 420, 420, 340, 421, 421, 422, 422, 341, 424,
  /* 410 */  424, 425, 426, 426, 427, 427, 428, 428, 428, 428,
  /* 420 */  428, 428, 342, 342, 429, 429, 343, 430, 430, 431,
  /* 430 */  344, 432, 432, 345, 346, 433, 433, 435, 435, 435,
  /* 440 */  435, 435, 435, 435, 434, 434, 438, 439, 439, 440,
  /* 450 */  440, 441, 347, 348, 443, 442, 442, 444, 444, 436,
  /* 460 */  436, 437, 437, 423, 423, 423, 423, 352, 407, 364,
  /* 470 */  349, 351
}; // Size of table:944 bytes.

/****************************************************************************\
* The rightSide[] matrix is indexed by production number and holds           *
* the right side symbols of each production.                                 *
* Compressed and only used for debugging.                                    *
\****************************************************************************/
static const TableType rightSideTable[677] = {
  /*   0 */  329
  /*   1 */ ,330
  /*   2 */ ,330,331
  /*   3 */ ,331
  /*   4 */ ,332
  /*   5 */ ,333
  /*   6 */ ,334
  /*   7 */ ,335
  /*   8 */ ,336
  /*   9 */ ,337
  /*  10 */ ,338
  /*  11 */ ,339
  /*  12 */ ,340
  /*  13 */ ,341
  /*  14 */ ,342
  /*  15 */ ,343
  /*  16 */ ,344
  /*  17 */ ,345
  /*  18 */ ,346
  /*  19 */ ,347
  /*  20 */ ,348
  /*  21 */ ,349, 15,350,351
  /*  22 */ ,349, 16,350,351
  /*  23 */ ,349,349,350,351
  /*  24 */ ,349, 48,350,352,353,321,354,322
  /*  25 */ ,349, 49,352,355,321,354,322
  /*  26 */ ,353,356
  /*  27 */ ,356
  /*  28 */ , 51,357
  /*  29 */ , 53,351
  /*  30 */ , 18,349
  /*  31 */ , 17,358
  /*  32 */ ,355,359
  /*  33 */ ,359
  /*  34 */ , 51,357
  /*  35 */ , 52,360
  /*  36 */ , 53,351
  /*  37 */ , 18,349
  /*  38 */ , 17,361
  /*  39 */ ,360,323,362
  /*  40 */ ,362
  /*  41 */ ,363
  /*  42 */ ,364,  4,351
  /*  43 */ ,364,  4,351,  4,364,  4,364,  4,364
  /*  44 */ ,358
  /*  45 */ ,357,323,365
  /*  46 */ ,365
  /*  47 */ ,366
  /*  48 */ ,367
  /*  50 */ ,368
  /*  51 */ ,369
  /*  52 */ ,368,369
  /*  53 */ ,370
  /*  54 */ ,371
  /*  55 */ ,372
  /*  56 */ ,373
  /*  57 */ ,374
  /*  58 */ ,375
  /*  59 */ ,376
  /*  60 */ ,377
  /*  61 */ ,378,351,  4,349,379
  /*  62 */ , 60
  /*  63 */ , 61
  /*  64 */ , 66
  /*  65 */ ,380,351,  4,349,379
  /*  66 */ , 67
  /*  67 */ , 68
  /*  68 */ , 69
  /*  69 */ , 62,349,379
  /*  70 */ , 64,349,379
  /*  71 */ , 65,349,379
  /*  72 */ , 16,381,  4,349,379
  /*  73 */ , 63,349,379
  /*  74 */ , 70,382,  4,349,  4,351,379
  /*  75 */ ,351
  /*  76 */ ,364
  /*  77 */ ,379,383
  /*  78 */ ,383
  /*  79 */ ,  4,384
  /*  80 */ ,364
  /*  81 */ ,349
  /*  82 */ ,385
  /*  83 */ ,386
  /*  84 */ ,385,323,387
  /*  85 */ ,387
  /*  86 */ ,386,323,363
  /*  87 */ ,363
  /*  88 */ ,367
  /*  89 */ ,388
  /*  90 */ ,389
  /*  91 */ ,390
  /*  92 */ ,391
  /*  93 */ ,392
  /*  94 */ ,393
  /*  95 */ ,394
  /*  96 */ ,395
  /*  97 */ ,396
  /*  98 */ ,397
  /*  99 */ ,398
  /* 100 */ ,399
  /* 102 */ ,350,400
  /* 103 */ , 54
  /* 104 */ , 55
  /* 105 */ , 56
  /* 106 */ , 57
  /* 107 */ , 58
  /* 108 */ , 59
  /* 109 */ ,284
  /* 110 */ ,285
  /* 111 */ ,286
  /* 112 */ ,287
  /* 113 */ ,288
  /* 114 */ ,289
  /* 115 */ ,290
  /* 116 */ ,291
  /* 117 */ ,292
  /* 118 */ ,293
  /* 119 */ ,294
  /* 120 */ ,295
  /* 121 */ ,296
  /* 122 */ ,297
  /* 123 */ ,401
  /* 124 */ ,324,401
  /* 125 */ , 71
  /* 126 */ , 72
  /* 127 */ , 73
  /* 128 */ , 74
  /* 129 */ , 75
  /* 130 */ , 76
  /* 131 */ , 77
  /* 132 */ , 78
  /* 133 */ , 79
  /* 134 */ , 80
  /* 135 */ , 81
  /* 136 */ , 82
  /* 137 */ , 83
  /* 138 */ , 84
  /* 139 */ , 85
  /* 140 */ , 86
  /* 141 */ , 87
  /* 142 */ , 88
  /* 143 */ , 89
  /* 144 */ , 90
  /* 145 */ , 91
  /* 146 */ , 92
  /* 147 */ , 93
  /* 148 */ , 94
  /* 149 */ , 95
  /* 150 */ , 96
  /* 151 */ , 97
  /* 152 */ , 98
  /* 153 */ , 99
  /* 154 */ ,100
  /* 155 */ ,101
  /* 156 */ ,102
  /* 157 */ ,103
  /* 158 */ ,104
  /* 159 */ ,105
  /* 160 */ ,106
  /* 161 */ ,107
  /* 162 */ ,108
  /* 163 */ ,109
  /* 164 */ ,110
  /* 165 */ ,111
  /* 166 */ ,112
  /* 167 */ ,113
  /* 168 */ ,114
  /* 169 */ ,115
  /* 170 */ ,116
  /* 171 */ ,117
  /* 172 */ ,118
  /* 173 */ ,119
  /* 174 */ ,120
  /* 175 */ ,121
  /* 176 */ ,122
  /* 177 */ ,123
  /* 178 */ ,124
  /* 179 */ ,125
  /* 180 */ ,126
  /* 181 */ ,127
  /* 182 */ ,128
  /* 183 */ ,129
  /* 184 */ ,130
  /* 185 */ ,131
  /* 186 */ ,132
  /* 187 */ ,133
  /* 188 */ ,134
  /* 189 */ ,135
  /* 190 */ ,136
  /* 191 */ ,137
  /* 192 */ ,138
  /* 193 */ ,139
  /* 194 */ ,140
  /* 195 */ ,141
  /* 196 */ ,142
  /* 197 */ ,143
  /* 198 */ ,144
  /* 199 */ ,145
  /* 200 */ ,146
  /* 201 */ ,147
  /* 202 */ ,148
  /* 203 */ ,149
  /* 204 */ ,150
  /* 205 */ ,151
  /* 206 */ ,152
  /* 207 */ ,153
  /* 208 */ ,190
  /* 209 */ ,191
  /* 210 */ ,192
  /* 211 */ ,193
  /* 212 */ ,194
  /* 213 */ ,195
  /* 214 */ ,196
  /* 215 */ ,197
  /* 216 */ ,198
  /* 217 */ ,199
  /* 218 */ ,200
  /* 219 */ ,201
  /* 220 */ ,202
  /* 221 */ ,203
  /* 222 */ ,204
  /* 223 */ ,205
  /* 224 */ ,206
  /* 225 */ ,207
  /* 226 */ ,208
  /* 227 */ ,209
  /* 228 */ ,210
  /* 229 */ ,211
  /* 230 */ ,212
  /* 231 */ ,213
  /* 232 */ ,214
  /* 233 */ ,215
  /* 234 */ ,216
  /* 235 */ ,217
  /* 236 */ ,154
  /* 237 */ ,155
  /* 238 */ ,156
  /* 239 */ ,157
  /* 240 */ ,158
  /* 241 */ ,159
  /* 242 */ ,160
  /* 243 */ ,161
  /* 244 */ ,162
  /* 245 */ ,163
  /* 246 */ ,164
  /* 247 */ ,165
  /* 248 */ ,166
  /* 249 */ ,167
  /* 250 */ ,168
  /* 251 */ ,169
  /* 252 */ ,170
  /* 253 */ ,171
  /* 254 */ ,172
  /* 255 */ ,173
  /* 256 */ ,174
  /* 257 */ ,175
  /* 258 */ ,176
  /* 259 */ ,177
  /* 260 */ ,178
  /* 261 */ ,179
  /* 262 */ ,180
  /* 263 */ ,181
  /* 264 */ ,182
  /* 265 */ ,183
  /* 266 */ ,184
  /* 267 */ ,185
  /* 268 */ ,186
  /* 269 */ ,187
  /* 270 */ ,188
  /* 271 */ ,189
  /* 272 */ ,218
  /* 273 */ ,219
  /* 274 */ ,220
  /* 275 */ ,221
  /* 276 */ ,222
  /* 277 */ ,223
  /* 278 */ ,224
  /* 279 */ ,225
  /* 280 */ ,226
  /* 281 */ ,227
  /* 282 */ ,228
  /* 283 */ ,229
  /* 284 */ ,230
  /* 285 */ ,231
  /* 286 */ ,232
  /* 287 */ ,233
  /* 288 */ ,234
  /* 289 */ ,235
  /* 290 */ ,236
  /* 291 */ ,237
  /* 292 */ ,238
  /* 293 */ ,239
  /* 294 */ ,240
  /* 295 */ ,241
  /* 296 */ ,242
  /* 297 */ ,243
  /* 298 */ ,244
  /* 299 */ ,245
  /* 300 */ ,246
  /* 301 */ ,247
  /* 302 */ ,248
  /* 303 */ ,249
  /* 304 */ ,250
  /* 305 */ ,251
  /* 306 */ ,252
  /* 307 */ ,253
  /* 308 */ ,254
  /* 309 */ ,255
  /* 310 */ ,256
  /* 311 */ ,257
  /* 312 */ ,258
  /* 313 */ ,259
  /* 314 */ ,260
  /* 315 */ ,261
  /* 316 */ ,262
  /* 317 */ ,263
  /* 318 */ ,264
  /* 319 */ ,265
  /* 320 */ ,266
  /* 321 */ ,267
  /* 322 */ ,268
  /* 323 */ ,269
  /* 324 */ ,270
  /* 325 */ ,271
  /* 326 */ ,272
  /* 327 */ ,273
  /* 328 */ ,274
  /* 329 */ ,275
  /* 330 */ ,276
  /* 331 */ ,277
  /* 332 */ ,278
  /* 333 */ ,279
  /* 334 */ ,280
  /* 335 */ ,281
  /* 336 */ ,282
  /* 337 */ ,283
  /* 338 */ ,  5,  6,350,321,402,322
  /* 339 */ ,402,403
  /* 340 */ ,403
  /* 341 */ ,381,  4, 48,321,404,322
  /* 342 */ ,349
  /* 343 */ ,351
  /* 344 */ ,404,405
  /* 346 */ ,406,  4,364
  /* 347 */ ,  7
  /* 348 */ ,  8
  /* 349 */ ,  9
  /* 350 */ , 10
  /* 351 */ , 11
  /* 352 */ , 12
  /* 353 */ ,349, 13,350,407,321,408,322
  /* 354 */ ,408,409
  /* 355 */ ,409
  /* 356 */ , 14,349
  /* 357 */ , 37
  /* 358 */ ,349,410,350,411
  /* 359 */ , 18
  /* 360 */ , 32
  /* 361 */ ,321,412,322
  /* 362 */ ,412,413
  /* 363 */ ,413
  /* 364 */ ,414
  /* 365 */ ,415
  /* 366 */ , 33,351,416,411
  /* 367 */ , 19,351,  4,417,416
  /* 368 */ , 19, 37
  /* 369 */ ,349
  /* 370 */ ,364
  /* 372 */ ,416,  4,418
  /* 373 */ ,364
  /* 374 */ , 34
  /* 375 */ , 35
  /* 376 */ , 36
  /* 377 */ ,419
  /* 378 */ ,419,323,420
  /* 379 */ ,420
  /* 380 */ ,298
  /* 381 */ ,299
  /* 382 */ ,300
  /* 383 */ ,301
  /* 384 */ ,302
  /* 385 */ ,303
  /* 386 */ ,304
  /* 387 */ ,305
  /* 388 */ ,306
  /* 389 */ ,307
  /* 390 */ ,308
  /* 391 */ ,309
  /* 392 */ ,310
  /* 393 */ ,311
  /* 394 */ ,312
  /* 395 */ ,313
  /* 396 */ ,314
  /* 397 */ ,315
  /* 398 */ ,316
  /* 399 */ ,317
  /* 400 */ ,318
  /* 401 */ ,319
  /* 402 */ ,320
  /* 403 */ ,349, 28,321,421,322
  /* 404 */ ,421,422
  /* 405 */ ,422
  /* 406 */ ,423
  /* 407 */ ,  4,423
  /* 408 */ ,349, 21,350,321,424,322
  /* 409 */ ,424,425
  /* 410 */ ,425
  /* 411 */ ,423,  4,349,426
  /* 413 */ ,  4,427
  /* 414 */ ,428
  /* 415 */ ,427,  4,428
  /* 416 */ , 22
  /* 417 */ , 23
  /* 418 */ , 24
  /* 419 */ , 70
  /* 420 */ , 25
  /* 421 */ , 26
  /* 422 */ ,349, 27,350,321,429,322
  /* 423 */ ,349, 27,350,351
  /* 424 */ ,429,  4,364
  /* 425 */ ,364
  /* 426 */ , 20,350,321,430,322
  /* 427 */ ,430,431
  /* 428 */ ,431
  /* 429 */ ,349,351
  /* 430 */ ,364, 29,350,321,432,322
  /* 431 */ ,432,351
  /* 432 */ ,351
  /* 433 */ , 30,423,  4,423
  /* 434 */ ,349, 38,350,433,321,434,322
  /* 435 */ ,433,435
  /* 436 */ ,435
  /* 437 */ , 39,436
  /* 438 */ , 40,436
  /* 439 */ , 41,437
  /* 440 */ , 42,437
  /* 441 */ , 43,437
  /* 442 */ , 44,437
  /* 443 */ , 45,437
  /* 444 */ ,434,438
  /* 445 */ ,438
  /* 446 */ , 46,351,321,439,322
  /* 447 */ ,434
  /* 448 */ ,440
  /* 449 */ ,440,441
  /* 450 */ ,441
  /* 451 */ , 47,421
  /* 452 */ ,364, 31,442
  /* 453 */ ,349, 50,321,443,322
  /* 454 */ ,364
  /* 455 */ ,351
  /* 456 */ ,444
  /* 457 */ ,349
  /* 458 */ ,444,325,349
  /* 459 */ ,436,  4,437
  /* 460 */ ,437
  /* 461 */ ,437,323,423
  /* 462 */ ,423
  /* 463 */ ,364
  /* 464 */ ,349
  /* 465 */ ,351
  /* 466 */ ,349,326,436,327
  /* 467 */ ,364,  4,364,  4,364,  4,364
  /* 468 */ ,364,  4,364
  /* 469 */ ,  1
  /* 470 */ ,  2
  /* 471 */ ,  3
}; // Size of table:1356 bytes.

/****************************************************************************\
* The symbolName[] array is indexed by symbol and holds                      *
* the name of each symbol (terminal or nonTerminal).                         *
* Used for debugging.                                                        *
\****************************************************************************/
static const TCHAR *symbolName[445] = {
  /*   0 */ _T("EOI"),
  /*   1 */ _T("NUMBER"),
  /*   2 */ _T("IDENTIFIER"),
  /*   3 */ _T("STRING"),
  /*   4 */ _T("COMMA"),
  /*   5 */ _T("GUIDELINES"),
  /*   6 */ _T("DESIGNINFO"),
  /*   7 */ _T("LEFTMARGIN"),
  /*   8 */ _T("RIGHTMARGIN"),
  /*   9 */ _T("TOPMARGIN"),
  /*  10 */ _T("BOTTOMMARGIN"),
  /*  11 */ _T("HORZGUIDE"),
  /*  12 */ _T("VERTGUIDE"),
  /*  13 */ _T("TOOLBAR"),
  /*  14 */ _T("BUTTON"),
  /*  15 */ _T("_BITMAP"),
  /*  16 */ _T("_ICON"),
  /*  17 */ _T("_FONT"),
  /*  18 */ _T("_MENU"),
  /*  19 */ _T("_MENUITEM"),
  /*  20 */ _T("STRINGTABLE"),
  /*  21 */ _T("ACCELERATORS"),
  /*  22 */ _T("VIRTKEY"),
  /*  23 */ _T("ASCII"),
  /*  24 */ _T("SHIFT"),
  /*  25 */ _T("ALT"),
  /*  26 */ _T("NOINVERT"),
  /*  27 */ _T("RCDATA"),
  /*  28 */ _T("DLGINIT"),
  /*  29 */ _T("TEXTINCLUDE"),
  /*  30 */ _T("LANGUAGE"),
  /*  31 */ _T("TYPELIB"),
  /*  32 */ _T("MENUEX"),
  /*  33 */ _T("POPUP"),
  /*  34 */ _T("GRAYED"),
  /*  35 */ _T("CHECKED"),
  /*  36 */ _T("INACTIVE"),
  /*  37 */ _T("SEPARATOR"),
  /*  38 */ _T("VERSIONINFO"),
  /*  39 */ _T("FILEVERSION"),
  /*  40 */ _T("PRODUCTVERSION"),
  /*  41 */ _T("FILEFLAGSMASK"),
  /*  42 */ _T("FILEFLAGS"),
  /*  43 */ _T("FILEOS"),
  /*  44 */ _T("FILETYPE"),
  /*  45 */ _T("FILESUBTYPE"),
  /*  46 */ _T("BLOCK"),
  /*  47 */ _T("VALUE"),
  /*  48 */ _T("DIALOG"),
  /*  49 */ _T("DIALOGEX"),
  /*  50 */ _T("AFX_DIALOG_LAYOUT"),
  /*  51 */ _T("STYLE"),
  /*  52 */ _T("EXSTYLE"),
  /*  53 */ _T("CAPTION"),
  /*  54 */ _T("DISCARDABLE"),
  /*  55 */ _T("MOVEABLE"),
  /*  56 */ _T("PURE"),
  /*  57 */ _T("IMPURE"),
  /*  58 */ _T("PRELOAD"),
  /*  59 */ _T("LOADONCALL"),
  /*  60 */ _T("PUSHBUTTON"),
  /*  61 */ _T("DEFPUSHBUTTON"),
  /*  62 */ _T("EDITTEXT"),
  /*  63 */ _T("SCROLLBAR"),
  /*  64 */ _T("COMBOBOX"),
  /*  65 */ _T("LISTBOX"),
  /*  66 */ _T("GROUPBOX"),
  /*  67 */ _T("LTEXT"),
  /*  68 */ _T("RTEXT"),
  /*  69 */ _T("CTEXT"),
  /*  70 */ _T("CONTROL"),
  /*  71 */ _T("_WS_OVERLAPPED"),
  /*  72 */ _T("_WS_POPUP"),
  /*  73 */ _T("_WS_CHILD"),
  /*  74 */ _T("_WS_MINIMIZE"),
  /*  75 */ _T("_WS_VISIBLE"),
  /*  76 */ _T("_WS_DISABLED"),
  /*  77 */ _T("_WS_CLIPSIBLINGS"),
  /*  78 */ _T("_WS_CLIPCHILDREN"),
  /*  79 */ _T("_WS_MAXIMIZE"),
  /*  80 */ _T("_WS_CAPTION"),
  /*  81 */ _T("_WS_BORDER"),
  /*  82 */ _T("_WS_DLGFRAME"),
  /*  83 */ _T("_WS_VSCROLL"),
  /*  84 */ _T("_WS_HSCROLL"),
  /*  85 */ _T("_WS_SYSMENU"),
  /*  86 */ _T("_WS_THICKFRAME"),
  /*  87 */ _T("_WS_GROUP"),
  /*  88 */ _T("_WS_TABSTOP"),
  /*  89 */ _T("_WS_MINIMIZEBOX"),
  /*  90 */ _T("_WS_MAXIMIZEBOX"),
  /*  91 */ _T("_WS_EX_DLGMODALFRAME"),
  /*  92 */ _T("_WS_EX_NOPARENTNOTIFY"),
  /*  93 */ _T("_WS_EX_TOPMOST"),
  /*  94 */ _T("_WS_EX_ACCEPTFILES"),
  /*  95 */ _T("_WS_EX_TRANSPARENT"),
  /*  96 */ _T("_WS_EX_MDICHILD"),
  /*  97 */ _T("_WS_EX_TOOLWINDOW"),
  /*  98 */ _T("_WS_EX_WINDOWEDGE"),
  /*  99 */ _T("_WS_EX_CLIENTEDGE"),
  /* 100 */ _T("_WS_EX_CONTEXTHELP"),
  /* 101 */ _T("_WS_EX_RIGHT"),
  /* 102 */ _T("_WS_EX_LEFT"),
  /* 103 */ _T("_WS_EX_RTLREADING"),
  /* 104 */ _T("_WS_EX_LTRREADING"),
  /* 105 */ _T("_WS_EX_LEFTSCROLLBAR"),
  /* 106 */ _T("_WS_EX_RIGHTSCROLLBAR"),
  /* 107 */ _T("_WS_EX_CONTROLPARENT"),
  /* 108 */ _T("_WS_EX_STATICEDGE"),
  /* 109 */ _T("_WS_EX_APPWINDOW"),
  /* 110 */ _T("_SS_LEFT"),
  /* 111 */ _T("_SS_CENTER"),
  /* 112 */ _T("_SS_RIGHT"),
  /* 113 */ _T("_SS_ICON"),
  /* 114 */ _T("_SS_BLACKRECT"),
  /* 115 */ _T("_SS_GRAYRECT"),
  /* 116 */ _T("_SS_WHITERECT"),
  /* 117 */ _T("_SS_BLACKFRAME"),
  /* 118 */ _T("_SS_GRAYFRAME"),
  /* 119 */ _T("_SS_WHITEFRAME"),
  /* 120 */ _T("_SS_USERITEM"),
  /* 121 */ _T("_SS_SIMPLE"),
  /* 122 */ _T("_SS_LEFTNOWORDWRAP"),
  /* 123 */ _T("_SS_OWNERDRAW"),
  /* 124 */ _T("_SS_BITMAP"),
  /* 125 */ _T("_SS_ENHMETAFILE"),
  /* 126 */ _T("_SS_ETCHEDHORZ"),
  /* 127 */ _T("_SS_ETCHEDVERT"),
  /* 128 */ _T("_SS_ETCHEDFRAME"),
  /* 129 */ _T("_SS_TYPEMASK"),
  /* 130 */ _T("_SS_NOPREFIX"),
  /* 131 */ _T("_SS_NOTIFY"),
  /* 132 */ _T("_SS_CENTERIMAGE"),
  /* 133 */ _T("_SS_RIGHTJUST"),
  /* 134 */ _T("_SS_REALSIZEIMAGE"),
  /* 135 */ _T("_SS_SUNKEN"),
  /* 136 */ _T("_SS_ENDELLIPSIS"),
  /* 137 */ _T("_SS_PATHELLIPSIS"),
  /* 138 */ _T("_SS_WORDELLIPSIS"),
  /* 139 */ _T("_SS_ELLIPSISMASK"),
  /* 140 */ _T("_ES_LEFT"),
  /* 141 */ _T("_ES_CENTER"),
  /* 142 */ _T("_ES_RIGHT"),
  /* 143 */ _T("_ES_MULTILINE"),
  /* 144 */ _T("_ES_UPPERCASE"),
  /* 145 */ _T("_ES_LOWERCASE"),
  /* 146 */ _T("_ES_PASSWORD"),
  /* 147 */ _T("_ES_AUTOVSCROLL"),
  /* 148 */ _T("_ES_AUTOHSCROLL"),
  /* 149 */ _T("_ES_NOHIDESEL"),
  /* 150 */ _T("_ES_OEMCONVERT"),
  /* 151 */ _T("_ES_READONLY"),
  /* 152 */ _T("_ES_WANTRETURN"),
  /* 153 */ _T("_ES_NUMBER"),
  /* 154 */ _T("_BS_PUSHBUTTON"),
  /* 155 */ _T("_BS_DEFPUSHBUTTON"),
  /* 156 */ _T("_BS_CHECKBOX"),
  /* 157 */ _T("_BS_AUTOCHECKBOX"),
  /* 158 */ _T("_BS_RADIOBUTTON"),
  /* 159 */ _T("_BS_3STATE"),
  /* 160 */ _T("_BS_AUTO3STATE"),
  /* 161 */ _T("_BS_GROUPBOX"),
  /* 162 */ _T("_BS_USERBUTTON"),
  /* 163 */ _T("_BS_AUTORADIOBUTTON"),
  /* 164 */ _T("_BS_OWNERDRAW"),
  /* 165 */ _T("_BS_LEFTTEXT"),
  /* 166 */ _T("_BS_TEXT"),
  /* 167 */ _T("_BS_ICON"),
  /* 168 */ _T("_BS_BITMAP"),
  /* 169 */ _T("_BS_LEFT"),
  /* 170 */ _T("_BS_RIGHT"),
  /* 171 */ _T("_BS_CENTER"),
  /* 172 */ _T("_BS_TOP"),
  /* 173 */ _T("_BS_BOTTOM"),
  /* 174 */ _T("_BS_VCENTER"),
  /* 175 */ _T("_BS_PUSHLIKE"),
  /* 176 */ _T("_BS_MULTILINE"),
  /* 177 */ _T("_BS_NOTIFY"),
  /* 178 */ _T("_BS_FLAT"),
  /* 179 */ _T("_BS_RIGHTBUTTON"),
  /* 180 */ _T("_SBS_HORZ"),
  /* 181 */ _T("_SBS_VERT"),
  /* 182 */ _T("_SBS_TOPALIGN"),
  /* 183 */ _T("_SBS_LEFTALIGN"),
  /* 184 */ _T("_SBS_BOTTOMALIGN"),
  /* 185 */ _T("_SBS_RIGHTALIGN"),
  /* 186 */ _T("_SBS_SIZEBOXTOPLEFTALIGN"),
  /* 187 */ _T("_SBS_SIZEBOXBOTTOMRIGHTALIGN"),
  /* 188 */ _T("_SBS_SIZEBOX"),
  /* 189 */ _T("_SBS_SIZEGRIP"),
  /* 190 */ _T("_CBS_SIMPLE"),
  /* 191 */ _T("_CBS_DROPDOWN"),
  /* 192 */ _T("_CBS_DROPDOWNLIST"),
  /* 193 */ _T("_CBS_OWNERDRAWFIXED"),
  /* 194 */ _T("_CBS_OWNERDRAWVARIABLE"),
  /* 195 */ _T("_CBS_AUTOHSCROLL"),
  /* 196 */ _T("_CBS_OEMCONVERT"),
  /* 197 */ _T("_CBS_SORT"),
  /* 198 */ _T("_CBS_HASSTRINGS"),
  /* 199 */ _T("_CBS_NOINTEGRALHEIGHT"),
  /* 200 */ _T("_CBS_DISABLENOSCROLL"),
  /* 201 */ _T("_CBS_UPPERCASE"),
  /* 202 */ _T("_CBS_LOWERCASE"),
  /* 203 */ _T("_LBS_NOTIFY"),
  /* 204 */ _T("_LBS_SORT"),
  /* 205 */ _T("_LBS_NOREDRAW"),
  /* 206 */ _T("_LBS_MULTIPLESEL"),
  /* 207 */ _T("_LBS_OWNERDRAWFIXED"),
  /* 208 */ _T("_LBS_OWNERDRAWVARIABLE"),
  /* 209 */ _T("_LBS_HASSTRINGS"),
  /* 210 */ _T("_LBS_USETABSTOPS"),
  /* 211 */ _T("_LBS_NOINTEGRALHEIGHT"),
  /* 212 */ _T("_LBS_MULTICOLUMN"),
  /* 213 */ _T("_LBS_WANTKEYBOARDINPUT"),
  /* 214 */ _T("_LBS_EXTENDEDSEL"),
  /* 215 */ _T("_LBS_DISABLENOSCROLL"),
  /* 216 */ _T("_LBS_NODATA"),
  /* 217 */ _T("_LBS_NOSEL"),
  /* 218 */ _T("_TBS_AUTOTICKS"),
  /* 219 */ _T("_TBS_VERT"),
  /* 220 */ _T("_TBS_HORZ"),
  /* 221 */ _T("_TBS_TOP"),
  /* 222 */ _T("_TBS_BOTTOM"),
  /* 223 */ _T("_TBS_LEFT"),
  /* 224 */ _T("_TBS_RIGHT"),
  /* 225 */ _T("_TBS_BOTH"),
  /* 226 */ _T("_TBS_NOTICKS"),
  /* 227 */ _T("_TBS_ENABLESELRANGE"),
  /* 228 */ _T("_TBS_FIXEDLENGTH"),
  /* 229 */ _T("_TBS_NOTHUMB"),
  /* 230 */ _T("_TBS_TOOLTIPS"),
  /* 231 */ _T("_TVS_HASBUTTONS"),
  /* 232 */ _T("_TVS_HASLINES"),
  /* 233 */ _T("_TVS_LINESATROOT"),
  /* 234 */ _T("_TVS_EDITLABELS"),
  /* 235 */ _T("_TVS_DISABLEDRAGDROP"),
  /* 236 */ _T("_TVS_SHOWSELALWAYS"),
  /* 237 */ _T("_TVS_RTLREADING"),
  /* 238 */ _T("_TVS_NOTOOLTIPS"),
  /* 239 */ _T("_TVS_CHECKBOXES"),
  /* 240 */ _T("_TVS_TRACKSELECT"),
  /* 241 */ _T("_TVS_SINGLEEXPAND"),
  /* 242 */ _T("_TVS_INFOTIP"),
  /* 243 */ _T("_TVS_FULLROWSELECT"),
  /* 244 */ _T("_TVS_NOSCROLL"),
  /* 245 */ _T("_TVS_NONEVENHEIGHT"),
  /* 246 */ _T("_LVS_ICON"),
  /* 247 */ _T("_LVS_REPORT"),
  /* 248 */ _T("_LVS_SMALLICON"),
  /* 249 */ _T("_LVS_LIST"),
  /* 250 */ _T("_LVS_TYPEMASK"),
  /* 251 */ _T("_LVS_SINGLESEL"),
  /* 252 */ _T("_LVS_SHOWSELALWAYS"),
  /* 253 */ _T("_LVS_SORTASCENDING"),
  /* 254 */ _T("_LVS_SORTDESCENDING"),
  /* 255 */ _T("_LVS_SHAREIMAGELISTS"),
  /* 256 */ _T("_LVS_NOLABELWRAP"),
  /* 257 */ _T("_LVS_AUTOARRANGE"),
  /* 258 */ _T("_LVS_EDITLABELS"),
  /* 259 */ _T("_LVS_OWNERDATA"),
  /* 260 */ _T("_LVS_NOSCROLL"),
  /* 261 */ _T("_LVS_TYPESTYLEMASK"),
  /* 262 */ _T("_LVS_ALIGNTOP"),
  /* 263 */ _T("_LVS_ALIGNLEFT"),
  /* 264 */ _T("_LVS_ALIGNMASK"),
  /* 265 */ _T("_LVS_OWNERDRAWFIXED"),
  /* 266 */ _T("_LVS_NOCOLUMNHEADER"),
  /* 267 */ _T("_LVS_NOSORTHEADER"),
  /* 268 */ _T("_UDS_WRAP"),
  /* 269 */ _T("_UDS_SETBUDDYINT"),
  /* 270 */ _T("_UDS_ALIGNRIGHT"),
  /* 271 */ _T("_UDS_ALIGNLEFT"),
  /* 272 */ _T("_UDS_AUTOBUDDY"),
  /* 273 */ _T("_UDS_ARROWKEYS"),
  /* 274 */ _T("_UDS_HORZ"),
  /* 275 */ _T("_UDS_NOTHOUSANDS"),
  /* 276 */ _T("_UDS_HOTTRACK"),
  /* 277 */ _T("_PBS_SMOOTH"),
  /* 278 */ _T("_PBS_VERTICAL"),
  /* 279 */ _T("_MCS_DAYSTATE"),
  /* 280 */ _T("_MCS_MULTISELECT"),
  /* 281 */ _T("_MCS_WEEKNUMBERS"),
  /* 282 */ _T("_MCS_NOTODAYCIRCLE"),
  /* 283 */ _T("_MCS_NOTODAY"),
  /* 284 */ _T("_DS_ABSALIGN"),
  /* 285 */ _T("_DS_SYSMODAL"),
  /* 286 */ _T("_DS_LOCALEDIT"),
  /* 287 */ _T("_DS_SETFONT"),
  /* 288 */ _T("_DS_MODALFRAME"),
  /* 289 */ _T("_DS_NOIDLEMSG"),
  /* 290 */ _T("_DS_SETFOREGROUND"),
  /* 291 */ _T("_DS_3DLOOK"),
  /* 292 */ _T("_DS_FIXEDSYS"),
  /* 293 */ _T("_DS_NOFAILCREATE"),
  /* 294 */ _T("_DS_CONTROL"),
  /* 295 */ _T("_DS_CENTER"),
  /* 296 */ _T("_DS_CENTERMOUSE"),
  /* 297 */ _T("_DS_CONTEXTHELP"),
  /* 298 */ _T("_MFT_STRING"),
  /* 299 */ _T("_MFT_BITMAP"),
  /* 300 */ _T("_MFT_MENUBARBREAK"),
  /* 301 */ _T("_MFT_MENUBREAK"),
  /* 302 */ _T("_MFT_OWNERDRAW"),
  /* 303 */ _T("_MFT_RADIOCHECK"),
  /* 304 */ _T("_MFT_SEPARATOR"),
  /* 305 */ _T("_MFT_RIGHTORDER"),
  /* 306 */ _T("_MFT_RIGHTJUSTIFY"),
  /* 307 */ _T("_MFS_GRAYED"),
  /* 308 */ _T("_MFS_DISABLED"),
  /* 309 */ _T("_MFS_CHECKED"),
  /* 310 */ _T("_MFS_HILITE"),
  /* 311 */ _T("_MFS_ENABLED"),
  /* 312 */ _T("_MFS_UNCHECKED"),
  /* 313 */ _T("_MFS_UNHILITE"),
  /* 314 */ _T("_MFS_DEFAULT"),
  /* 315 */ _T("_MFS_MASK"),
  /* 316 */ _T("_MFS_HOTTRACKDRAWN"),
  /* 317 */ _T("_MFS_CACHEDBMP"),
  /* 318 */ _T("_MFS_BOTTOMGAPDROP"),
  /* 319 */ _T("_MFS_TOPGAPDROP"),
  /* 320 */ _T("_MFS_GAPDROP"),
  /* 321 */ _T("BEGIN"),
  /* 322 */ _T("END"),
  /* 323 */ _T("OR"),
  /* 324 */ _T("NOT"),
  /* 325 */ _T("DOT"),
  /* 326 */ _T("LPAR"),
  /* 327 */ _T("RPAR"),
  /* 328 */ _T("start"),
  /* 329 */ _T("resourceFile"),
  /* 330 */ _T("resourceDefinitionList"),
  /* 331 */ _T("resourceDefinition"),
  /* 332 */ _T("bitmapDefinition"),
  /* 333 */ _T("iconDefinition"),
  /* 334 */ _T("customTypeDefinition"),
  /* 335 */ _T("dialogDefinition"),
  /* 336 */ _T("extendedDialogDefinition"),
  /* 337 */ _T("guideLinesDefinition"),
  /* 338 */ _T("toolbarDefnition"),
  /* 339 */ _T("menuDefinition"),
  /* 340 */ _T("dialogInitDefinition"),
  /* 341 */ _T("acceleratorsDefinition"),
  /* 342 */ _T("rcdataDefinition"),
  /* 343 */ _T("stringTableDefinition"),
  /* 344 */ _T("textIncludeDirective"),
  /* 345 */ _T("languageDirective"),
  /* 346 */ _T("versionDefinition"),
  /* 347 */ _T("typelibDefinition"),
  /* 348 */ _T("afxDialogLayout"),
  /* 349 */ _T("identifier"),
  /* 350 */ _T("resourceAttributeList"),
  /* 351 */ _T("string"),
  /* 352 */ _T("rectangleSpec"),
  /* 353 */ _T("dialogSpecList"),
  /* 354 */ _T("opt_dialogControlSpecList"),
  /* 355 */ _T("extendedDialogSpecList"),
  /* 356 */ _T("dialogSpec"),
  /* 357 */ _T("dialogStyleExpr"),
  /* 358 */ _T("fontSpec"),
  /* 359 */ _T("extendedDialogSpec"),
  /* 360 */ _T("extendedDialogStyleExpr"),
  /* 361 */ _T("extendedFontSpec"),
  /* 362 */ _T("extendedDialogStyle"),
  /* 363 */ _T("ws_ex_style"),
  /* 364 */ _T("number"),
  /* 365 */ _T("dialogStyle"),
  /* 366 */ _T("ds_style"),
  /* 367 */ _T("ws_style"),
  /* 368 */ _T("dialogControlSpecList"),
  /* 369 */ _T("dialogControlSpec"),
  /* 370 */ _T("pushButtonSpec"),
  /* 371 */ _T("lrcTextSpec"),
  /* 372 */ _T("editSpec"),
  /* 373 */ _T("comboBoxSpec"),
  /* 374 */ _T("listBoxSpec"),
  /* 375 */ _T("iconSpec"),
  /* 376 */ _T("scrollBarSpec"),
  /* 377 */ _T("controlSpec"),
  /* 378 */ _T("buttonType"),
  /* 379 */ _T("controlAttributeList"),
  /* 380 */ _T("lrcText"),
  /* 381 */ _T("identifierOrString"),
  /* 382 */ _T("controlId"),
  /* 383 */ _T("controlAttribute"),
  /* 384 */ _T("ctrlAttribute"),
  /* 385 */ _T("controlStyleExpr"),
  /* 386 */ _T("extendedWindowStyleExpr"),
  /* 387 */ _T("ctrl_style"),
  /* 388 */ _T("ss_style"),
  /* 389 */ _T("es_style"),
  /* 390 */ _T("bs_style"),
  /* 391 */ _T("cbs_style"),
  /* 392 */ _T("sbs_style"),
  /* 393 */ _T("lbs_style"),
  /* 394 */ _T("tbs_style"),
  /* 395 */ _T("tvs_style"),
  /* 396 */ _T("lvs_style"),
  /* 397 */ _T("uds_style"),
  /* 398 */ _T("pbs_style"),
  /* 399 */ _T("mcs_style"),
  /* 400 */ _T("resourceAttribute"),
  /* 401 */ _T("add_ws_style"),
  /* 402 */ _T("designInfoList"),
  /* 403 */ _T("designInfo"),
  /* 404 */ _T("designSpecList"),
  /* 405 */ _T("designSpec"),
  /* 406 */ _T("marginSpec"),
  /* 407 */ _T("sizeSpec"),
  /* 408 */ _T("buttonSpecList"),
  /* 409 */ _T("buttonSpec"),
  /* 410 */ _T("menuType"),
  /* 411 */ _T("menuBody"),
  /* 412 */ _T("menuSpecList"),
  /* 413 */ _T("menuSpec"),
  /* 414 */ _T("popupMenu"),
  /* 415 */ _T("menuItem"),
  /* 416 */ _T("menuItemModifierList"),
  /* 417 */ _T("identifierOrNumber"),
  /* 418 */ _T("menuItemModifier"),
  /* 419 */ _T("menuItemFlagExpr"),
  /* 420 */ _T("menuItemFlag"),
  /* 421 */ _T("constantElementList"),
  /* 422 */ _T("constantElement"),
  /* 423 */ _T("constant"),
  /* 424 */ _T("acceleratorList"),
  /* 425 */ _T("accelerator"),
  /* 426 */ _T("opt_acceleratorSpecList"),
  /* 427 */ _T("acceleratorSpecList"),
  /* 428 */ _T("acceleratorModifier"),
  /* 429 */ _T("numberList"),
  /* 430 */ _T("stringSpecList"),
  /* 431 */ _T("stringSpec"),
  /* 432 */ _T("stringList"),
  /* 433 */ _T("versionSpecList"),
  /* 434 */ _T("blockList"),
  /* 435 */ _T("versionSpec"),
  /* 436 */ _T("exprList"),
  /* 437 */ _T("expr"),
  /* 438 */ _T("block"),
  /* 439 */ _T("blockBody"),
  /* 440 */ _T("valueList"),
  /* 441 */ _T("value"),
  /* 442 */ _T("fileName"),
  /* 443 */ _T("layoutInfo"),
  /* 444 */ _T("name")
}; // Total size of strings:6716 bytes, size of pointertable:3560 bytes.

static const ParserShortTables ResourceTables_s(compressedSet, compressedLasets
                                               ,action, successor, productionLength, leftSide
                                               ,rightSideTable, symbolName
                                               ,328, 445, 472, 633);

const ParserTables *ResourceTables = &ResourceTables_s;
// Size of ResourceTables_s: 88 bytes. Size of ResourceTables:8 bytes


// Total size of table data:31.632 bytes.


/* DO NOT EDIT THIS FILE - it is machine generated */
#line 131 "C:\\mytools2015\\Dbase\\SqlParse\\Sql.y"
#include "stdafx.h"
#include "SqlParser.h"
#include <SqlApi.h>
#include <io.h>


#line 33 "C:\\mytools2015\\parsergen\\lib\\parsergencpp.par"

#pragma warning(disable : 4312)

typedef short TableType;

/****************************************************************************\
* Bitset containing 1-bits for compressed states and 0-bits for              *
* uncompressed states. Used by ParserTable to determine how to               *
* interpret the entry in the action-table                                    *
* Number of bytes in bitset = (statecount-1)/8+1                             *
\****************************************************************************/
static const BYTE compressedSet[51] = {
   0xde,0xbf,0x06,0x9e,0xff,0x2d,0x0d,0xfe,0xbf,0xff,0xff,0x3b,0x8b,0x02,0xbc,0x00,0xf0,0xa3,0x9e,0x89
  ,0x26,0x3c,0x50,0xde,0xd4,0x04,0xf2,0x23,0x80,0xc4,0xff,0xac,0x17,0x43,0xc1,0xe5,0x53,0xb2,0x1f,0xec
  ,0x55,0x03,0xf8,0xff,0xef,0xf2,0xf9,0x61,0x17,0xb7,0x09
}; // Size of table:52 bytes.

/****************************************************************************\
* The action matrix holds the parse action(state,terminal)                   *
* Used in LRParser::parserStep().                                            *
* 2 different formats are used:Compressed and Uncompressed.                  *
*                                                                            *
* Compressed:When there is only 1 possible action in the state.              *
*            or all actions are reduce by the same production.               *
*   If bit 16 (0x8000) is 0, there is only one possible action which is      *
*   encoded as:                                                              *
*      #define   act0001  (void*)((action << 16) | (token&0x7fff)            *
*   State index------+               |                |                      *
*   Highorder 16 bits = action-------+                |                      *
*   Loworder  15 bits = legal token-------------------+                      *
*                                                                            *
*   If bit 16 is 1, the loworder 15 bits is an index.                        *
*      #define   act0002  (void*)((action<<16)  |  0x8000 | (index&0x7fff))  *
*   State index------+               |                |        |             *
*   Highorder 16 bits = action-------+                |        |             *
*   Indicates that this is a multi-item-action-state--+        |             *
*   Loworder  15 bits = index into compressedLasets------------+             *
*                                                                            *
* compressedLasets contains all unique legal lookahead-sets for all          *
* multi-item-action-states.                                                  *
* Number of bytes in each bitset = (terminalcount-1)/8+1                     *
*                                                                            *
* Uncompressed states:                                                       *
*      TableType act0004[] =      { 3, 1, 2, 2,-2, 6, 1 };                   *
*   State index------+              |  |  |                                  *
*   Number of pairs in list---------+  |  |                                  *
*   Legal input symbol-----------------+  |                                  *
*   Action--------------------------------+                                  *
*                                                                            *
* If any uncompressed state has the same actionarray as a previous           *
* generated uncompressed state, a #define is generated to save space.        *
*                                                                            *
*                                                                            *
*   action = getAction(current state, current inputSymbol);                  *
*                                                                            *
*   action <  0   - Reduce by production p, p == -action.                    *
*   action == 0   - Accept. Reduce by production 0.                          *
*   action >  0   - Go to state s (=action),                                 *
*                   and push [s,input,pos] to parser stack.                  *
*                   Then read next symbol from input.                        *
*   action == _ParserError - not found (=unexpected input).                  *
\****************************************************************************/
static const BYTE compressedLasets[266] = {
  /*  0   5 tokens */  0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x00,0x80,0x00
  /*  1  65 tokens */ ,0x01,0x3c,0x40,0x24,0x3e,0xde,0xc0,0x7e,0xe8,0xff,0xff,0xff,0xff,0x03
  /*  2  25 tokens */ ,0xfe,0x80,0x3a,0x00,0x00,0x00,0x13,0x80,0x01,0x80,0x03,0x80,0x43,0x02
  /*  3   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x40,0x00
  /*  4   3 tokens */ ,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00
  /*  5  41 tokens */ ,0x01,0x3c,0x00,0x24,0x3e,0x8c,0x80,0x52,0x40,0x00,0xbc,0xff,0xbf,0x01
  /*  6  43 tokens */ ,0x81,0x3c,0x00,0x24,0x3e,0x8d,0x80,0x52,0x40,0x00,0xbc,0xff,0xbf,0x01
  /*  7   3 tokens */ ,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x20,0x00,0x00,0x00
  /*  8   3 tokens */ ,0x01,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00
  /*  9   2 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x80,0x00
  /* 10  17 tokens */ ,0x01,0x20,0x00,0x20,0x3a,0x00,0x80,0x52,0x00,0x00,0x1c,0x60,0x80,0x00
  /* 11   8 tokens */ ,0x01,0x00,0x00,0x20,0x20,0x00,0x00,0x10,0x00,0x00,0x1c,0x00,0x80,0x00
  /* 12  24 tokens */ ,0xfe,0x80,0x3a,0x00,0x00,0x00,0x13,0x80,0x01,0x80,0x03,0x80,0x41,0x02
  /* 13  17 tokens */ ,0x01,0x20,0x00,0x20,0x3a,0x00,0x80,0x52,0x40,0x00,0x3c,0x00,0x80,0x00
  /* 14   4 tokens */ ,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0xa0,0x00
  /* 15   5 tokens */ ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x71,0x00,0x00,0x00,0x00
  /* 16  21 tokens */ ,0x01,0x20,0x00,0x20,0x3a,0x52,0xc0,0x52,0x40,0x00,0x3c,0x00,0x80,0x00
  /* 17   2 tokens */ ,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00
  /* 18  13 tokens */ ,0x01,0x20,0x00,0x20,0x22,0x00,0x00,0x52,0x00,0x00,0x3c,0x00,0x80,0x00
}; // Size of table:268 bytes.

#define act0001 (void*)0x00000000    /* reduce by 0 on EOI                       */
#define act0002 (void*)0xffff0000    /* reduce by 1 on EOI                       */
#define act0003 (void*)0xfffe0000    /* reduce by 2 on EOI                       */
#define act0004 (void*)0xfffd0000    /* reduce by 3 on EOI                       */
#define act0006 (void*)0xfffb0000    /* reduce by 5 on EOI                       */
#define act0007 (void*)0xfffa0000    /* reduce by 6 on EOI                       */
#define act0008 (void*)0xfff90000    /* reduce by 7 on EOI                       */
#define act0009 (void*)0xfff80000    /* reduce by 8 on EOI                       */
#define act0010 (void*)0xfff70000    /* reduce by 9 on EOI                       */
#define act0011 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0012 (void*)0x001b002a    /* shift to 27 on INTO                      */
#define act0013 (void*)0x001c0022    /* shift to 28 on FROM                      */
#define act0015 (void*)0xffe38000    /* reduce by 29 on tokens in set[0]         */
#define act0017 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0018 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0025 (void*)0x002d003b    /* shift to 45 on SET                       */
#define act0026 (void*)0xff41800e    /* reduce by 191 on tokens in set[1]        */
#define act0027 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0028 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0031 (void*)0xffde801c    /* reduce by 34 on tokens in set[2]         */
#define act0032 (void*)0xffdd801c    /* reduce by 35 on tokens in set[2]         */
#define act0033 (void*)0x00580016    /* shift to 88 on CURSOR                    */
#define act0034 (void*)0x0059002a    /* shift to 89 on INTO                      */
#define act0035 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0036 (void*)0x005b0026    /* shift to 91 on INDEX                     */
#define act0037 (void*)0xff660026    /* reduce by 154 on INDEX                   */
#define act0038 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0039 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0040 (void*)0xff420000    /* reduce by 190 on EOI                     */
#define act0042 (void*)0xffe0802a    /* reduce by 32 on tokens in set[3]         */
#define act0043 (void*)0xffe68000    /* reduce by 26 on tokens in set[0]         */
#define act0045 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0048 (void*)0xffe48000    /* reduce by 28 on tokens in set[0]         */
#define act0050 (void*)0xffdb8038    /* reduce by 37 on tokens in set[4]         */
#define act0051 (void*)0xffda8038    /* reduce by 38 on tokens in set[4]         */
#define act0057 (void*)0xff8a8046    /* reduce by 118 on tokens in set[5]        */
#define act0058 (void*)0xff898046    /* reduce by 119 on tokens in set[5]        */
#define act0059 (void*)0xff888046    /* reduce by 120 on tokens in set[5]        */
#define act0060 (void*)0xff878046    /* reduce by 121 on tokens in set[5]        */
#define act0061 (void*)0xff868046    /* reduce by 122 on tokens in set[5]        */
#define act0062 (void*)0xff858046    /* reduce by 123 on tokens in set[5]        */
#define act0063 (void*)0xff848046    /* reduce by 124 on tokens in set[5]        */
#define act0064 (void*)0xff838046    /* reduce by 125 on tokens in set[5]        */
#define act0065 (void*)0xff828046    /* reduce by 126 on tokens in set[5]        */
#define act0066 (void*)0xff818046    /* reduce by 127 on tokens in set[5]        */
#define act0067 (void*)0xff808046    /* reduce by 128 on tokens in set[5]        */
#define act0068 (void*)0xff7f8046    /* reduce by 129 on tokens in set[5]        */
#define act0069 (void*)0xff7e8046    /* reduce by 130 on tokens in set[5]        */
#define act0071 (void*)0x007b0066    /* shift to 123 on LPAR                     */
#define act0072 (void*)0x007c0066    /* shift to 124 on LPAR                     */
#define act0073 (void*)0x007d0066    /* shift to 125 on LPAR                     */
#define act0074 (void*)0x007e0066    /* shift to 126 on LPAR                     */
#define act0075 (void*)0x007f0066    /* shift to 127 on LPAR                     */
#define act0076 (void*)0x00800066    /* shift to 128 on LPAR                     */
#define act0077 (void*)0x00810066    /* shift to 129 on LPAR                     */
#define act0078 (void*)0xff730066    /* reduce by 141 on LPAR                    */
#define act0079 (void*)0xff720066    /* reduce by 142 on LPAR                    */
#define act0080 (void*)0xff710066    /* reduce by 143 on LPAR                    */
#define act0081 (void*)0xff408054    /* reduce by 192 on tokens in set[6]        */
#define act0082 (void*)0xff3f8046    /* reduce by 193 on tokens in set[5]        */
#define act0083 (void*)0xff3e8046    /* reduce by 194 on tokens in set[5]        */
#define act0084 (void*)0xff3d8046    /* reduce by 195 on tokens in set[5]        */
#define act0085 (void*)0xff3c8046    /* reduce by 196 on tokens in set[5]        */
#define act0086 (void*)0xff3b8046    /* reduce by 197 on tokens in set[5]        */
#define act0087 (void*)0xff3a8046    /* reduce by 198 on tokens in set[5]        */
#define act0088 (void*)0x00820021    /* shift to 130 on FOR                      */
#define act0089 (void*)0x00510007    /* shift to 81 on HOSTVAR                   */
#define act0091 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0092 (void*)0xff440000    /* reduce by 188 on EOI                     */
#define act0093 (void*)0xff430000    /* reduce by 189 on EOI                     */
#define act0096 (void*)0xfff48062    /* reduce by 12 on tokens in set[7]         */
#define act0097 (void*)0x008a0057    /* shift to 138 on EQUAL                    */
#define act0099 (void*)0x008e0066    /* shift to 142 on LPAR                     */
#define act0103 (void*)0x009e0022    /* shift to 158 on FROM                     */
#define act0105 (void*)0x00510007    /* shift to 81 on HOSTVAR                   */
#define act0114 (void*)0xffd38046    /* reduce by 45 on tokens in set[5]         */
#define act0115 (void*)0xffd18046    /* reduce by 47 on tokens in set[5]         */
#define act0116 (void*)0x00510007    /* shift to 81 on HOSTVAR                   */
#define act0117 (void*)0xff8c8046    /* reduce by 116 on tokens in set[5]        */
#define act0119 (void*)0xff8b8046    /* reduce by 117 on tokens in set[5]        */
#define act0132 (void*)0xffd48070    /* reduce by 44 on tokens in set[8]         */
#define act0133 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0134 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0135 (void*)0x00be0036    /* shift to 190 on ON                       */
#define act0136 (void*)0xfff60000    /* reduce by 10 on EOI                      */
#define act0137 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0141 (void*)0xffec807e    /* reduce by 20 on tokens in set[9]         */
#define act0143 (void*)0xffe80000    /* reduce by 24 on EOI                      */
#define act0145 (void*)0x00c70008    /* shift to 199 on ACCESSS                  */
#define act0146 (void*)0xffb60008    /* reduce by 74 on ACCESSS                  */
#define act0147 (void*)0xffb50008    /* reduce by 75 on ACCESSS                  */
#define act0148 (void*)0xffb40008    /* reduce by 76 on ACCESSS                  */
#define act0151 (void*)0xffab808c    /* reduce by 85 on tokens in set[10]        */
#define act0152 (void*)0xffaa808c    /* reduce by 86 on tokens in set[10]        */
#define act0155 (void*)0x00da0066    /* shift to 218 on LPAR                     */
#define act0159 (void*)0xffdc8038    /* reduce by 36 on tokens in set[4]         */
#define act0161 (void*)0xffd98038    /* reduce by 39 on tokens in set[4]         */
#define act0162 (void*)0xff6d8046    /* reduce by 147 on tokens in set[5]        */
#define act0165 (void*)0xff918046    /* reduce by 111 on tokens in set[5]        */
#define act0170 (void*)0xffd08046    /* reduce by 48 on tokens in set[5]         */
#define act0171 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0172 (void*)0xff7d8046    /* reduce by 131 on tokens in set[5]        */
#define act0173 (void*)0xff7b8046    /* reduce by 133 on tokens in set[5]        */
#define act0180 (void*)0x00e70067    /* shift to 231 on RPAR                     */
#define act0182 (void*)0xff6f0067    /* reduce by 145 on RPAR                    */
#define act0185 (void*)0x00510007    /* shift to 81 on HOSTVAR                   */
#define act0186 (void*)0xff6a0000    /* reduce by 150 on EOI                     */
#define act0187 (void*)0x00eb0055    /* shift to 235 on COMMA                    */
#define act0188 (void*)0xff610055    /* reduce by 159 on COMMA                   */
#define act0190 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0191 (void*)0xfff58062    /* reduce by 11 on tokens in set[7]         */
#define act0194 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0196 (void*)0x00fc0067    /* shift to 252 on RPAR                     */
#define act0198 (void*)0x00fd0008    /* shift to 253 on ACCESSS                  */
#define act0199 (void*)0xffb7809a    /* reduce by 73 on tokens in set[11]        */
#define act0202 (void*)0xffac808c    /* reduce by 84 on tokens in set[10]        */
#define act0209 (void*)0x01060066    /* shift to 262 on LPAR                     */
#define act0212 (void*)0xff9b80a8    /* reduce by 101 on tokens in set[12]       */
#define act0213 (void*)0xff9a80a8    /* reduce by 102 on tokens in set[12]       */
#define act0214 (void*)0xff9980a8    /* reduce by 103 on tokens in set[12]       */
#define act0215 (void*)0xff9880a8    /* reduce by 104 on tokens in set[12]       */
#define act0216 (void*)0xff9780a8    /* reduce by 105 on tokens in set[12]       */
#define act0217 (void*)0xff9680a8    /* reduce by 106 on tokens in set[12]       */
#define act0221 (void*)0xffce80b6    /* reduce by 50 on tokens in set[13]        */
#define act0231 (void*)0xff758046    /* reduce by 139 on tokens in set[5]        */
#define act0234 (void*)0xffd58070    /* reduce by 43 on tokens in set[8]         */
#define act0238 (void*)0xff5880c4    /* reduce by 168 on tokens in set[14]       */
#define act0239 (void*)0xff5780c4    /* reduce by 169 on tokens in set[14]       */
#define act0240 (void*)0xff5680c4    /* reduce by 170 on tokens in set[14]       */
#define act0241 (void*)0xff5580c4    /* reduce by 171 on tokens in set[14]       */
#define act0242 (void*)0xff5480c4    /* reduce by 172 on tokens in set[14]       */
#define act0243 (void*)0x01200066    /* shift to 288 on LPAR                     */
#define act0244 (void*)0xff5180d2    /* reduce by 175 on tokens in set[15]       */
#define act0245 (void*)0xff5080d2    /* reduce by 176 on tokens in set[15]       */
#define act0246 (void*)0x01210066    /* shift to 289 on LPAR                     */
#define act0247 (void*)0x01220066    /* shift to 290 on LPAR                     */
#define act0250 (void*)0xffeb807e    /* reduce by 21 on tokens in set[9]         */
#define act0251 (void*)0xffef0000    /* reduce by 17 on EOI                      */
#define act0253 (void*)0xffb8809a    /* reduce by 72 on tokens in set[11]        */
#define act0255 (void*)0xffad808c    /* reduce by 83 on tokens in set[10]        */
#define act0256 (void*)0xffa9808c    /* reduce by 87 on tokens in set[10]        */
#define act0257 (void*)0xffa8808c    /* reduce by 88 on tokens in set[10]        */
#define act0258 (void*)0x0125005e    /* shift to 293 on AND                      */
#define act0260 (void*)0x01270066    /* shift to 295 on LPAR                     */
#define act0264 (void*)0xffa0808c    /* reduce by 96 on tokens in set[10]        */
#define act0265 (void*)0x012c0034    /* shift to 300 on NULLVAL                  */
#define act0270 (void*)0xffcc80e0    /* reduce by 52 on tokens in set[16]        */
#define act0272 (void*)0x01340067    /* shift to 308 on RPAR                     */
#define act0278 (void*)0xff748046    /* reduce by 140 on tokens in set[5]        */
#define act0279 (void*)0x013a002d    /* shift to 314 on KEY                      */
#define act0280 (void*)0xff620055    /* reduce by 158 on COMMA                   */
#define act0282 (void*)0x013d0034    /* shift to 317 on NULLVAL                  */
#define act0285 (void*)0xff5b80c4    /* reduce by 165 on tokens in set[14]       */
#define act0286 (void*)0xff5a80c4    /* reduce by 166 on tokens in set[14]       */
#define act0287 (void*)0xff5980c4    /* reduce by 167 on tokens in set[14]       */
#define act0288 (void*)0x00530002    /* shift to 83 on NUMBER                    */
#define act0289 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0292 (void*)0xfff10000    /* reduce by 15 on EOI                      */
#define act0294 (void*)0x0147005e    /* shift to 327 on AND                      */
#define act0297 (void*)0x01490067    /* shift to 329 on RPAR                     */
#define act0300 (void*)0xff9f808c    /* reduce by 97 on tokens in set[10]        */
#define act0301 (void*)0xffa7808c    /* reduce by 89 on tokens in set[10]        */
#define act0303 (void*)0x014c000e    /* shift to 332 on BY                       */
#define act0304 (void*)0xffcf80b6    /* reduce by 49 on tokens in set[13]        */
#define act0305 (void*)0x014d002c    /* shift to 333 on JOIN                     */
#define act0306 (void*)0xffc9002c    /* reduce by 55 on JOIN                     */
#define act0307 (void*)0xffc8002c    /* reduce by 56 on JOIN                     */
#define act0308 (void*)0xff7c8046    /* reduce by 132 on tokens in set[5]        */
#define act0314 (void*)0x01530066    /* shift to 339 on LPAR                     */
#define act0315 (void*)0xff600055    /* reduce by 160 on COMMA                   */
#define act0317 (void*)0xff4e80ee    /* reduce by 178 on tokens in set[17]       */
#define act0318 (void*)0x00530002    /* shift to 83 on NUMBER                    */
#define act0319 (void*)0x00530002    /* shift to 83 on NUMBER                    */
#define act0320 (void*)0x015e0067    /* shift to 350 on RPAR                     */
#define act0322 (void*)0xff64807e    /* reduce by 156 on tokens in set[9]        */
#define act0324 (void*)0x01640067    /* shift to 356 on RPAR                     */
#define act0326 (void*)0xffa6808c    /* reduce by 90 on tokens in set[10]        */
#define act0328 (void*)0x01670067    /* shift to 359 on RPAR                     */
#define act0329 (void*)0xffa4808c    /* reduce by 92 on tokens in set[10]        */
#define act0339 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0340 (void*)0xff4c0055    /* reduce by 180 on COMMA                   */
#define act0341 (void*)0xff4b0055    /* reduce by 181 on COMMA                   */
#define act0342 (void*)0xff4a0055    /* reduce by 182 on COMMA                   */
#define act0343 (void*)0x00530002    /* shift to 83 on NUMBER                    */
#define act0344 (void*)0x00530002    /* shift to 83 on NUMBER                    */
#define act0345 (void*)0xff470055    /* reduce by 185 on COMMA                   */
#define act0346 (void*)0xff460055    /* reduce by 186 on COMMA                   */
#define act0347 (void*)0xff450055    /* reduce by 187 on COMMA                   */
#define act0348 (void*)0x01750067    /* shift to 373 on RPAR                     */
#define act0349 (void*)0x01760067    /* shift to 374 on RPAR                     */
#define act0350 (void*)0xff5380c4    /* reduce by 173 on tokens in set[14]       */
#define act0351 (void*)0xff680000    /* reduce by 152 on EOI                     */
#define act0352 (void*)0x001a0069    /* shift to 26 on NAME                      */
#define act0353 (void*)0xff63807e    /* reduce by 157 on tokens in set[9]        */
#define act0354 (void*)0xffbb80fc    /* reduce by 69 on tokens in set[18]        */
#define act0355 (void*)0xffba80fc    /* reduce by 70 on tokens in set[18]        */
#define act0357 (void*)0xfff00000    /* reduce by 16 on EOI                      */
#define act0358 (void*)0xffa5808c    /* reduce by 91 on tokens in set[10]        */
#define act0359 (void*)0xffa3808c    /* reduce by 93 on tokens in set[10]        */
#define act0361 (void*)0x017a000e    /* shift to 378 on BY                       */
#define act0364 (void*)0x017b0036    /* shift to 379 on ON                       */
#define act0365 (void*)0xff7a8046    /* reduce by 134 on tokens in set[5]        */
#define act0366 (void*)0xff798046    /* reduce by 135 on tokens in set[5]        */
#define act0367 (void*)0xff788046    /* reduce by 136 on tokens in set[5]        */
#define act0368 (void*)0xff778046    /* reduce by 137 on tokens in set[5]        */
#define act0371 (void*)0xff490055    /* reduce by 183 on COMMA                   */
#define act0372 (void*)0xff480055    /* reduce by 184 on COMMA                   */
#define act0373 (void*)0xff5d80c4    /* reduce by 163 on tokens in set[14]       */
#define act0374 (void*)0xff5c80c4    /* reduce by 164 on tokens in set[14]       */
#define act0375 (void*)0xff65807e    /* reduce by 155 on tokens in set[9]        */
#define act0376 (void*)0xfff20000    /* reduce by 14 on EOI                      */
#define act0381 (void*)0x01880067    /* shift to 392 on RPAR                     */
#define act0382 (void*)0xffe28000    /* reduce by 30 on tokens in set[0]         */
#define act0384 (void*)0x018a0032    /* shift to 394 on MODE                     */
#define act0385 (void*)0xffb00032    /* reduce by 80 on MODE                     */
#define act0386 (void*)0xffaf0032    /* reduce by 81 on MODE                     */
#define act0388 (void*)0xffbe80fc    /* reduce by 66 on tokens in set[18]        */
#define act0392 (void*)0xff690000    /* reduce by 151 on EOI                     */
#define act0393 (void*)0x018f0032    /* shift to 399 on MODE                     */
#define act0394 (void*)0xffb18000    /* reduce by 79 on tokens in set[0]         */
#define act0396 (void*)0xffbd80fc    /* reduce by 67 on tokens in set[18]        */
#define act0397 (void*)0xffcb80e0    /* reduce by 53 on tokens in set[16]        */
#define act0399 (void*)0xffb28000    /* reduce by 78 on tokens in set[0]         */
#define act0400 (void*)0xffbf80fc    /* reduce by 65 on tokens in set[18]        */
#define act0403 (void*)0xff768046    /* reduce by 138 on tokens in set[5]        */

static const TableType act0000[] = {  10,  18,  19,  23,  17,  25,  13,  28,  20,  31,  21
                                        ,  32,  18,  39,  12,  58,  16,  68,  11, 102,  14};
static const TableType act0005[] = {   4,   0,  -4,  82,  22,  83,  24,  84,  23};
static const TableType act0014[] = {   2,  58,  16, 102,  14};
static const TableType act0016[] = {  27,   1, -33,   2, -33,   3, -33,   4, -33,   5, -33
                                        ,   6, -33,   7, -33,   9,  31,  15, -33,  17, -33
                                        ,  19, -33,  20, -33,  21, -33,  27,  32,  48, -33
                                        ,  49, -33,  52, -33,  63, -33,  64, -33,  79, -33
                                        ,  80, -33,  81, -33,  95, -33,  96, -33,  97, -33
                                        , 102, -33, 105, -33};
static const TableType act0019[] = {   3,  38,-153,  65,  35,  66,  37};
static const TableType act0020[] = {   2,  38,  39,  65,  38};
static const TableType act0022[] = {   3,   9,  42,  58, -31, 102, -31};
static const TableType act0029[] = {   4,  82,  22,  83,  24,  84,  23, 103,  48};
static const TableType act0030[] = {  25,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  48,  79,  49,  78,  52,  69
                                        ,  63,  72,  64,  80,  79,  73,  80,  74,  81,  75
                                        ,  95,  56,  96,  55,  97,  51, 102,  70, 105,  26};
static const TableType act0044[] = {   5,   0, -27,  82, -27,  83, -27,  84,  23, 103, -27};
static const TableType act0046[] = {   3,  58,  16,  69,  99, 102,  98};
static const TableType act0047[] = {   6,   0, -57,  13, -57,  33, -57,  57, -57,  62, -57
                                        ,  70, 102};
static const TableType act0049[] = {   3,  34, -41,  42, 105,  85, 104};
static const TableType act0052[] = {  11,  34,-146,  42,-146,  85,-146,  86, 106,  95,-146
                                        ,  96,-146,  97,-146,  98,-146,  99,-146, 100,-146
                                        , 104,-146};
static const TableType act0053[] = {  10,  34, -40,  42, -40,  85, -40,  95, 107,  96, 108
                                        ,  97, 110,  98, 111,  99, 112, 100, 113, 104, 109};
static const TableType act0054[] = {  43,   0, -46,   7,  81,  10, -46,  11, -46,  12, -46
                                        ,  13, -46,  26, -46,  29, -46,  33, -46,  34, -46
                                        ,  35, -46,  36, -46,  37, -46,  40, 116,  42, -46
                                        ,  43, -46,  47, -46,  55, -46,  57, -46,  60, -46
                                        ,  62, -46,  70, -46,  82, -46,  83, -46,  84, -46
                                        ,  85, -46,  87, -46,  88, -46,  89, -46,  90, -46
                                        ,  91, -46,  92, -46,  93, -46,  94, -46,  95, -46
                                        ,  96, -46,  97, -46,  98, -46,  99, -46, 100, -46
                                        , 101, -46, 103, -46, 104, -46};
static const TableType act0055[] = {  22,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  48,  79,  49,  78,  52,  69
                                        ,  63,  72,  64,  80,  79,  73,  80,  74,  81,  75
                                        , 102,  70, 105,  26};
static const TableType act0070[] = {  25,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  48,  79,  49,  78,  52,  69
                                        ,  58,  16,  63,  72,  64,  80,  79,  73,  80,  74
                                        ,  81,  75,  95,  56,  96,  55, 102, 122, 105,  26};
static const TableType act0090[] = {   2,  47, 133, 102, 134};
static const TableType act0094[] = {   5,   0, -25,  82, -25,  83, -25,  84,  23, 103, -25};
static const TableType act0095[] = {   3,   0, -57,  70, 102,  85, 137};
static const TableType act0098[] = {   3,  58,  16, 102,  14, 105,  26};
static const TableType act0100[] = {   4,   0, -19,  82,  22,  83,  24,  84,  23};
static const TableType act0101[] = {   5,   0, -71,  13, 146,  33, 144,  57, 148,  62, 147};
static const TableType act0102[] = {  26,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  30, 155,  48,  79,  49,  78
                                        ,  52,  69,  63,  72,  64,  80,  79,  73,  80,  74
                                        ,  81,  75,  95,  56,  96,  55, 101, 150, 102, 153
                                        , 105,  26};
static const TableType act0106[] = {   2,  97, 161, 105,  26};
static const TableType act0107[] = {  24,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  48,  79,  49,  78,  52,  69
                                        ,  63,  72,  64,  80,  79,  73,  80,  74,  81,  75
                                        ,  95,  56,  96,  55, 102,  70, 105,  26};
static const TableType act0118[] = {  42,   0,-146,  10,-146,  11,-146,  12,-146,  13,-146
                                        ,  26,-146,  29,-146,  33,-146,  34,-146,  35,-146
                                        ,  36,-146,  37,-146,  42,-146,  43,-146,  47,-146
                                        ,  55,-146,  57,-146,  60,-146,  62,-146,  70,-146
                                        ,  82,-146,  83,-146,  84,-146,  85,-146,  86, 171
                                        ,  87,-146,  88,-146,  89,-146,  90,-146,  91,-146
                                        ,  92,-146,  93,-146,  94,-146,  95,-146,  96,-146
                                        ,  97,-146,  98,-146,  99,-146, 100,-146, 101,-146
                                        , 103,-146, 104,-146};
static const TableType act0120[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103, 172, 104, 109};
static const TableType act0121[] = {   4,  82,  22,  83,  24,  84,  23, 103, 173};
static const TableType act0128[] = {  27,   1, -33,   2, -33,   3, -33,   4, -33,   5, -33
                                        ,   6, -33,   7, -33,   9,  31,  15, -33,  17, -33
                                        ,  19, -33,  20, -33,  21, -33,  27,  32,  48, -33
                                        ,  49, -33,  52, -33,  63, -33,  64, -33,  79, -33
                                        ,  80, -33,  81, -33,  95, -33,  96, -33,  97, 182
                                        , 102, -33, 105, -33};
static const TableType act0129[] = {  26,   1, -33,   2, -33,   3, -33,   4, -33,   5, -33
                                        ,   6, -33,   7, -33,   9,  31,  15, -33,  17, -33
                                        ,  19, -33,  20, -33,  21, -33,  27,  32,  48, -33
                                        ,  49, -33,  52, -33,  63, -33,  64, -33,  79, -33
                                        ,  80, -33,  81, -33,  95, -33,  96, -33, 102, -33
                                        , 105, -33};
static const TableType act0131[] = {   2,   0,-149,  85, 185};
static const TableType act0139[] = {   2,  85, 194, 103, 193};
static const TableType act0140[] = {   4,  82,  22,  83,  24,  84,  23, 103, 195};
static const TableType act0142[] = {  25,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  48,  79,  49,  78,  52,  69
                                        ,  63,  72,  64,  80,  79,  73,  80,  74,  81,  75
                                        ,  95,  56,  96,  55, 102,  70, 103, -22, 105,  26};
static const TableType act0144[] = {   3,  13, 146,  57, 148,  62, 147};
static const TableType act0149[] = {  17,   0, -58,  13, -58,  29, -58,  33, -58,  35, -58
                                        ,  36, -58,  37, -58,  55, -58,  57, -58,  60, -58
                                        ,  62, -58,  82, -58,  83, -58,  84, -58,  93, 200
                                        ,  94, 201, 103, -58};
static const TableType act0150[] = {  25,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  30, 155,  48,  79,  49,  78
                                        ,  52,  69,  63,  72,  64,  80,  79,  73,  80,  74
                                        ,  81,  75,  95,  56,  96,  55, 102, 153, 105,  26};
static const TableType act0153[] = {  27,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,   6,  82,   7,  81,  15,  71,  17,  76,  19,  66
                                        ,  20,  67,  21,  68,  30, 155,  48,  79,  49,  78
                                        ,  52,  69,  58,  16,  63,  72,  64,  80,  79,  73
                                        ,  80,  74,  81,  75,  95,  56,  96,  55, 101, 150
                                        , 102, 205, 105,  26};
static const TableType act0154[] = {  11,  12, 207,  37, 209,  43, 211,  47, 210,  87, 216
                                        ,  88, 217,  89, 212,  90, 213,  91, 214,  92, 215
                                        , 101, 208};
static const TableType act0156[] = {  28,   0,-100,  12,-100,  13,-100,  29,-100,  33,-100
                                        ,  35,-100,  36,-100,  37,-100,  43,-100,  47,-100
                                        ,  55,-100,  57,-100,  60,-100,  62,-100,  82,-100
                                        ,  83,-100,  84,-100,  85, 219,  87,-100,  88,-100
                                        ,  89,-100,  90,-100,  91,-100,  92,-100,  93,-100
                                        ,  94,-100, 101,-100, 103,-100};
static const TableType act0157[] = {  35,   0,-108,  12,-108,  13,-108,  29,-108,  33,-108
                                        ,  35,-108,  36,-108,  37,-108,  43,-108,  47,-108
                                        ,  55,-108,  57,-108,  60,-108,  62,-108,  82,-108
                                        ,  83,-108,  84,-108,  85,-108,  87,-108,  88,-108
                                        ,  89,-108,  90,-108,  91,-108,  92,-108,  93,-108
                                        ,  94,-108,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 101,-108, 103,-108, 104, 109};
static const TableType act0158[] = {   2, 102, 223, 105,  26};
static const TableType act0160[] = {   2,  34, -42,  85, 185};
static const TableType act0163[] = {  41,   0,-109,  10,-109,  11,-109,  12,-109,  13,-109
                                        ,  26,-109,  29,-109,  33,-109,  34,-109,  35,-109
                                        ,  36,-109,  37,-109,  42,-109,  43,-109,  47,-109
                                        ,  55,-109,  57,-109,  60,-109,  62,-109,  70,-109
                                        ,  82,-109,  83,-109,  84,-109,  85,-109,  87,-109
                                        ,  88,-109,  89,-109,  90,-109,  91,-109,  92,-109
                                        ,  93,-109,  94,-109,  95,-109,  96,-109,  97, 110
                                        ,  98, 111,  99, 112, 100, 113, 101,-109, 103,-109
                                        , 104, 109};
static const TableType act0164[] = {  41,   0,-110,  10,-110,  11,-110,  12,-110,  13,-110
                                        ,  26,-110,  29,-110,  33,-110,  34,-110,  35,-110
                                        ,  36,-110,  37,-110,  42,-110,  43,-110,  47,-110
                                        ,  55,-110,  57,-110,  60,-110,  62,-110,  70,-110
                                        ,  82,-110,  83,-110,  84,-110,  85,-110,  87,-110
                                        ,  88,-110,  89,-110,  90,-110,  91,-110,  92,-110
                                        ,  93,-110,  94,-110,  95,-110,  96,-110,  97, 110
                                        ,  98, 111,  99, 112, 100, 113, 101,-110, 103,-110
                                        , 104, 109};
static const TableType act0166[] = {  41,   0,-112,  10,-112,  11,-112,  12,-112,  13,-112
                                        ,  26,-112,  29,-112,  33,-112,  34,-112,  35,-112
                                        ,  36,-112,  37,-112,  42,-112,  43,-112,  47,-112
                                        ,  55,-112,  57,-112,  60,-112,  62,-112,  70,-112
                                        ,  82,-112,  83,-112,  84,-112,  85,-112,  87,-112
                                        ,  88,-112,  89,-112,  90,-112,  91,-112,  92,-112
                                        ,  93,-112,  94,-112,  95,-112,  96,-112,  97,-112
                                        ,  98,-112,  99,-112, 100, 113, 101,-112, 103,-112
                                        , 104, 109};
static const TableType act0167[] = {  41,   0,-113,  10,-113,  11,-113,  12,-113,  13,-113
                                        ,  26,-113,  29,-113,  33,-113,  34,-113,  35,-113
                                        ,  36,-113,  37,-113,  42,-113,  43,-113,  47,-113
                                        ,  55,-113,  57,-113,  60,-113,  62,-113,  70,-113
                                        ,  82,-113,  83,-113,  84,-113,  85,-113,  87,-113
                                        ,  88,-113,  89,-113,  90,-113,  91,-113,  92,-113
                                        ,  93,-113,  94,-113,  95,-113,  96,-113,  97,-113
                                        ,  98,-113,  99,-113, 100, 113, 101,-113, 103,-113
                                        , 104, 109};
static const TableType act0168[] = {  41,   0,-114,  10,-114,  11,-114,  12,-114,  13,-114
                                        ,  26,-114,  29,-114,  33,-114,  34,-114,  35,-114
                                        ,  36,-114,  37,-114,  42,-114,  43,-114,  47,-114
                                        ,  55,-114,  57,-114,  60,-114,  62,-114,  70,-114
                                        ,  82,-114,  83,-114,  84,-114,  85,-114,  87,-114
                                        ,  88,-114,  89,-114,  90,-114,  91,-114,  92,-114
                                        ,  93,-114,  94,-114,  95,-114,  96,-114,  97,-114
                                        ,  98,-114,  99,-114, 100, 113, 101,-114, 103,-114
                                        , 104, 109};
static const TableType act0169[] = {  41,   0,-115,  10,-115,  11,-115,  12,-115,  13,-115
                                        ,  26,-115,  29,-115,  33,-115,  34,-115,  35,-115
                                        ,  36,-115,  37,-115,  42,-115,  43,-115,  47,-115
                                        ,  55,-115,  57,-115,  60,-115,  62,-115,  70,-115
                                        ,  82,-115,  83,-115,  84,-115,  85,-115,  87,-115
                                        ,  88,-115,  89,-115,  90,-115,  91,-115,  92,-115
                                        ,  93,-115,  94,-115,  95,-115,  96,-115,  97,-115
                                        ,  98,-115,  99,-115, 100,-115, 101,-115, 103,-115
                                        , 104, 109};
static const TableType act0174[] = {   4,  82,  22,  83,  24,  84,  23, 103, 224};
static const TableType act0175[] = {   8,  10, 225,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0176[] = {   9,  34, 226,  85, 227,  95, 107,  96, 108,  97, 110
                                        ,  98, 111,  99, 112, 100, 113, 104, 109};
static const TableType act0177[] = {   8,  85, 228,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0178[] = {   8,  85, 229,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0179[] = {   8,  85, 230,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0184[] = {   4,   0,-148,  82,  22,  83,  24,  84,  23};
static const TableType act0189[] = {  13,  61, 244,  67, 245,  71,-174,  72,-174,  73, 243
                                        ,  74, 239,  75, 238,  76,-174,  77,-174,  78,-174
                                        ,  79, 240,  80, 241,  81, 242};
static const TableType act0192[] = {  10,   0, -13,  70, -13,  85, -13,  95, 107,  96, 108
                                        ,  97, 110,  98, 111,  99, 112, 100, 113, 104, 109};
static const TableType act0193[] = {   3,  58,  16,  69, 247, 102, 248};
static const TableType act0195[] = {   8,   0, -28,  13, 146,  33, 144,  57, 148,  62, 147
                                        ,  82, -28,  83, -28,  84, -28};
static const TableType act0197[] = {   2,  85, 219, 103, -23};
static const TableType act0203[] = {   3,  93, 200,  94, 201, 103, 256};
static const TableType act0204[] = {  20,  12,-108,  37,-108,  43,-108,  47,-108,  85,-108
                                        ,  87,-108,  88,-108,  89,-108,  90,-108,  91,-108
                                        ,  92,-108,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 101,-108, 103, 172, 104, 109};
static const TableType act0208[] = {   3,  12, 259,  37, 260,  47, 261};
static const TableType act0211[] = {   2,  52, 264, 101, 265};
static const TableType act0220[] = {  17,   0, -57,  13, -57,  29, -57,  33, -57,  35, -57
                                        ,  36, -57,  37, -57,  55, -57,  57, -57,  60, -57
                                        ,  62, -57,  70, 102,  82, -57,  83, -57,  84, -57
                                        ,  85, 269, 103, -57};
static const TableType act0222[] = {  22,   0, -51,  13, -51,  29, -51,  33, -51,  35, -51
                                        ,  36, -51,  37, -51,  41, -51,  44, -51,  46, -51
                                        ,  54, -51,  55, -51,  57, -51,  60, -51,  62, -51
                                        ,  70, -51,  82, -51,  83, -51,  84, -51,  85, -51
                                        , 103, -51, 105,  26};
static const TableType act0224[] = {  23,  12,-133,  37,-133,  43,-133,  47,-133,  82, -28
                                        ,  83, -28,  84, -28,  85,-133,  87,-133,  88,-133
                                        ,  89,-133,  90,-133,  91,-133,  92,-133,  95,-133
                                        ,  96,-133,  97,-133,  98,-133,  99,-133, 100,-133
                                        , 101,-133, 103, -28, 104,-133};
static const TableType act0232[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103,-144, 104, 109};
static const TableType act0233[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103, 278, 104, 109};
static const TableType act0235[] = {   2,  56, 279, 105,  26};
static const TableType act0236[] = {   3,  24,-177,  85,-177, 101, 282};
static const TableType act0237[] = {   5,  71, 283,  72, 284,  76, 286,  77, 287,  78, 285};
static const TableType act0249[] = {   4,   0, -18,  82,  22,  83,  24,  84,  23};
static const TableType act0254[] = {  17,   0, -82,  13, -82,  29, -82,  33, -82,  35, -82
                                        ,  36, -82,  37, -82,  55, -82,  57, -82,  60, -82
                                        ,  62, -82,  82, -82,  83, -82,  84, -82,  93, -82
                                        ,  94, 201, 103, -82};
static const TableType act0263[] = {  24,   0, -94,  13, -94,  29, -94,  33, -94,  35, -94
                                        ,  36, -94,  37, -94,  55, -94,  57, -94,  60, -94
                                        ,  62, -94,  82, -94,  83, -94,  84, -94,  93, -94
                                        ,  94, -94,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 103, -94, 104, 109};
static const TableType act0266[] = {   4,  82,  22,  83,  24,  84,  23, 103, 301};
static const TableType act0267[] = {  35,   0,-107,  12,-107,  13,-107,  29,-107,  33,-107
                                        ,  35,-107,  36,-107,  37,-107,  43,-107,  47,-107
                                        ,  55,-107,  57,-107,  60,-107,  62,-107,  82,-107
                                        ,  83,-107,  84,-107,  85,-107,  87,-107,  88,-107
                                        ,  89,-107,  90,-107,  91,-107,  92,-107,  93,-107
                                        ,  94,-107,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 101,-107, 103,-107, 104, 109};
static const TableType act0268[] = {  15,   0, -61,  13, -61,  29, -61,  33, -61,  35, 303
                                        ,  36, -61,  37, -61,  55, -61,  57, -61,  60, -61
                                        ,  62, -61,  82, -61,  83, -61,  84, -61, 103, -61};
static const TableType act0271[] = {   3,  41, 306,  44, -54,  46, 307};
static const TableType act0273[] = {   8,  33, 309,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0274[] = {   8,  85, 310,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0275[] = {   8,  85, 311,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0276[] = {   8,  85, 312,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0277[] = {   8,  85, 313,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0281[] = {   2,  24, 316,  85,-179};
static const TableType act0283[] = {   5,  24,-161,  85,-161, 101,-161, 102, 318, 103,-161};
static const TableType act0284[] = {   5,  24,-162,  85,-162, 101,-162, 102, 319, 103,-162};
static const TableType act0291[] = {   4,  82,  22,  83,  24,  84,  23, 103, 325};
static const TableType act0296[] = {  24,   0, -95,  13, -95,  29, -95,  33, -95,  35, -95
                                        ,  36, -95,  37, -95,  55, -95,  57, -95,  60, -95
                                        ,  62, -95,  82, -95,  83, -95,  84, -95,  93, -95
                                        ,  94, -95,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 103, -95, 104, 109};
static const TableType act0298[] = {   4,  82,  22,  83,  24,  84,  23, 103, -98};
static const TableType act0299[] = {   2,  85, 219, 103, -99};
static const TableType act0302[] = {  14,   0, -59,  13, -59,  29, -59,  33, -59,  36, 331
                                        ,  37, -59,  55, -59,  57, -59,  60, -59,  62, -59
                                        ,  82, -59,  83, -59,  84, -59, 103, -59};
static const TableType act0316[] = {   7,   1,  84,   2,  83,   3,  85,   4,  86,   5,  87
                                        ,  95, 343,  96, 344};
static const TableType act0321[] = {   2,  85, 352, 103, 351};
static const TableType act0323[] = {   4,  11, 354,  26, 355,  85, -68, 103, -68};
static const TableType act0330[] = {  13,   0, -63,  13, -63,  29, -63,  33, -63,  37, -63
                                        ,  55, 361,  57, -63,  60, -63,  62, -63,  82, -63
                                        ,  83, -63,  84, -63, 103, -63};
static const TableType act0334[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103, 365, 104, 109};
static const TableType act0335[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103, 366, 104, 109};
static const TableType act0336[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103, 367, 104, 109};
static const TableType act0337[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103, 368, 104, 109};
static const TableType act0338[] = {   8,  85, 369,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0360[] = {  12,   0, -71,  13, 146,  29, -71,  33, 144,  37, -71
                                        ,  57, 148,  60, -71,  62, 147,  82, -71,  83, -71
                                        ,  84, -71, 103, -71};
static const TableType act0362[] = {  15,   0, -60,  13, -60,  29, -60,  33, -60,  37, -60
                                        ,  55, -60,  57, -60,  60, -60,  62, -60,  82, -60
                                        ,  83, -60,  84, -60,  93, 200,  94, 201, 103, -60};
static const TableType act0363[] = {  15,   0, -62,  13, -62,  29, -62,  33, -62,  36, -62
                                        ,  37, -62,  55, -62,  57, -62,  60, -62,  62, -62
                                        ,  82, -62,  83, -62,  84, -62,  85, 219, 103, -62};
static const TableType act0370[] = {   2,  85, 352, 103, 381};
static const TableType act0377[] = {   8,   0, -77,  29, 386,  37, 383,  60, 385,  82, -77
                                        ,  83, -77,  84, -77, 103, -77};
static const TableType act0380[] = {   8,  85, 391,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0383[] = {   2,  29, 386,  60, 385};
static const TableType act0387[] = {  13,   0, -64,  13, -64,  29, -64,  33, -64,  37, -64
                                        ,  57, -64,  60, -64,  62, -64,  82, -64,  83, -64
                                        ,  84, -64,  85, 395, 103, -64};
static const TableType act0389[] = {  22,   0, -68,  11, 354,  13, -68,  26, 355,  29, -68
                                        ,  33, -68,  37, -68,  57, -68,  60, -68,  62, -68
                                        ,  82, -68,  83, -68,  84, -68,  85, -68,  95, 107
                                        ,  96, 108,  97, 110,  98, 111,  99, 112, 100, 113
                                        , 103, -68, 104, 109};
static const TableType act0390[] = {   3,  93, 200,  94, 201, 103, 397};
static const TableType act0398[] = {   8,  85, 401,  95, 107,  96, 108,  97, 110,  98, 111
                                        ,  99, 112, 100, 113, 104, 109};
static const TableType act0402[] = {   8,  95, 107,  96, 108,  97, 110,  98, 111,  99, 112
                                        , 100, 113, 103, 403, 104, 109};

// Total size of uncompressed actNNNN tables:6076 bytes.

#define act0021 act0000 /* Saved  44 bytes */
#define act0023 act0014 /* Saved  12 bytes */
#define act0024 act0014 /* Saved  12 bytes */
#define act0041 act0014 /* Saved  12 bytes */
#define act0056 act0055 /* Saved  92 bytes */
#define act0104 act0030 /* Saved 104 bytes */
#define act0108 act0107 /* Saved 100 bytes */
#define act0109 act0107 /* Saved 100 bytes */
#define act0110 act0107 /* Saved 100 bytes */
#define act0111 act0107 /* Saved 100 bytes */
#define act0112 act0107 /* Saved 100 bytes */
#define act0113 act0107 /* Saved 100 bytes */
#define act0122 act0070 /* Saved 104 bytes */
#define act0123 act0107 /* Saved 100 bytes */
#define act0124 act0107 /* Saved 100 bytes */
#define act0125 act0107 /* Saved 100 bytes */
#define act0126 act0107 /* Saved 100 bytes */
#define act0127 act0107 /* Saved 100 bytes */
#define act0130 act0014 /* Saved  12 bytes */
#define act0138 act0107 /* Saved 100 bytes */
#define act0181 act0107 /* Saved 100 bytes */
#define act0183 act0107 /* Saved 100 bytes */
#define act0200 act0102 /* Saved 108 bytes */
#define act0201 act0102 /* Saved 108 bytes */
#define act0205 act0153 /* Saved 112 bytes */
#define act0206 act0107 /* Saved 100 bytes */
#define act0207 act0107 /* Saved 100 bytes */
#define act0210 act0107 /* Saved 100 bytes */
#define act0218 act0014 /* Saved  12 bytes */
#define act0219 act0107 /* Saved 100 bytes */
#define act0223 act0158 /* Saved  12 bytes */
#define act0225 act0189 /* Saved  56 bytes */
#define act0226 act0107 /* Saved 100 bytes */
#define act0227 act0107 /* Saved 100 bytes */
#define act0228 act0107 /* Saved 100 bytes */
#define act0229 act0107 /* Saved 100 bytes */
#define act0230 act0107 /* Saved 100 bytes */
#define act0248 act0014 /* Saved  12 bytes */
#define act0252 act0101 /* Saved  24 bytes */
#define act0259 act0107 /* Saved 100 bytes */
#define act0261 act0107 /* Saved 100 bytes */
#define act0262 act0070 /* Saved 104 bytes */
#define act0269 act0158 /* Saved  12 bytes */
#define act0290 act0142 /* Saved 104 bytes */
#define act0293 act0107 /* Saved 100 bytes */
#define act0295 act0070 /* Saved 104 bytes */
#define act0309 act0107 /* Saved 100 bytes */
#define act0310 act0107 /* Saved 100 bytes */
#define act0311 act0107 /* Saved 100 bytes */
#define act0312 act0107 /* Saved 100 bytes */
#define act0313 act0107 /* Saved 100 bytes */
#define act0325 act0195 /* Saved  36 bytes */
#define act0327 act0107 /* Saved 100 bytes */
#define act0331 act0102 /* Saved 108 bytes */
#define act0332 act0107 /* Saved 100 bytes */
#define act0333 act0158 /* Saved  12 bytes */
#define act0356 act0101 /* Saved  24 bytes */
#define act0369 act0107 /* Saved 100 bytes */
#define act0378 act0107 /* Saved 100 bytes */
#define act0379 act0102 /* Saved 108 bytes */
#define act0391 act0107 /* Saved 100 bytes */
#define act0395 act0107 /* Saved 100 bytes */
#define act0401 act0107 /* Saved 100 bytes */

static const void *action[404] = {
   act0000,act0001,act0002,act0003,act0004,act0005,act0006,act0007,act0008,act0009
  ,act0010,act0011,act0012,act0013,act0014,act0015,act0016,act0017,act0018,act0019
  ,act0020,act0021,act0022,act0023,act0024,act0025,act0026,act0027,act0028,act0029
  ,act0030,act0031,act0032,act0033,act0034,act0035,act0036,act0037,act0038,act0039
  ,act0040,act0041,act0042,act0043,act0044,act0045,act0046,act0047,act0048,act0049
  ,act0050,act0051,act0052,act0053,act0054,act0055,act0056,act0057,act0058,act0059
  ,act0060,act0061,act0062,act0063,act0064,act0065,act0066,act0067,act0068,act0069
  ,act0070,act0071,act0072,act0073,act0074,act0075,act0076,act0077,act0078,act0079
  ,act0080,act0081,act0082,act0083,act0084,act0085,act0086,act0087,act0088,act0089
  ,act0090,act0091,act0092,act0093,act0094,act0095,act0096,act0097,act0098,act0099
  ,act0100,act0101,act0102,act0103,act0104,act0105,act0106,act0107,act0108,act0109
  ,act0110,act0111,act0112,act0113,act0114,act0115,act0116,act0117,act0118,act0119
  ,act0120,act0121,act0122,act0123,act0124,act0125,act0126,act0127,act0128,act0129
  ,act0130,act0131,act0132,act0133,act0134,act0135,act0136,act0137,act0138,act0139
  ,act0140,act0141,act0142,act0143,act0144,act0145,act0146,act0147,act0148,act0149
  ,act0150,act0151,act0152,act0153,act0154,act0155,act0156,act0157,act0158,act0159
  ,act0160,act0161,act0162,act0163,act0164,act0165,act0166,act0167,act0168,act0169
  ,act0170,act0171,act0172,act0173,act0174,act0175,act0176,act0177,act0178,act0179
  ,act0180,act0181,act0182,act0183,act0184,act0185,act0186,act0187,act0188,act0189
  ,act0190,act0191,act0192,act0193,act0194,act0195,act0196,act0197,act0198,act0199
  ,act0200,act0201,act0202,act0203,act0204,act0205,act0206,act0207,act0208,act0209
  ,act0210,act0211,act0212,act0213,act0214,act0215,act0216,act0217,act0218,act0219
  ,act0220,act0221,act0222,act0223,act0224,act0225,act0226,act0227,act0228,act0229
  ,act0230,act0231,act0232,act0233,act0234,act0235,act0236,act0237,act0238,act0239
  ,act0240,act0241,act0242,act0243,act0244,act0245,act0246,act0247,act0248,act0249
  ,act0250,act0251,act0252,act0253,act0254,act0255,act0256,act0257,act0258,act0259
  ,act0260,act0261,act0262,act0263,act0264,act0265,act0266,act0267,act0268,act0269
  ,act0270,act0271,act0272,act0273,act0274,act0275,act0276,act0277,act0278,act0279
  ,act0280,act0281,act0282,act0283,act0284,act0285,act0286,act0287,act0288,act0289
  ,act0290,act0291,act0292,act0293,act0294,act0295,act0296,act0297,act0298,act0299
  ,act0300,act0301,act0302,act0303,act0304,act0305,act0306,act0307,act0308,act0309
  ,act0310,act0311,act0312,act0313,act0314,act0315,act0316,act0317,act0318,act0319
  ,act0320,act0321,act0322,act0323,act0324,act0325,act0326,act0327,act0328,act0329
  ,act0330,act0331,act0332,act0333,act0334,act0335,act0336,act0337,act0338,act0339
  ,act0340,act0341,act0342,act0343,act0344,act0345,act0346,act0347,act0348,act0349
  ,act0350,act0351,act0352,act0353,act0354,act0355,act0356,act0357,act0358,act0359
  ,act0360,act0361,act0362,act0363,act0364,act0365,act0366,act0367,act0368,act0369
  ,act0370,act0371,act0372,act0373,act0374,act0375,act0376,act0377,act0378,act0379
  ,act0380,act0381,act0382,act0383,act0384,act0385,act0386,act0387,act0388,act0389
  ,act0390,act0391,act0392,act0393,act0394,act0395,act0396,act0397,act0398,act0399
  ,act0400,act0401,act0402,act0403
}; // Size of table:3232 bytes.

/****************************************************************************\
* The successor matrix is used when the parser has reduced by prod A -> alfa *
* Used by LRParser to find newstate = successor(state,A).                    *
*                                                                            *
*                  succ0007[] = { 3, 5,3 , 6,2, 8,5 };                       *
*   Current state-------+         |  | |                                     *
*   Number of pairs in list ------+  | |                                     *
*   NonTerminal A--------------------+ |                                     *
*   Go to this state-------------------+                                     *
\****************************************************************************/
static const TableType succ0000[] = { 11, 107,   1, 108,   2, 109,   3, 110,   4, 111,   5
                                        , 112,   6, 113,   7, 114,   8, 115,   9, 116,  10
                                        , 127,  15};
static const TableType succ0011[] = {  1, 117,  25};
static const TableType succ0014[] = {  2, 111,  29, 127,  15};
static const TableType succ0016[] = {  1, 128,  30};
static const TableType succ0017[] = {  1, 117,  33};
static const TableType succ0018[] = {  1, 117,  34};
static const TableType succ0019[] = {  1, 167,  36};
static const TableType succ0021[] = { 11, 107,  40, 108,   2, 109,   3, 110,   4, 111,   5
                                        , 112,   6, 113,   7, 114,   8, 115,   9, 116,  10
                                        , 127,  15};
static const TableType succ0022[] = {  1, 126,  41};
static const TableType succ0023[] = {  2, 111,  43, 127,  15};
static const TableType succ0024[] = {  2, 111,  44, 127,  15};
static const TableType succ0027[] = {  1, 117,  46};
static const TableType succ0028[] = {  1, 117,  47};
static const TableType succ0030[] = { 15, 117,  52, 121,  53, 129,  49, 136,  50, 138,  62
                                        , 139,  54, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0035[] = {  1, 117,  90};
static const TableType succ0038[] = {  1, 117,  92};
static const TableType succ0039[] = {  1, 117,  93};
static const TableType succ0041[] = {  2, 111,  94, 127,  15};
static const TableType succ0045[] = {  3, 117,  97, 118,  95, 120,  96};
static const TableType succ0046[] = {  2, 111, 100, 127,  15};
static const TableType succ0047[] = {  1, 119, 101};
static const TableType succ0049[] = {  1, 130, 103};
static const TableType succ0054[] = {  2, 139, 115, 140, 114};
static const TableType succ0055[] = { 12, 117, 118, 138,  62, 139,  54, 154, 117, 155,  58
                                        , 156,  59, 157,  60, 158,  61, 159,  63, 160,  64
                                        , 161,  65, 164,  77};
static const TableType succ0056[] = { 12, 117, 118, 138,  62, 139,  54, 154, 119, 155,  58
                                        , 156,  59, 157,  60, 158,  61, 159,  63, 160,  64
                                        , 161,  65, 164,  77};
static const TableType succ0070[] = { 15, 111, 121, 117, 118, 121, 120, 127,  15, 138,  62
                                        , 139,  54, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0089[] = {  3, 137, 131, 138, 132, 139,  54};
static const TableType succ0091[] = {  1, 117, 135};
static const TableType succ0095[] = {  1, 119, 136};
static const TableType succ0098[] = {  4, 111, 140, 117, 141, 122, 139, 127,  15};
static const TableType succ0101[] = {  2, 124, 143, 147, 145};
static const TableType succ0102[] = { 18, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 143, 149, 149, 151, 150, 152, 151, 154, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0104[] = { 14, 117,  52, 121,  53, 136, 159, 138,  62, 139,  54
                                        , 154,  57, 155,  58, 156,  59, 157,  60, 158,  61
                                        , 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0105[] = {  3, 137, 160, 138, 132, 139,  54};
static const TableType succ0106[] = {  1, 117, 162};
static const TableType succ0107[] = { 13, 117, 118, 121, 163, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0108[] = { 13, 117, 118, 121, 164, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0109[] = { 13, 117, 118, 121, 165, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0110[] = { 13, 117, 118, 121, 166, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0111[] = { 13, 117, 118, 121, 167, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0112[] = { 13, 117, 118, 121, 168, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0113[] = { 13, 117, 118, 121, 169, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0116[] = {  1, 139, 170};
static const TableType succ0122[] = { 15, 111, 174, 117, 118, 121, 120, 127,  15, 138,  62
                                        , 139,  54, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0123[] = { 13, 117, 118, 121, 175, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0124[] = { 13, 117, 118, 121, 176, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0125[] = { 13, 117, 118, 121, 177, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0126[] = { 13, 117, 118, 121, 178, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0127[] = { 13, 117, 118, 121, 179, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0128[] = {  2, 128, 181, 163, 180};
static const TableType succ0129[] = {  1, 128, 183};
static const TableType succ0130[] = {  2, 111, 184, 127,  15};
static const TableType succ0133[] = {  1, 117, 186};
static const TableType succ0134[] = {  3, 117, 189, 165, 187, 169, 188};
static const TableType succ0137[] = {  2, 117,  97, 120, 191};
static const TableType succ0138[] = { 13, 117, 118, 121, 192, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0142[] = { 15, 117, 118, 121, 157, 123, 196, 125, 197, 138,  62
                                        , 139,  54, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0144[] = {  1, 147, 198};
static const TableType succ0150[] = { 17, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 149, 202, 150, 152, 151, 154, 154,  57, 155,  58
                                        , 156,  59, 157,  60, 158,  61, 159,  63, 160,  64
                                        , 161,  65, 164,  77};
static const TableType succ0153[] = { 20, 111, 121, 117, 118, 121, 204, 125, 156, 127,  15
                                        , 138,  62, 139,  54, 143, 203, 149, 151, 150, 152
                                        , 151, 154, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0154[] = {  1, 152, 206};
static const TableType succ0158[] = {  3, 117, 222, 131, 220, 141, 221};
static const TableType succ0181[] = { 13, 117, 118, 121, 232, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0183[] = { 13, 117, 118, 121, 233, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0185[] = {  2, 138, 234, 139,  54};
static const TableType succ0189[] = {  2, 162, 236, 172, 237};
static const TableType succ0190[] = {  1, 117, 246};
static const TableType succ0193[] = {  2, 111, 249, 127,  15};
static const TableType succ0194[] = {  1, 117, 250};
static const TableType succ0195[] = {  2, 124, 251, 147, 145};
static const TableType succ0200[] = { 18, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 143, 254, 149, 151, 150, 152, 151, 154, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0201[] = { 18, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 143, 255, 149, 151, 150, 152, 151, 154, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0205[] = { 20, 111, 174, 117, 118, 121, 204, 125, 156, 127,  15
                                        , 138,  62, 139,  54, 143, 203, 149, 151, 150, 152
                                        , 151, 154, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0206[] = { 15, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 151, 257, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0207[] = { 15, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 151, 258, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0210[] = { 13, 117, 118, 121, 263, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0218[] = {  2, 111, 266, 127,  15};
static const TableType succ0219[] = { 13, 117, 118, 121, 267, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0220[] = {  1, 119, 268};
static const TableType succ0222[] = {  1, 117, 270};
static const TableType succ0223[] = {  2, 117, 222, 141, 271};
static const TableType succ0225[] = {  2, 162, 272, 172, 237};
static const TableType succ0226[] = { 13, 117, 118, 121, 273, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0227[] = { 13, 117, 118, 121, 274, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0228[] = { 13, 117, 118, 121, 275, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0229[] = { 13, 117, 118, 121, 276, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0230[] = { 13, 117, 118, 121, 277, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0235[] = {  2, 117, 189, 169, 280};
static const TableType succ0236[] = {  1, 170, 281};
static const TableType succ0248[] = {  2, 111, 291, 127,  15};
static const TableType succ0252[] = {  2, 124, 292, 147, 145};
static const TableType succ0259[] = { 15, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 151, 294, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0261[] = { 13, 117, 118, 121, 296, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0262[] = { 17, 111, 298, 117, 118, 121, 157, 125, 299, 127,  15
                                        , 138,  62, 139,  54, 153, 297, 154,  57, 155,  58
                                        , 156,  59, 157,  60, 158,  61, 159,  63, 160,  64
                                        , 161,  65, 164,  77};
static const TableType succ0268[] = {  1, 132, 302};
static const TableType succ0269[] = {  2, 117, 222, 141, 304};
static const TableType succ0271[] = {  1, 142, 305};
static const TableType succ0281[] = {  1, 171, 315};
static const TableType succ0288[] = {  1, 155, 320};
static const TableType succ0289[] = {  3, 117, 323, 166, 321, 168, 322};
static const TableType succ0290[] = { 15, 117, 118, 121, 157, 123, 324, 125, 197, 138,  62
                                        , 139,  54, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0293[] = { 15, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 151, 326, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0295[] = { 17, 111, 298, 117, 118, 121, 157, 125, 299, 127,  15
                                        , 138,  62, 139,  54, 153, 328, 154,  57, 155,  58
                                        , 156,  59, 157,  60, 158,  61, 159,  63, 160,  64
                                        , 161,  65, 164,  77};
static const TableType succ0302[] = {  1, 133, 330};
static const TableType succ0309[] = { 13, 117, 118, 121, 334, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0310[] = { 13, 117, 118, 121, 335, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0311[] = { 13, 117, 118, 121, 336, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0312[] = { 13, 117, 118, 121, 337, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0313[] = { 13, 117, 118, 121, 338, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0316[] = {  6, 155, 342, 156, 345, 157, 346, 158, 347, 161, 341
                                        , 173, 340};
static const TableType succ0318[] = {  1, 155, 348};
static const TableType succ0319[] = {  1, 155, 349};
static const TableType succ0323[] = {  1, 146, 353};
static const TableType succ0325[] = {  2, 124, 357, 147, 145};
static const TableType succ0327[] = { 15, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 151, 358, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0330[] = {  1, 134, 360};
static const TableType succ0331[] = { 18, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 143, 362, 149, 151, 150, 152, 151, 154, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0332[] = { 14, 117, 118, 121, 157, 125, 363, 138,  62, 139,  54
                                        , 154,  57, 155,  58, 156,  59, 157,  60, 158,  61
                                        , 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0333[] = {  2, 117, 222, 141, 364};
static const TableType succ0339[] = {  3, 117, 323, 166, 370, 168, 322};
static const TableType succ0343[] = {  1, 155, 371};
static const TableType succ0344[] = {  1, 155, 372};
static const TableType succ0352[] = {  2, 117, 323, 168, 375};
static const TableType succ0356[] = {  2, 124, 376, 147, 145};
static const TableType succ0360[] = {  2, 124, 377, 147, 145};
static const TableType succ0369[] = { 13, 117, 118, 121, 380, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0377[] = {  2, 135, 382, 148, 384};
static const TableType succ0378[] = { 15, 117, 118, 121, 389, 138,  62, 139,  54, 144, 387
                                        , 145, 388, 154,  57, 155,  58, 156,  59, 157,  60
                                        , 158,  61, 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0379[] = { 18, 117, 118, 121, 157, 125, 156, 138,  62, 139,  54
                                        , 143, 390, 149, 151, 150, 152, 151, 154, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0383[] = {  1, 148, 393};
static const TableType succ0389[] = {  1, 146, 396};
static const TableType succ0391[] = { 13, 117, 118, 121, 398, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};
static const TableType succ0395[] = { 14, 117, 118, 121, 389, 138,  62, 139,  54, 145, 400
                                        , 154,  57, 155,  58, 156,  59, 157,  60, 158,  61
                                        , 159,  63, 160,  64, 161,  65, 164,  77};
static const TableType succ0401[] = { 13, 117, 118, 121, 402, 138,  62, 139,  54, 154,  57
                                        , 155,  58, 156,  59, 157,  60, 158,  61, 159,  63
                                        , 160,  64, 161,  65, 164,  77};

// Total size of all succNNNN tables:4380 bytes.

#define succ0171 succ0106  /* Saved   8 bytes */

static const TableType *successor[404] = {
   succ0000,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,succ0011,NULL    ,NULL    ,succ0014,NULL    ,succ0016,succ0017,succ0018,succ0019
  ,NULL    ,succ0021,succ0022,succ0023,succ0024,NULL    ,NULL    ,succ0027,succ0028,NULL    
  ,succ0030,NULL    ,NULL    ,NULL    ,NULL    ,succ0035,NULL    ,NULL    ,succ0038,succ0039
  ,NULL    ,succ0041,NULL    ,NULL    ,NULL    ,succ0045,succ0046,succ0047,NULL    ,succ0049
  ,NULL    ,NULL    ,NULL    ,NULL    ,succ0054,succ0055,succ0056,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,succ0070,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0089
  ,NULL    ,succ0091,NULL    ,NULL    ,NULL    ,succ0095,NULL    ,NULL    ,succ0098,NULL    
  ,NULL    ,succ0101,succ0102,NULL    ,succ0104,succ0105,succ0106,succ0107,succ0108,succ0109
  ,succ0110,succ0111,succ0112,succ0113,NULL    ,NULL    ,succ0116,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0122,succ0123,succ0124,succ0125,succ0126,succ0127,succ0128,succ0129
  ,succ0130,NULL    ,NULL    ,succ0133,succ0134,NULL    ,NULL    ,succ0137,succ0138,NULL    
  ,NULL    ,NULL    ,succ0142,NULL    ,succ0144,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,succ0150,NULL    ,NULL    ,succ0153,succ0154,NULL    ,NULL    ,NULL    ,succ0158,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,succ0171,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,succ0181,NULL    ,succ0183,NULL    ,succ0185,NULL    ,NULL    ,NULL    ,succ0189
  ,succ0190,NULL    ,NULL    ,succ0193,succ0194,succ0195,NULL    ,NULL    ,NULL    ,NULL    
  ,succ0200,succ0201,NULL    ,NULL    ,NULL    ,succ0205,succ0206,succ0207,NULL    ,NULL    
  ,succ0210,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0218,succ0219
  ,succ0220,NULL    ,succ0222,succ0223,NULL    ,succ0225,succ0226,succ0227,succ0228,succ0229
  ,succ0230,NULL    ,NULL    ,NULL    ,NULL    ,succ0235,succ0236,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0248,NULL    
  ,NULL    ,NULL    ,succ0252,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0259
  ,NULL    ,succ0261,succ0262,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0268,succ0269
  ,NULL    ,succ0271,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,succ0281,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0288,succ0289
  ,succ0290,NULL    ,NULL    ,succ0293,NULL    ,succ0295,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0302,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0309
  ,succ0310,succ0311,succ0312,succ0313,NULL    ,NULL    ,succ0316,NULL    ,succ0318,succ0319
  ,NULL    ,NULL    ,NULL    ,succ0323,NULL    ,succ0325,NULL    ,succ0327,NULL    ,NULL    
  ,succ0330,succ0331,succ0332,succ0333,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0339
  ,NULL    ,NULL    ,NULL    ,succ0343,succ0344,NULL    ,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,NULL    ,succ0352,NULL    ,NULL    ,NULL    ,succ0356,NULL    ,NULL    ,NULL    
  ,succ0360,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0369
  ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0377,succ0378,succ0379
  ,NULL    ,NULL    ,NULL    ,succ0383,NULL    ,NULL    ,NULL    ,NULL    ,NULL    ,succ0389
  ,NULL    ,succ0391,NULL    ,NULL    ,NULL    ,succ0395,NULL    ,NULL    ,NULL    ,NULL    
  ,NULL    ,succ0401,NULL    ,NULL    
}; // Size of pointertable:3232 bytes.

/****************************************************************************\
* The productionLength[] array is indexed by production number and holds     *
* the number of symbols on the right side of each production.                *
\****************************************************************************/
static const unsigned char productionLength[199] = {
  /*   0 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /*  10 */    5,   3,   1,   3,  11,   8,  10,   7,   7,   4,
  /*  20 */    1,   3,   0,   1,   5,   4,   3,   3,   3,   1,
  /*  30 */   12,   0,   1,   0,   1,   1,   3,   1,   1,   3,
  /*  40 */    1,   0,   2,   3,   1,   2,   0,   1,   2,   3,
  /*  50 */    1,   1,   2,   8,   0,   1,   1,   0,   2,   0,
  /*  60 */    2,   0,   3,   0,   3,   3,   1,   2,   0,   1,
  /*  70 */    1,   0,   3,   2,   1,   1,   1,   0,   3,   2,
  /*  80 */    1,   1,   3,   3,   2,   1,   1,   3,   3,   4,
  /*  90 */    5,   6,   5,   6,   3,   4,   3,   4,   1,   1,
  /* 100 */    1,   1,   1,   1,   1,   1,   1,   3,   1,   3,
  /* 110 */    3,   3,   3,   3,   3,   3,   2,   2,   1,   1,
  /* 120 */    1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
  /* 130 */    1,   3,   6,   3,   8,   8,   8,   8,  14,   4,
  /* 140 */    5,   1,   1,   1,   2,   1,   1,   3,   5,   4,
  /* 150 */    5,  12,   9,   0,   1,   3,   1,   2,   3,   1,
  /* 160 */    4,   2,   2,   5,   5,   2,   2,   2,   1,   1,
  /* 170 */    1,   1,   1,   4,   0,   1,   1,   0,   2,   0,
  /* 180 */    2,   1,   1,   2,   2,   1,   1,   1,   3,   3,
  /* 190 */    2,   1,   1,   1,   1,   1,   1,   1,   1
}; // Size of table:200 bytes.

/****************************************************************************\
* The leftSide[] array is indexed by production number, and holds the        *
* nonTerminal symbol on the left side of each production.                    *
\****************************************************************************/
static const TableType leftSide[199] = {
  /*   0 */  106, 107, 107, 107, 107, 107, 107, 107, 107, 107,
  /*  10 */  108, 118, 118, 120, 109, 109, 109, 109, 109, 109,
  /*  20 */  122, 122, 123, 123, 110, 111, 111, 111, 111, 111,
  /*  30 */  127, 126, 126, 128, 128, 128, 129, 129, 136, 136,
  /*  40 */  136, 130, 130, 137, 137, 138, 140, 140, 140, 131,
  /*  50 */  131, 141, 141, 141, 142, 142, 142, 119, 119, 133,
  /*  60 */  133, 132, 132, 134, 134, 144, 144, 145, 146, 146,
  /*  70 */  146, 124, 124, 124, 147, 147, 147, 135, 135, 135,
  /*  80 */  148, 148, 143, 143, 143, 143, 149, 149, 150, 150,
  /*  90 */  150, 150, 150, 150, 150, 150, 150, 150, 153, 153,
  /* 100 */  151, 152, 152, 152, 152, 152, 152, 125, 125, 121,
  /* 110 */  121, 121, 121, 121, 121, 121, 121, 121, 121, 154,
  /* 120 */  154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
  /* 130 */  154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
  /* 140 */  154, 164, 164, 164, 163, 163, 159, 159, 112, 113,
  /* 150 */  114, 114, 114, 167, 167, 166, 166, 168, 165, 165,
  /* 160 */  169, 162, 162, 162, 162, 162, 162, 162, 162, 162,
  /* 170 */  162, 162, 162, 162, 172, 172, 172, 170, 170, 171,
  /* 180 */  171, 173, 173, 173, 173, 173, 173, 173, 115, 115,
  /* 190 */  116, 117, 139, 160, 155, 161, 156, 157, 158
}; // Size of table:400 bytes.

/****************************************************************************\
* The rightSide[] matrix is indexed by production number and holds           *
* the right side symbols of each production.                                 *
* Compressed and only used for debugging.                                    *
\****************************************************************************/
static const TableType rightSideTable[472] = {
  /*   0 */  107
  /*   1 */ ,108
  /*   2 */ ,109
  /*   3 */ ,110
  /*   4 */ ,111
  /*   5 */ ,112
  /*   6 */ ,113
  /*   7 */ ,114
  /*   8 */ ,115
  /*   9 */ ,116
  /*  10 */ , 68,117, 59,118,119
  /*  11 */ ,118, 85,120
  /*  12 */ ,120
  /*  13 */ ,117, 87,121
  /*  14 */ , 39, 42,117,102,122,103, 69,102,123,103,124
  /*  15 */ , 39, 42,117, 69,102,123,103,124
  /*  16 */ , 39, 42,117,102,122,103,102,111,103,124
  /*  17 */ , 39, 42,117,102,111,103,124
  /*  18 */ , 39, 42,117,102,122,103,111
  /*  19 */ , 39, 42,117,111
  /*  20 */ ,117
  /*  21 */ ,122, 85,117
  /*  23 */ ,125
  /*  24 */ , 25, 34,117,119,124
  /*  25 */ ,111, 82,126,111
  /*  26 */ ,111, 84,111
  /*  27 */ ,111, 83,111
  /*  28 */ ,102,111,103
  /*  29 */ ,127
  /*  30 */ , 58,128,129,130, 34,131,119,132,133,134,124,135
  /*  32 */ ,  9
  /*  34 */ ,  9
  /*  35 */ , 27
  /*  36 */ ,129, 85,136
  /*  37 */ ,136
  /*  38 */ , 97
  /*  39 */ ,117, 86, 97
  /*  40 */ ,121
  /*  42 */ , 42,137
  /*  43 */ ,137, 85,138
  /*  44 */ ,138
  /*  45 */ ,139,140
  /*  47 */ ,139
  /*  48 */ , 40,139
  /*  49 */ ,131, 85,141
  /*  50 */ ,141
  /*  51 */ ,117
  /*  52 */ ,117,117
  /*  53 */ ,102,141,142, 44,141, 54,143,103
  /*  55 */ , 41
  /*  56 */ , 46
  /*  58 */ , 70,143
  /*  60 */ , 36,143
  /*  62 */ , 35, 14,125
  /*  64 */ , 55, 14,144
  /*  65 */ ,144, 85,145
  /*  66 */ ,145
  /*  67 */ ,121,146
  /*  69 */ , 11
  /*  70 */ , 26
  /*  72 */ , 33,147,  8
  /*  73 */ ,147,  8
  /*  74 */ , 13
  /*  75 */ , 62
  /*  76 */ , 57
  /*  78 */ , 37,148, 50
  /*  79 */ ,148, 50
  /*  80 */ , 60
  /*  81 */ , 29
  /*  82 */ ,143, 93,143
  /*  83 */ ,143, 94,143
  /*  84 */ ,101,149
  /*  85 */ ,149
  /*  86 */ ,150
  /*  87 */ ,102,143,103
  /*  88 */ ,151,152,151
  /*  89 */ , 30,102,111,103
  /*  90 */ ,151, 12,151, 94,151
  /*  91 */ ,151,101, 12,151, 94,151
  /*  92 */ ,151, 37,102,153,103
  /*  93 */ ,151,101, 37,102,153,103
  /*  94 */ ,151, 47,121
  /*  95 */ ,151,101, 47,121
  /*  96 */ ,151, 43, 52
  /*  97 */ ,151, 43,101, 52
  /*  98 */ ,111
  /*  99 */ ,125
  /* 100 */ ,125
  /* 101 */ , 89
  /* 102 */ , 90
  /* 103 */ , 91
  /* 104 */ , 92
  /* 105 */ , 87
  /* 106 */ , 88
  /* 107 */ ,125, 85,121
  /* 108 */ ,121
  /* 109 */ ,121, 95,121
  /* 110 */ ,121, 96,121
  /* 111 */ ,121,104,121
  /* 112 */ ,121, 97,121
  /* 113 */ ,121, 98,121
  /* 114 */ ,121, 99,121
  /* 115 */ ,121,100,121
  /* 116 */ , 96,154
  /* 117 */ , 95,154
  /* 118 */ ,154
  /* 119 */ ,155
  /* 120 */ ,156
  /* 121 */ ,157
  /* 122 */ ,158
  /* 123 */ ,138
  /* 124 */ ,159
  /* 125 */ ,160
  /* 126 */ ,161
  /* 127 */ , 19
  /* 128 */ , 20
  /* 129 */ , 21
  /* 130 */ , 52
  /* 131 */ ,102,121,103
  /* 132 */ , 15,102,121, 10,162,103
  /* 133 */ ,102,111,103
  /* 134 */ , 63,102,121, 34,121, 33,121,103
  /* 135 */ , 63,102,121, 85,121, 85,121,103
  /* 136 */ , 79,102,121, 85,121, 85,121,103
  /* 137 */ , 80,102,121, 85,121, 85,121,103
  /* 138 */ , 81,102,121, 85,121, 85,121, 85,121, 85,121, 85,121,103
  /* 139 */ , 17,102,163,103
  /* 140 */ ,164,102,128,121,103
  /* 141 */ , 49
  /* 142 */ , 48
  /* 143 */ , 64
  /* 144 */ ,128,121
  /* 145 */ , 97
  /* 146 */ ,117
  /* 147 */ ,117, 86,117
  /* 148 */ , 23,117, 22, 33,111
  /* 149 */ , 32,117, 42,137
  /* 150 */ , 18, 65,117, 47,117
  /* 151 */ , 18, 65,117,102,165, 85, 56, 45,102,166,103,103
  /* 152 */ , 18,167, 38,117, 54,117,102,166,103
  /* 154 */ , 66
  /* 155 */ ,166, 85,168
  /* 156 */ ,168
  /* 157 */ ,117,146
  /* 158 */ ,165, 85,169
  /* 159 */ ,169
  /* 160 */ ,117,162,170,171
  /* 161 */ ,172, 71
  /* 162 */ ,172, 72
  /* 163 */ ,172, 71,102,155,103
  /* 164 */ ,172, 72,102,155,103
  /* 165 */ ,172, 78
  /* 166 */ ,172, 76
  /* 167 */ ,172, 77
  /* 168 */ , 75
  /* 169 */ , 74
  /* 170 */ , 79
  /* 171 */ , 80
  /* 172 */ , 81
  /* 173 */ , 73,102,155,103
  /* 175 */ , 61
  /* 176 */ , 67
  /* 178 */ ,101, 52
  /* 180 */ , 24,173
  /* 181 */ ,161
  /* 182 */ ,155
  /* 183 */ , 95,155
  /* 184 */ , 96,155
  /* 185 */ ,156
  /* 186 */ ,157
  /* 187 */ ,158
  /* 188 */ , 28, 65,117
  /* 189 */ , 28, 38,117
  /* 190 */ , 31,107
  /* 191 */ ,105
  /* 192 */ ,  7
  /* 193 */ ,  6
  /* 194 */ ,  2
  /* 195 */ ,  1
  /* 196 */ ,  3
  /* 197 */ ,  4
  /* 198 */ ,  5
}; // Size of table:944 bytes.

/****************************************************************************\
* The symbolName[] array is indexed by symbol and holds                      *
* the name of each symbol (terminal or nonTerminal).                         *
* Used for debugging.                                                        *
\****************************************************************************/
static const TCHAR *symbolName[174] = {
  /*   0 */ _T("EOI"),
  /*   1 */ _T("STRING"),
  /*   2 */ _T("NUMBER"),
  /*   3 */ _T("DATECONST"),
  /*   4 */ _T("TIMECONST"),
  /*   5 */ _T("TIMESTAMPCONST"),
  /*   6 */ _T("PARAM"),
  /*   7 */ _T("HOSTVAR"),
  /*   8 */ _T("ACCESSS"),
  /*   9 */ _T("ALL"),
  /*  10 */ _T("AS"),
  /*  11 */ _T("ASCENDING"),
  /*  12 */ _T("BETWEEN"),
  /*  13 */ _T("BROWSE"),
  /*  14 */ _T("BY"),
  /*  15 */ _T("CAST"),
  /*  16 */ _T("COLUMN"),
  /*  17 */ _T("COUNT"),
  /*  18 */ _T("CREATE"),
  /*  19 */ _T("CURRENTDATE"),
  /*  20 */ _T("CURRENTTIME"),
  /*  21 */ _T("CURRENTTIMESTAMP"),
  /*  22 */ _T("CURSOR"),
  /*  23 */ _T("DECLARE"),
  /*  24 */ _T("DEFAULT"),
  /*  25 */ _T("DELETESYM"),
  /*  26 */ _T("DESCENDING"),
  /*  27 */ _T("DISTINCT"),
  /*  28 */ _T("DROP"),
  /*  29 */ _T("EXCLUSIVE"),
  /*  30 */ _T("EXISTS"),
  /*  31 */ _T("EXPLAIN"),
  /*  32 */ _T("FETCH"),
  /*  33 */ _T("FOR"),
  /*  34 */ _T("FROM"),
  /*  35 */ _T("GROUP"),
  /*  36 */ _T("HAVING"),
  /*  37 */ _T("INSYM"),
  /*  38 */ _T("INDEX"),
  /*  39 */ _T("INSERT"),
  /*  40 */ _T("INDICATOR"),
  /*  41 */ _T("INNER"),
  /*  42 */ _T("INTO"),
  /*  43 */ _T("IS"),
  /*  44 */ _T("JOIN"),
  /*  45 */ _T("KEY"),
  /*  46 */ _T("LEFT"),
  /*  47 */ _T("LIKE"),
  /*  48 */ _T("MAX"),
  /*  49 */ _T("MIN"),
  /*  50 */ _T("MODE"),
  /*  51 */ _T("MULT"),
  /*  52 */ _T("NULLVAL"),
  /*  53 */ _T("ISNULL"),
  /*  54 */ _T("ON"),
  /*  55 */ _T("ORDER"),
  /*  56 */ _T("PRIMARY"),
  /*  57 */ _T("REPEATABLE"),
  /*  58 */ _T("SELECT"),
  /*  59 */ _T("SET"),
  /*  60 */ _T("SHARE"),
  /*  61 */ _T("SIGNED"),
  /*  62 */ _T("STABLE"),
  /*  63 */ _T("SUBSTRING"),
  /*  64 */ _T("SUM"),
  /*  65 */ _T("TABLE"),
  /*  66 */ _T("UNIQUE"),
  /*  67 */ _T("UNSIGNED"),
  /*  68 */ _T("UPDATE"),
  /*  69 */ _T("VALUES"),
  /*  70 */ _T("WHERE"),
  /*  71 */ _T("TYPECHAR"),
  /*  72 */ _T("TYPEWCHAR"),
  /*  73 */ _T("TYPEVARCHAR"),
  /*  74 */ _T("TYPEDOUBLE"),
  /*  75 */ _T("TYPEFLOAT"),
  /*  76 */ _T("TYPEINT"),
  /*  77 */ _T("TYPELONG"),
  /*  78 */ _T("TYPESHORT"),
  /*  79 */ _T("TYPEDATE"),
  /*  80 */ _T("TYPETIME"),
  /*  81 */ _T("TYPETIMESTAMP"),
  /*  82 */ _T("UNION"),
  /*  83 */ _T("SETDIFFERENCE"),
  /*  84 */ _T("INTERSECT"),
  /*  85 */ _T("COMMA"),
  /*  86 */ _T("DOT"),
  /*  87 */ _T("EQUAL"),
  /*  88 */ _T("NOTEQ"),
  /*  89 */ _T("RELOPLE"),
  /*  90 */ _T("RELOPLT"),
  /*  91 */ _T("RELOPGE"),
  /*  92 */ _T("RELOPGT"),
  /*  93 */ _T("OR"),
  /*  94 */ _T("AND"),
  /*  95 */ _T("PLUS"),
  /*  96 */ _T("MINUS"),
  /*  97 */ _T("STAR"),
  /*  98 */ _T("DIVOP"),
  /*  99 */ _T("MODOP"),
  /* 100 */ _T("EXPO"),
  /* 101 */ _T("NOT"),
  /* 102 */ _T("LPAR"),
  /* 103 */ _T("RPAR"),
  /* 104 */ _T("CONCAT"),
  /* 105 */ _T("NAME"),
  /* 106 */ _T("start"),
  /* 107 */ _T("stmt"),
  /* 108 */ _T("update_stmt"),
  /* 109 */ _T("insert_stmt"),
  /* 110 */ _T("delete_stmt"),
  /* 111 */ _T("select_stmt"),
  /* 112 */ _T("declare_stmt"),
  /* 113 */ _T("fetch_stmt"),
  /* 114 */ _T("create_stmt"),
  /* 115 */ _T("drop_stmt"),
  /* 116 */ _T("explain_stmt"),
  /* 117 */ _T("name"),
  /* 118 */ _T("assign_list"),
  /* 119 */ _T("opt_where"),
  /* 120 */ _T("assign"),
  /* 121 */ _T("expr"),
  /* 122 */ _T("name_list"),
  /* 123 */ _T("opt_expr_list"),
  /* 124 */ _T("opt_access"),
  /* 125 */ _T("expr_list"),
  /* 126 */ _T("opt_all"),
  /* 127 */ _T("simple_select"),
  /* 128 */ _T("opt_alldistinct"),
  /* 129 */ _T("select_list"),
  /* 130 */ _T("opt_into"),
  /* 131 */ _T("from_table_list"),
  /* 132 */ _T("opt_groupby"),
  /* 133 */ _T("opt_having"),
  /* 134 */ _T("opt_orderby"),
  /* 135 */ _T("opt_lockmode"),
  /* 136 */ _T("select_elem"),
  /* 137 */ _T("hostvar_list"),
  /* 138 */ _T("hostindi_var"),
  /* 139 */ _T("hostvar"),
  /* 140 */ _T("opt_indicator"),
  /* 141 */ _T("from_table"),
  /* 142 */ _T("opt_join_type"),
  /* 143 */ _T("search_condition"),
  /* 144 */ _T("order_elem_list"),
  /* 145 */ _T("order_elem"),
  /* 146 */ _T("opt_ascdesc"),
  /* 147 */ _T("access_mode"),
  /* 148 */ _T("lockmode"),
  /* 149 */ _T("boolean_primary"),
  /* 150 */ _T("predicate"),
  /* 151 */ _T("par_expr_list"),
  /* 152 */ _T("rel_op"),
  /* 153 */ _T("set_expr"),
  /* 154 */ _T("unary"),
  /* 155 */ _T("number_const"),
  /* 156 */ _T("date_const"),
  /* 157 */ _T("time_const"),
  /* 158 */ _T("timestamp_const"),
  /* 159 */ _T("tab_col"),
  /* 160 */ _T("param"),
  /* 161 */ _T("string_const"),
  /* 162 */ _T("type_def"),
  /* 163 */ _T("count_arg"),
  /* 164 */ _T("min_max_sum"),
  /* 165 */ _T("col_def_list"),
  /* 166 */ _T("keyfield_list"),
  /* 167 */ _T("opt_unique"),
  /* 168 */ _T("keyfield"),
  /* 169 */ _T("col_def"),
  /* 170 */ _T("opt_not_null"),
  /* 171 */ _T("opt_defaultvalue"),
  /* 172 */ _T("opt_sign"),
  /* 173 */ _T("constant")
}; // Total size of strings:1776 bytes, size of pointertable:1392 bytes.

static const ParserShortTables SqlTables_s(compressedSet, compressedLasets
                                          ,action, successor, productionLength, leftSide
                                          ,rightSideTable, symbolName
                                          ,106, 174, 199, 404);

const ParserTables *SqlTables = &SqlTables_s;
// Size of SqlTables_s: 88 bytes. Size of SqlTables:8 bytes


// Total size of table data:22.048 bytes.


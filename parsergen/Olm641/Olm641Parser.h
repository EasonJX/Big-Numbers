/* DO NOT EDIT THIS FILE - it is machine generated */
#pragma once

#include <LRparser.h>

const extern ParserTables *Olm641Tables;

#include "olm641symbol.h"

class Olm641Parser : public LRparser {
public:
  Olm641Parser(Scanner *lex=NULL) : LRparser(*Olm641Tables,lex) {}
private:
  int m_dollardollar,*m_stacktop,m_userstack[256];
  int reduceAction(unsigned int prod);
  void userStackInit()                           { m_stacktop = m_userstack;         }
  void userStackShiftSymbol(unsigned int symbol) { m_stacktop++;                     } // push 1 element (garbage) on userstack
  void userStackPopSymbols(unsigned int count)   { m_stacktop -= count;              } // pop count symbols from userstack
  void userStackShiftDollarDollar()              { *(++m_stacktop) = m_dollardollar; } // push($$) on userstack
  void defaultReduce(unsigned int p)             { m_dollardollar  = *m_stacktop;    } // $$ = $1
};




/* DO NOT EDIT THIS FILE - it is machine generated */
#pragma once

#include <LRparser.h>

#include "olm641symbol.h"

class Olm641Parser : public LRparser {
public:
  static const ParserTables *Olm641Tables;
public:
  Olm641Parser(Scanner *lex=NULL) : LRparser(*Olm641Tables,lex) {}
private:
  int m_leftSide,*m_stacktop,m_userstack[256];
  void userStackInit()                           { m_stacktop = m_userstack;               }
  void userStackShiftSymbol(unsigned int symbol) { m_stacktop++;                           } // push 1 element (garbage) on userstack
  void userStackPopSymbols( unsigned int count ) { m_stacktop      -= count;               } // pop count symbols from userstack
  void userStackShiftLeftSide()                  { *(++m_stacktop) = m_leftSide;           } // push($$) on userstack
  void defaultReduce(       unsigned int prod)   { m_leftSide      = *m_stacktop;          } // $$ = $1
  int  reduceAction(        unsigned int prod);
};


